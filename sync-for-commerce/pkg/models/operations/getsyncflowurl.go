// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v3/pkg/models/shared"
	"net/http"
)

type GetSyncFlowURLRequest struct {
	// Accounting platform key
	AccountingKey string `pathParam:"style=simple,explode=false,name=accountingKey"`
	// Commerce platform key
	CommerceKey string `pathParam:"style=simple,explode=false,name=commerceKey"`
	// Identifier for your merchant, can be the merchant name or Codat company id.
	MerchantIdentifier *string `queryParam:"style=form,explode=true,name=merchantIdentifier"`
}

func (o *GetSyncFlowURLRequest) GetAccountingKey() string {
	if o == nil {
		return ""
	}
	return o.AccountingKey
}

func (o *GetSyncFlowURLRequest) GetCommerceKey() string {
	if o == nil {
		return ""
	}
	return o.CommerceKey
}

func (o *GetSyncFlowURLRequest) GetMerchantIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.MerchantIdentifier
}

type GetSyncFlowURLResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	SyncFlowURL *shared.SyncFlowURL
}

func (o *GetSyncFlowURLResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSyncFlowURLResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSyncFlowURLResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSyncFlowURLResponse) GetSyncFlowURL() *shared.SyncFlowURL {
	if o == nil {
		return nil
	}
	return o.SyncFlowURL
}
