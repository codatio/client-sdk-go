// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v2/pkg/models/shared"
	"net/http"
)

type GetVisibleAccountsRequest struct {
	// Unique identifier for your client in Codat.
	ClientID string `pathParam:"style=simple,explode=false,name=clientId"`
	// A unique 4-letter key to represent a platform in each integration.
	PlatformKey string `pathParam:"style=simple,explode=false,name=platformKey"`
}

func (o *GetVisibleAccountsRequest) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *GetVisibleAccountsRequest) GetPlatformKey() string {
	if o == nil {
		return ""
	}
	return o.PlatformKey
}

type GetVisibleAccountsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	VisibleAccounts *shared.VisibleAccounts
}

func (o *GetVisibleAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetVisibleAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetVisibleAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetVisibleAccountsResponse) GetVisibleAccounts() *shared.VisibleAccounts {
	if o == nil {
		return nil
	}
	return o.VisibleAccounts
}
