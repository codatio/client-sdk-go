// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v3/pkg/models/shared"
	"net/http"
)

type UpdateVisibleAccountsSyncFlowRequest struct {
	VisibleAccounts *shared.VisibleAccounts `request:"mediaType=application/json"`
	// A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
	PlatformKey string `pathParam:"style=simple,explode=false,name=platformKey"`
}

func (o *UpdateVisibleAccountsSyncFlowRequest) GetVisibleAccounts() *shared.VisibleAccounts {
	if o == nil {
		return nil
	}
	return o.VisibleAccounts
}

func (o *UpdateVisibleAccountsSyncFlowRequest) GetPlatformKey() string {
	if o == nil {
		return ""
	}
	return o.PlatformKey
}

type UpdateVisibleAccountsSyncFlowResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	VisibleAccounts *shared.VisibleAccounts
}

func (o *UpdateVisibleAccountsSyncFlowResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateVisibleAccountsSyncFlowResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateVisibleAccountsSyncFlowResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateVisibleAccountsSyncFlowResponse) GetVisibleAccounts() *shared.VisibleAccounts {
	if o == nil {
		return nil
	}
	return o.VisibleAccounts
}
