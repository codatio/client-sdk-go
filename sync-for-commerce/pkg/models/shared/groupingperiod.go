// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v2/pkg/utils"
)

type GroupingPeriod struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Array of grouping period options.
	GroupingPeriodOptions []string `json:"groupingPeriodOptions,omitempty"`
	// Grouping period i.e. Daily sales.
	SelectedGroupingPeriod *string `json:"selectedGroupingPeriod,omitempty"`
}

func (g GroupingPeriod) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GroupingPeriod) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GroupingPeriod) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *GroupingPeriod) GetGroupingPeriodOptions() []string {
	if o == nil {
		return nil
	}
	return o.GroupingPeriodOptions
}

func (o *GroupingPeriod) GetSelectedGroupingPeriod() *string {
	if o == nil {
		return nil
	}
	return o.SelectedGroupingPeriod
}
