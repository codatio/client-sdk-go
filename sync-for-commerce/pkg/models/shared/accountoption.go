// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v2/pkg/utils"
)

type AccountOption struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Classification of the type of G/L account.
	Classification *string `json:"classification,omitempty"`
	// Identifier for the account, unique for the company.
	ID *string `json:"id,omitempty"`
	// Name of the account.
	Name *string `json:"name,omitempty"`
	// Reference given to each nominal account for a business. It ensures money is allocated to the correct account. This code isn't a unique identifier in the Codat system.
	NominalCode *string `json:"nominalCode,omitempty"`
}

func (a AccountOption) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountOption) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountOption) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *AccountOption) GetClassification() *string {
	if o == nil {
		return nil
	}
	return o.Classification
}

func (o *AccountOption) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AccountOption) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AccountOption) GetNominalCode() *string {
	if o == nil {
		return nil
	}
	return o.NominalCode
}
