// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-commerce/v2/pkg/utils"
)

type Fees struct {
	AdditionalProperties map[string]interface{}   `additionalProperties:"true" json:"-"`
	Accounts             map[string]ConfigAccount `json:"accounts,omitempty"`
	FeesSupplier         *FeesSupplier            `json:"feesSupplier,omitempty"`
	// Boolean indicator to enable syncing fees.
	SyncFees *bool `json:"syncFees,omitempty"`
}

func (f Fees) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *Fees) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Fees) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Fees) GetAccounts() map[string]ConfigAccount {
	if o == nil {
		return nil
	}
	return o.Accounts
}

func (o *Fees) GetFeesSupplier() *FeesSupplier {
	if o == nil {
		return nil
	}
	return o.FeesSupplier
}

func (o *Fees) GetSyncFees() *bool {
	if o == nil {
		return nil
	}
	return o.SyncFees
}
