// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataTypeFeatureDataType - Available Data types
type DataTypeFeatureDataType string

const (
	DataTypeFeatureDataTypeAccountTransactions          DataTypeFeatureDataType = "accountTransactions"
	DataTypeFeatureDataTypeBalanceSheet                 DataTypeFeatureDataType = "balanceSheet"
	DataTypeFeatureDataTypeBankAccounts                 DataTypeFeatureDataType = "bankAccounts"
	DataTypeFeatureDataTypeBankTransactions             DataTypeFeatureDataType = "bankTransactions"
	DataTypeFeatureDataTypeBillCreditNotes              DataTypeFeatureDataType = "billCreditNotes"
	DataTypeFeatureDataTypeBillPayments                 DataTypeFeatureDataType = "billPayments"
	DataTypeFeatureDataTypeBills                        DataTypeFeatureDataType = "bills"
	DataTypeFeatureDataTypeCashFlowStatement            DataTypeFeatureDataType = "cashFlowStatement"
	DataTypeFeatureDataTypeChartOfAccounts              DataTypeFeatureDataType = "chartOfAccounts"
	DataTypeFeatureDataTypeCompany                      DataTypeFeatureDataType = "company"
	DataTypeFeatureDataTypeCreditNotes                  DataTypeFeatureDataType = "creditNotes"
	DataTypeFeatureDataTypeCustomers                    DataTypeFeatureDataType = "customers"
	DataTypeFeatureDataTypeDirectCosts                  DataTypeFeatureDataType = "directCosts"
	DataTypeFeatureDataTypeDirectIncomes                DataTypeFeatureDataType = "directIncomes"
	DataTypeFeatureDataTypeInvoices                     DataTypeFeatureDataType = "invoices"
	DataTypeFeatureDataTypeItems                        DataTypeFeatureDataType = "items"
	DataTypeFeatureDataTypeJournalEntries               DataTypeFeatureDataType = "journalEntries"
	DataTypeFeatureDataTypeJournals                     DataTypeFeatureDataType = "journals"
	DataTypeFeatureDataTypePaymentMethods               DataTypeFeatureDataType = "paymentMethods"
	DataTypeFeatureDataTypePayments                     DataTypeFeatureDataType = "payments"
	DataTypeFeatureDataTypeProfitAndLoss                DataTypeFeatureDataType = "profitAndLoss"
	DataTypeFeatureDataTypePurchaseOrders               DataTypeFeatureDataType = "purchaseOrders"
	DataTypeFeatureDataTypeSalesOrders                  DataTypeFeatureDataType = "salesOrders"
	DataTypeFeatureDataTypeSuppliers                    DataTypeFeatureDataType = "suppliers"
	DataTypeFeatureDataTypeTaxRates                     DataTypeFeatureDataType = "taxRates"
	DataTypeFeatureDataTypeTrackingCategories           DataTypeFeatureDataType = "trackingCategories"
	DataTypeFeatureDataTypeTransfers                    DataTypeFeatureDataType = "transfers"
	DataTypeFeatureDataTypeBankingAccountBalances       DataTypeFeatureDataType = "banking-accountBalances"
	DataTypeFeatureDataTypeBankingAccounts              DataTypeFeatureDataType = "banking-accounts"
	DataTypeFeatureDataTypeBankingTransactionCategories DataTypeFeatureDataType = "banking-transactionCategories"
	DataTypeFeatureDataTypeBankingTransactions          DataTypeFeatureDataType = "banking-transactions"
	DataTypeFeatureDataTypeCommerceCompanyInfo          DataTypeFeatureDataType = "commerce-companyInfo"
	DataTypeFeatureDataTypeCommerceCustomers            DataTypeFeatureDataType = "commerce-customers"
	DataTypeFeatureDataTypeCommerceDisputes             DataTypeFeatureDataType = "commerce-disputes"
	DataTypeFeatureDataTypeCommerceLocations            DataTypeFeatureDataType = "commerce-locations"
	DataTypeFeatureDataTypeCommerceOrders               DataTypeFeatureDataType = "commerce-orders"
	DataTypeFeatureDataTypeCommercePaymentMethods       DataTypeFeatureDataType = "commerce-paymentMethods"
	DataTypeFeatureDataTypeCommercePayments             DataTypeFeatureDataType = "commerce-payments"
	DataTypeFeatureDataTypeCommerceProductCategories    DataTypeFeatureDataType = "commerce-productCategories"
	DataTypeFeatureDataTypeCommerceProducts             DataTypeFeatureDataType = "commerce-products"
	DataTypeFeatureDataTypeCommerceTaxComponents        DataTypeFeatureDataType = "commerce-taxComponents"
	DataTypeFeatureDataTypeCommerceTransactions         DataTypeFeatureDataType = "commerce-transactions"
)

func (e DataTypeFeatureDataType) ToPointer() *DataTypeFeatureDataType {
	return &e
}

func (e *DataTypeFeatureDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accountTransactions":
		fallthrough
	case "balanceSheet":
		fallthrough
	case "bankAccounts":
		fallthrough
	case "bankTransactions":
		fallthrough
	case "billCreditNotes":
		fallthrough
	case "billPayments":
		fallthrough
	case "bills":
		fallthrough
	case "cashFlowStatement":
		fallthrough
	case "chartOfAccounts":
		fallthrough
	case "company":
		fallthrough
	case "creditNotes":
		fallthrough
	case "customers":
		fallthrough
	case "directCosts":
		fallthrough
	case "directIncomes":
		fallthrough
	case "invoices":
		fallthrough
	case "items":
		fallthrough
	case "journalEntries":
		fallthrough
	case "journals":
		fallthrough
	case "paymentMethods":
		fallthrough
	case "payments":
		fallthrough
	case "profitAndLoss":
		fallthrough
	case "purchaseOrders":
		fallthrough
	case "salesOrders":
		fallthrough
	case "suppliers":
		fallthrough
	case "taxRates":
		fallthrough
	case "trackingCategories":
		fallthrough
	case "transfers":
		fallthrough
	case "banking-accountBalances":
		fallthrough
	case "banking-accounts":
		fallthrough
	case "banking-transactionCategories":
		fallthrough
	case "banking-transactions":
		fallthrough
	case "commerce-companyInfo":
		fallthrough
	case "commerce-customers":
		fallthrough
	case "commerce-disputes":
		fallthrough
	case "commerce-locations":
		fallthrough
	case "commerce-orders":
		fallthrough
	case "commerce-paymentMethods":
		fallthrough
	case "commerce-payments":
		fallthrough
	case "commerce-productCategories":
		fallthrough
	case "commerce-products":
		fallthrough
	case "commerce-taxComponents":
		fallthrough
	case "commerce-transactions":
		*e = DataTypeFeatureDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataTypeFeatureDataType: %v", v)
	}
}

// DataTypeFeature - Describes support for a given datatype and associated operations
type DataTypeFeature struct {
	// Available Data types
	DataType          *DataTypeFeatureDataType `json:"dataType,omitempty"`
	SupportedFeatures []SupportedFeature       `json:"supportedFeatures"`
}
