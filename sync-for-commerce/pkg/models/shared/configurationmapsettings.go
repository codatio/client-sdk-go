// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OutputFormat - The format commerce transactions are stored in the accounting software.
type OutputFormat string

const (
	OutputFormatJournalEntry OutputFormat = "JournalEntry"
)

func (e OutputFormat) ToPointer() *OutputFormat {
	return &e
}
func (e *OutputFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JournalEntry":
		*e = OutputFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OutputFormat: %v", v)
	}
}

type ConfigurationMapSettings struct {
	// The format commerce transactions are stored in the accounting software.
	OutputFormat *OutputFormat `json:"outputFormat,omitempty"`
}

func (o *ConfigurationMapSettings) GetOutputFormat() *OutputFormat {
	if o == nil {
		return nil
	}
	return o.OutputFormat
}
