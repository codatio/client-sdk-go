// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoiceToType - The type of contact.
type InvoiceToType string

const (
	InvoiceToTypeCustomer InvoiceToType = "customer"
)

func (e InvoiceToType) ToPointer() *InvoiceToType {
	return &e
}
func (e *InvoiceToType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customer":
		*e = InvoiceToType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceToType: %v", v)
	}
}

// InvoiceTo - Unique identifier for the customer billed for the transaction. The `invoiceTo` object is currently supported only for QuickBooks Online and QuickBooks Desktop.
type InvoiceTo struct {
	// identifier of customer.
	ID *string `json:"id,omitempty"`
	// The type of contact.
	Type *InvoiceToType `json:"type,omitempty"`
}

func (o *InvoiceTo) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *InvoiceTo) GetType() *InvoiceToType {
	if o == nil {
		return nil
	}
	return o.Type
}
