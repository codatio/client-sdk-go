// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-expenses/v4/pkg/utils"
	"github.com/ericlagergren/decimal"
)

type AdjustmentTransactionLine struct {
	AccountRef RecordRef `json:"accountRef"`
	// Amount of the line. A positive line represents a debit; a negative line represents a credit.
	Amount *decimal.Big `decimal:"number" json:"amount"`
	// Any private, company notes about the transaction.
	Description *string `json:"description,omitempty"`
	// Unique identifier for the customer billed for the transaction. The `invoiceTo` object is currently supported only for QuickBooks Online and QuickBooks Desktop.
	InvoiceTo    *InvoiceTo                         `json:"invoiceTo,omitempty"`
	TrackingRefs []TrackingRefAdjustmentTransaction `json:"trackingRefs,omitempty"`
}

func (a AdjustmentTransactionLine) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AdjustmentTransactionLine) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AdjustmentTransactionLine) GetAccountRef() RecordRef {
	if o == nil {
		return RecordRef{}
	}
	return o.AccountRef
}

func (o *AdjustmentTransactionLine) GetAmount() *decimal.Big {
	if o == nil {
		return new(decimal.Big).SetFloat64(0.0)
	}
	return o.Amount
}

func (o *AdjustmentTransactionLine) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AdjustmentTransactionLine) GetInvoiceTo() *InvoiceTo {
	if o == nil {
		return nil
	}
	return o.InvoiceTo
}

func (o *AdjustmentTransactionLine) GetTrackingRefs() []TrackingRefAdjustmentTransaction {
	if o == nil {
		return nil
	}
	return o.TrackingRefs
}
