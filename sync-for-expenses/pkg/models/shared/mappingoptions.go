// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-expenses/v3/pkg/utils"
)

type MappingOptions struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Array of available accounts for mapping.
	Accounts []AccountMappingInfo `json:"accounts,omitempty"`
	// Name of the expense integration.
	ExpenseProvider *string `json:"expenseProvider,omitempty"`
	// Array of available tax rates for mapping.
	TaxRates []TaxRateMappingInfo `json:"taxRates,omitempty"`
	// Array of available tracking categories for mapping.
	TrackingCategories []TrackingCategoryMappingInfo `json:"trackingCategories,omitempty"`
}

func (m MappingOptions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MappingOptions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MappingOptions) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *MappingOptions) GetAccounts() []AccountMappingInfo {
	if o == nil {
		return nil
	}
	return o.Accounts
}

func (o *MappingOptions) GetExpenseProvider() *string {
	if o == nil {
		return nil
	}
	return o.ExpenseProvider
}

func (o *MappingOptions) GetTaxRates() []TaxRateMappingInfo {
	if o == nil {
		return nil
	}
	return o.TaxRates
}

func (o *MappingOptions) GetTrackingCategories() []TrackingCategoryMappingInfo {
	if o == nil {
		return nil
	}
	return o.TrackingCategories
}
