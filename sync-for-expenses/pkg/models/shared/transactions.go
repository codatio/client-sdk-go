// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-expenses/v3/pkg/utils"
)

type Transactions struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Links                Links                  `json:"_links"`
	// Current page number.
	PageNumber int64 `json:"pageNumber"`
	// Number of items to return in results array.
	PageSize int64         `json:"pageSize"`
	Results  []Transaction `json:"results,omitempty"`
	// Total number of items.
	TotalResults int64 `json:"totalResults"`
}

func (t Transactions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *Transactions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Transactions) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Transactions) GetLinks() Links {
	if o == nil {
		return Links{}
	}
	return o.Links
}

func (o *Transactions) GetPageNumber() int64 {
	if o == nil {
		return 0
	}
	return o.PageNumber
}

func (o *Transactions) GetPageSize() int64 {
	if o == nil {
		return 0
	}
	return o.PageSize
}

func (o *Transactions) GetResults() []Transaction {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *Transactions) GetTotalResults() int64 {
	if o == nil {
		return 0
	}
	return o.TotalResults
}
