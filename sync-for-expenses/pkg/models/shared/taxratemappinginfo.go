// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-expenses/v4/pkg/utils"
	"github.com/ericlagergren/decimal"
)

type TaxRateMappingInfo struct {
	// Code for the tax rate from the accounting software.
	Code *string `json:"code,omitempty"`
	// Effective tax rate.
	EffectiveTaxRate *decimal.Big `decimal:"number" json:"effectiveTaxRate,omitempty"`
	// Unique identifier of tax rate.
	ID *string `json:"id,omitempty"`
	// Name of the tax rate in the accounting software.
	Name *string `json:"name,omitempty"`
	// Total (not compounded) sum of the components of a tax rate.
	TotalTaxRate *decimal.Big `decimal:"number" json:"totalTaxRate,omitempty"`
	// Supported transaction types for the account.
	ValidTransactionTypes []ValidTransactionTypes `json:"validTransactionTypes,omitempty"`
}

func (t TaxRateMappingInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaxRateMappingInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaxRateMappingInfo) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *TaxRateMappingInfo) GetEffectiveTaxRate() *decimal.Big {
	if o == nil {
		return nil
	}
	return o.EffectiveTaxRate
}

func (o *TaxRateMappingInfo) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TaxRateMappingInfo) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TaxRateMappingInfo) GetTotalTaxRate() *decimal.Big {
	if o == nil {
		return nil
	}
	return o.TotalTaxRate
}

func (o *TaxRateMappingInfo) GetValidTransactionTypes() []ValidTransactionTypes {
	if o == nil {
		return nil
	}
	return o.ValidTransactionTypes
}
