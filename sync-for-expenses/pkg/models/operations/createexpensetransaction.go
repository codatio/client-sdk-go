// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-expenses/v5/pkg/models/shared"
	"net/http"
)

type CreateExpenseTransactionRequest struct {
	RequestBody []shared.ExpenseTransaction `request:"mediaType=application/json"`
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
}

func (o *CreateExpenseTransactionRequest) GetRequestBody() []shared.ExpenseTransaction {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *CreateExpenseTransactionRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

type CreateExpenseTransactionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	CreateExpenseResponse *shared.CreateExpenseResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateExpenseTransactionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateExpenseTransactionResponse) GetCreateExpenseResponse() *shared.CreateExpenseResponse {
	if o == nil {
		return nil
	}
	return o.CreateExpenseResponse
}

func (o *CreateExpenseTransactionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateExpenseTransactionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
