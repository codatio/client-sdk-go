// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetAllBankAccountRequest struct {
	// Unique identifier for an account
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type GetAllBankAccount200ApplicationJSONModifiedDate struct {
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
}

type GetAllBankAccount200ApplicationJSONSourceModifiedDate struct {
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
}

// GetAllBankAccount200ApplicationJSON - Success
type GetAllBankAccount200ApplicationJSON struct {
	AccountName      *string  `json:"accountName,omitempty"`
	AccountNumber    *string  `json:"accountNumber,omitempty"`
	AvailableBalance *float64 `json:"availableBalance,omitempty"`
	Balance          *float64 `json:"balance,omitempty"`
	Currency         *string  `json:"currency,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > ðŸ“˜ Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	FromDate           *string                                                `json:"fromDate,omitempty"`
	Iban               *string                                                `json:"iban,omitempty"`
	ID                 *string                                                `json:"id,omitempty"`
	Institution        *string                                                `json:"institution,omitempty"`
	ModifiedDate       *GetAllBankAccount200ApplicationJSONModifiedDate       `json:"modifiedDate,omitempty"`
	NominalCode        *string                                                `json:"nominalCode,omitempty"`
	OverdraftLimit     *float64                                               `json:"overdraftLimit,omitempty"`
	SortCode           *string                                                `json:"sortCode,omitempty"`
	SourceModifiedDate *GetAllBankAccount200ApplicationJSONSourceModifiedDate `json:"sourceModifiedDate,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > ðŸ“˜ Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	ToDate *string `json:"toDate,omitempty"`
}

type GetAllBankAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetAllBankAccount200ApplicationJSONObject *GetAllBankAccount200ApplicationJSON
}
