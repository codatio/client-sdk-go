// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// PushCreditNoteSourceModifiedDateCustomerRef - Reference to the customer the credit note has been issued to.
type PushCreditNoteSourceModifiedDateCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

// PushCreditNoteSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type PushCreditNoteSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// PushCreditNoteSourceModifiedDateLineItemsItemRef - Reference to the item the line is linked to.
type PushCreditNoteSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// PushCreditNoteSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type PushCreditNoteSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// PushCreditNoteSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type PushCreditNoteSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type PushCreditNoteSourceModifiedDateLineItemsTrackingCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

type PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnum string

const (
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnumUnknown       PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Unknown"
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnumNotApplicable PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnum = "NotApplicable"
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnumProject       PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Project"
)

type PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnum string

const (
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnumUnknown       PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Unknown"
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnumNotApplicable PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "NotApplicable"
	PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnumProject       PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Project"
)

type PushCreditNoteSourceModifiedDateLineItemsTrackingProjectRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// PushCreditNoteSourceModifiedDateLineItemsTracking - Categories, and a project and customer, against which the item is tracked.
type PushCreditNoteSourceModifiedDateLineItemsTracking struct {
	CategoryRefs []PushCreditNoteSourceModifiedDateLineItemsTrackingCategoryRefs   `json:"categoryRefs"`
	CustomerRef  *PushCreditNoteSourceModifiedDateLineItemsTrackingCustomerRef     `json:"customerRef,omitempty"`
	IsBilledTo   PushCreditNoteSourceModifiedDateLineItemsTrackingIsBilledToEnum   `json:"isBilledTo"`
	IsRebilledTo PushCreditNoteSourceModifiedDateLineItemsTrackingIsRebilledToEnum `json:"isRebilledTo"`
	ProjectRef   *PushCreditNoteSourceModifiedDateLineItemsTrackingProjectRef      `json:"projectRef,omitempty"`
}

type PushCreditNoteSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *PushCreditNoteSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Friendly name of each line item. For example, the goods or service for which credit has been issued.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate of any discount applied to the line item.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	IsDirectIncome     *bool    `json:"isDirectIncome,omitempty"`
	// Reference to the item the line is linked to.
	ItemRef *PushCreditNoteSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units of the goods or service for which credit has been issued.
	Quantity float64 `json:"quantity"`
	// Amount of credit associated with the line item, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax associated with the line item.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *PushCreditNoteSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line item, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Categories, and a project and customer, against which the item is tracked.
	Tracking *PushCreditNoteSourceModifiedDateLineItemsTracking `json:"tracking,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []PushCreditNoteSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Unit price of the goods or service.
	UnitAmount float64 `json:"unitAmount"`
}

type PushCreditNoteSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

type PushCreditNoteSourceModifiedDatePaymentAllocationsAllocation struct {
	// The date the payment was allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// The currency of the transaction.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// The total amount that has been allocated.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// PushCreditNoteSourceModifiedDatePaymentAllocationsPaymentAccountRef - The account that the allocated payment is made from or to.
type PushCreditNoteSourceModifiedDatePaymentAllocationsPaymentAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

type PushCreditNoteSourceModifiedDatePaymentAllocationsPayment struct {
	// The account that the allocated payment is made from or to.
	AccountRef *PushCreditNoteSourceModifiedDatePaymentAllocationsPaymentAccountRef `json:"accountRef,omitempty"`
	// Currency the payment has been made in.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Identifier of the allocated payment.
	ID *string `json:"id,omitempty"`
	// Notes attached to the allocated payment.
	Note *string `json:"note,omitempty"`
	// The date the payment was paid.
	PaidOnDate *time.Time `json:"paidOnDate,omitempty"`
	// Reference to the allocated payment.
	Reference *string `json:"reference,omitempty"`
	// Total amount that was paid.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

type PushCreditNoteSourceModifiedDatePaymentAllocations struct {
	Allocation PushCreditNoteSourceModifiedDatePaymentAllocationsAllocation `json:"allocation"`
	Payment    PushCreditNoteSourceModifiedDatePaymentAllocationsPayment    `json:"payment"`
}

// PushCreditNoteSourceModifiedDateStatusEnum - Current state of the credit note.
type PushCreditNoteSourceModifiedDateStatusEnum string

const (
	PushCreditNoteSourceModifiedDateStatusEnumUnknown       PushCreditNoteSourceModifiedDateStatusEnum = "Unknown"
	PushCreditNoteSourceModifiedDateStatusEnumDraft         PushCreditNoteSourceModifiedDateStatusEnum = "Draft"
	PushCreditNoteSourceModifiedDateStatusEnumSubmitted     PushCreditNoteSourceModifiedDateStatusEnum = "Submitted"
	PushCreditNoteSourceModifiedDateStatusEnumPaid          PushCreditNoteSourceModifiedDateStatusEnum = "Paid"
	PushCreditNoteSourceModifiedDateStatusEnumVoid          PushCreditNoteSourceModifiedDateStatusEnum = "Void"
	PushCreditNoteSourceModifiedDateStatusEnumPartiallyPaid PushCreditNoteSourceModifiedDateStatusEnum = "PartiallyPaid"
)

// PushCreditNoteSourceModifiedDateSupplementalData - Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
type PushCreditNoteSourceModifiedDateSupplementalData struct {
	Content map[string]map[string]interface{} `json:"content,omitempty"`
}

type PushCreditNoteSourceModifiedDateWithholdingTax struct {
	Amount float64 `json:"amount"`
	Name   string  `json:"name"`
}

// PushCreditNoteSourceModifiedDate - > View the coverage for credit notes in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Think of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.
//
// In the Codat system a credit note is issued to a [customer's](https://docs.codat.io/accounting-api#/schemas/Customer) accounts receivable.
//
// It contains details of:
// * The amount of credit remaining and its status.
// * Payment allocations against the payments type, in this case an invoice.
// * Which customers the credit notes have been issued to.
type PushCreditNoteSourceModifiedDate struct {
	AdditionalTaxAmount     *float64 `json:"additionalTaxAmount,omitempty"`
	AdditionalTaxPercentage *float64 `json:"additionalTaxPercentage,omitempty"`
	// Date on which the credit note was fully allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// Friendly reference for the credit note.
	CreditNoteNumber *string `json:"creditNoteNumber,omitempty"`
	// Currency of the credit note.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Reference to the customer the credit note has been issued to.
	CustomerRef *PushCreditNoteSourceModifiedDateCustomerRef `json:"customerRef,omitempty"`
	// Percentage rate (from 0 to 100) of discounts applied to the credit note.
	DiscountPercentage float64 `json:"discountPercentage"`
	// Identifier for the credit note, unique to the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the credit note as recorded in the accounting system.
	IssueDate *time.Time                                  `json:"issueDate,omitempty"`
	LineItems []PushCreditNoteSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *PushCreditNoteSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information about the credit note. Where possible, Codat links to a data field in the accounting platform that is publicly available. This means that the contents of the note field are included when a credit note is emailed from the accounting platform to the customer.
	Note *string `json:"note,omitempty"`
	// An array of payment allocations.
	PaymentAllocations []PushCreditNoteSourceModifiedDatePaymentAllocations `json:"paymentAllocations,omitempty"`
	// Unused balance of totalAmount originally raised.
	RemainingCredit float64 `json:"remainingCredit"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the credit note.
	Status PushCreditNoteSourceModifiedDateStatusEnum `json:"status"`
	// Value of the credit note, including discounts and excluding tax.
	SubTotal float64 `json:"subTotal"`
	// Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
	SupplementalData *PushCreditNoteSourceModifiedDateSupplementalData `json:"supplementalData,omitempty"`
	// Total amount of credit that has been applied to the customer's accounts receivable
	TotalAmount float64 `json:"totalAmount"`
	// Any discounts applied to the credit note amount.
	TotalDiscount float64 `json:"totalDiscount"`
	// Any tax applied to the credit note amount.
	TotalTaxAmount float64                                          `json:"totalTaxAmount"`
	WithholdingTax []PushCreditNoteSourceModifiedDateWithholdingTax `json:"withholdingTax,omitempty"`
}

type PushCreditNoteRequest struct {
	RequestBody      *PushCreditNoteSourceModifiedDate `request:"mediaType=application/json"`
	CompanyID        string                            `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID     string                            `pathParam:"style=simple,explode=false,name=connectionId"`
	TimeoutInMinutes *int                              `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

type PushCreditNote200ApplicationJSONChangesPushOperationRecordRef struct {
	DataType *string `json:"dataType,omitempty"`
	ID       *string `json:"id,omitempty"`
}

type PushCreditNote200ApplicationJSONChangesTypeEnum string

const (
	PushCreditNote200ApplicationJSONChangesTypeEnumUnknown            PushCreditNote200ApplicationJSONChangesTypeEnum = "Unknown"
	PushCreditNote200ApplicationJSONChangesTypeEnumCreated            PushCreditNote200ApplicationJSONChangesTypeEnum = "Created"
	PushCreditNote200ApplicationJSONChangesTypeEnumModified           PushCreditNote200ApplicationJSONChangesTypeEnum = "Modified"
	PushCreditNote200ApplicationJSONChangesTypeEnumDeleted            PushCreditNote200ApplicationJSONChangesTypeEnum = "Deleted"
	PushCreditNote200ApplicationJSONChangesTypeEnumAttachmentUploaded PushCreditNote200ApplicationJSONChangesTypeEnum = "AttachmentUploaded"
)

type PushCreditNote200ApplicationJSONChanges struct {
	AttachmentID *string                                                        `json:"attachmentId,omitempty"`
	RecordRef    *PushCreditNote200ApplicationJSONChangesPushOperationRecordRef `json:"recordRef,omitempty"`
	Type         *PushCreditNote200ApplicationJSONChangesTypeEnum               `json:"type,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateCustomerRef - Reference to the customer the credit note has been issued to.
type PushCreditNote200ApplicationJSONSourceModifiedDateCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsItemRef - Reference to the item the line is linked to.
type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnum string

const (
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnumUnknown       PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Unknown"
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnumNotApplicable PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnum = "NotApplicable"
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnumProject       PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Project"
)

type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnum string

const (
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnumUnknown       PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Unknown"
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnumNotApplicable PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "NotApplicable"
	PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnumProject       PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Project"
)

type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingProjectRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTracking - Categories, and a project and customer, against which the item is tracked.
type PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTracking struct {
	CategoryRefs []PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs   `json:"categoryRefs"`
	CustomerRef  *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCustomerRef     `json:"customerRef,omitempty"`
	IsBilledTo   PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsBilledToEnum   `json:"isBilledTo"`
	IsRebilledTo PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingIsRebilledToEnum `json:"isRebilledTo"`
	ProjectRef   *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingProjectRef      `json:"projectRef,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Friendly name of each line item. For example, the goods or service for which credit has been issued.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate of any discount applied to the line item.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	IsDirectIncome     *bool    `json:"isDirectIncome,omitempty"`
	// Reference to the item the line is linked to.
	ItemRef *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units of the goods or service for which credit has been issued.
	Quantity float64 `json:"quantity"`
	// Amount of credit associated with the line item, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax associated with the line item.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line item, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Categories, and a project and customer, against which the item is tracked.
	Tracking *PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTracking `json:"tracking,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []PushCreditNote200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Unit price of the goods or service.
	UnitAmount float64 `json:"unitAmount"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsAllocation struct {
	// The date the payment was allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// The currency of the transaction.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// The total amount that has been allocated.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsPaymentAccountRef - The account that the allocated payment is made from or to.
type PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsPaymentAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsPayment struct {
	// The account that the allocated payment is made from or to.
	AccountRef *PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsPaymentAccountRef `json:"accountRef,omitempty"`
	// Currency the payment has been made in.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Identifier of the allocated payment.
	ID *string `json:"id,omitempty"`
	// Notes attached to the allocated payment.
	Note *string `json:"note,omitempty"`
	// The date the payment was paid.
	PaidOnDate *time.Time `json:"paidOnDate,omitempty"`
	// Reference to the allocated payment.
	Reference *string `json:"reference,omitempty"`
	// Total amount that was paid.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocations struct {
	Allocation PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsAllocation `json:"allocation"`
	Payment    PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocationsPayment    `json:"payment"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum - Current state of the credit note.
type PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum string

const (
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumUnknown       PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "Unknown"
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumDraft         PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "Draft"
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumSubmitted     PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "Submitted"
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumPaid          PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "Paid"
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumVoid          PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "Void"
	PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnumPartiallyPaid PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum = "PartiallyPaid"
)

// PushCreditNote200ApplicationJSONSourceModifiedDateSupplementalData - Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
type PushCreditNote200ApplicationJSONSourceModifiedDateSupplementalData struct {
	Content map[string]map[string]interface{} `json:"content,omitempty"`
}

type PushCreditNote200ApplicationJSONSourceModifiedDateWithholdingTax struct {
	Amount float64 `json:"amount"`
	Name   string  `json:"name"`
}

// PushCreditNote200ApplicationJSONSourceModifiedDate - > View the coverage for credit notes in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Think of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.
//
// In the Codat system a credit note is issued to a [customer's](https://docs.codat.io/accounting-api#/schemas/Customer) accounts receivable.
//
// It contains details of:
// * The amount of credit remaining and its status.
// * Payment allocations against the payments type, in this case an invoice.
// * Which customers the credit notes have been issued to.
type PushCreditNote200ApplicationJSONSourceModifiedDate struct {
	AdditionalTaxAmount     *float64 `json:"additionalTaxAmount,omitempty"`
	AdditionalTaxPercentage *float64 `json:"additionalTaxPercentage,omitempty"`
	// Date on which the credit note was fully allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// Friendly reference for the credit note.
	CreditNoteNumber *string `json:"creditNoteNumber,omitempty"`
	// Currency of the credit note.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Reference to the customer the credit note has been issued to.
	CustomerRef *PushCreditNote200ApplicationJSONSourceModifiedDateCustomerRef `json:"customerRef,omitempty"`
	// Percentage rate (from 0 to 100) of discounts applied to the credit note.
	DiscountPercentage float64 `json:"discountPercentage"`
	// Identifier for the credit note, unique to the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the credit note as recorded in the accounting system.
	IssueDate *time.Time                                                    `json:"issueDate,omitempty"`
	LineItems []PushCreditNote200ApplicationJSONSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *PushCreditNote200ApplicationJSONSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information about the credit note. Where possible, Codat links to a data field in the accounting platform that is publicly available. This means that the contents of the note field are included when a credit note is emailed from the accounting platform to the customer.
	Note *string `json:"note,omitempty"`
	// An array of payment allocations.
	PaymentAllocations []PushCreditNote200ApplicationJSONSourceModifiedDatePaymentAllocations `json:"paymentAllocations,omitempty"`
	// Unused balance of totalAmount originally raised.
	RemainingCredit float64 `json:"remainingCredit"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the credit note.
	Status PushCreditNote200ApplicationJSONSourceModifiedDateStatusEnum `json:"status"`
	// Value of the credit note, including discounts and excluding tax.
	SubTotal float64 `json:"subTotal"`
	// Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
	SupplementalData *PushCreditNote200ApplicationJSONSourceModifiedDateSupplementalData `json:"supplementalData,omitempty"`
	// Total amount of credit that has been applied to the customer's accounts receivable
	TotalAmount float64 `json:"totalAmount"`
	// Any discounts applied to the credit note amount.
	TotalDiscount float64 `json:"totalDiscount"`
	// Any tax applied to the credit note amount.
	TotalTaxAmount float64                                                            `json:"totalTaxAmount"`
	WithholdingTax []PushCreditNote200ApplicationJSONSourceModifiedDateWithholdingTax `json:"withholdingTax,omitempty"`
}

// PushCreditNote200ApplicationJSONStatusEnum - The status of the push operation.
type PushCreditNote200ApplicationJSONStatusEnum string

const (
	PushCreditNote200ApplicationJSONStatusEnumPending  PushCreditNote200ApplicationJSONStatusEnum = "Pending"
	PushCreditNote200ApplicationJSONStatusEnumFailed   PushCreditNote200ApplicationJSONStatusEnum = "Failed"
	PushCreditNote200ApplicationJSONStatusEnumSuccess  PushCreditNote200ApplicationJSONStatusEnum = "Success"
	PushCreditNote200ApplicationJSONStatusEnumTimedOut PushCreditNote200ApplicationJSONStatusEnum = "TimedOut"
)

type PushCreditNote200ApplicationJSONValidationValidationItem struct {
	ItemID        *string `json:"itemId,omitempty"`
	Message       *string `json:"message,omitempty"`
	ValidatorName *string `json:"validatorName,omitempty"`
}

// PushCreditNote200ApplicationJSONValidation - A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
type PushCreditNote200ApplicationJSONValidation struct {
	Errors   []PushCreditNote200ApplicationJSONValidationValidationItem `json:"errors,omitempty"`
	Warnings []PushCreditNote200ApplicationJSONValidationValidationItem `json:"warnings,omitempty"`
}

// PushCreditNote200ApplicationJSON - Success
type PushCreditNote200ApplicationJSON struct {
	Changes []PushCreditNote200ApplicationJSONChanges `json:"changes,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID string `json:"companyId"`
	// The datetime when the push was completed, null if Pending.
	CompletedOnUtc *time.Time `json:"completedOnUtc,omitempty"`
	// > View the coverage for credit notes in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes" target="_blank">Data coverage explorer</a>.
	//
	// ## Overview
	//
	// Think of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.
	//
	// In the Codat system a credit note is issued to a [customer's](https://docs.codat.io/accounting-api#/schemas/Customer) accounts receivable.
	//
	// It contains details of:
	// * The amount of credit remaining and its status.
	// * Payment allocations against the payments type, in this case an invoice.
	// * Which customers the credit notes have been issued to.
	Data *PushCreditNote200ApplicationJSONSourceModifiedDate `json:"data,omitempty"`
	// Unique identifier for a company's data connection.
	DataConnectionKey string `json:"dataConnectionKey"`
	// The type of data being pushed, eg invoices, customers.
	DataType     *string `json:"dataType,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
	PushOperationKey string `json:"pushOperationKey"`
	// The datetime when the push was requested.
	RequestedOnUtc time.Time `json:"requestedOnUtc"`
	// The status of the push operation.
	Status           PushCreditNote200ApplicationJSONStatusEnum `json:"status"`
	StatusCode       int                                        `json:"statusCode"`
	TimeoutInMinutes *int                                       `json:"timeoutInMinutes,omitempty"`
	TimeoutInSeconds *int                                       `json:"timeoutInSeconds,omitempty"`
	// A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
	Validation *PushCreditNote200ApplicationJSONValidation `json:"validation,omitempty"`
}

type PushCreditNoteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	PushCreditNote200ApplicationJSONObject *PushCreditNote200ApplicationJSON
}
