// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListPurchaseOrdersRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListPurchaseOrders200ApplicationJSONLinksHypertextReference struct {
	Href *string `json:"href,omitempty"`
}

type ListPurchaseOrders200ApplicationJSONLinks struct {
	Current  ListPurchaseOrders200ApplicationJSONLinksHypertextReference  `json:"current"`
	Next     *ListPurchaseOrders200ApplicationJSONLinksHypertextReference `json:"next,omitempty"`
	Previous *ListPurchaseOrders200ApplicationJSONLinksHypertextReference `json:"previous,omitempty"`
	Self     ListPurchaseOrders200ApplicationJSONLinksHypertextReference  `json:"self"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsItemRef - Reference to the product or inventory item to which the line item is linked.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	// Reference to the product or inventory item to which the line item is linked.
	ItemRef *ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *float64 `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *float64 `json:"unitAmount,omitempty"`
}

type ListPurchaseOrders200ApplicationJSONSourceModifiedDateMetadata struct {
	// Indicates whether the record has been deleted in the third-party system this record originated from.
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum - Type of the address.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum string

const (
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumUnknown  ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Unknown"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumBilling  ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Billing"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumDelivery ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Delivery"
)

func (e *ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Billing":
		fallthrough
	case "Delivery":
		*e = ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum: %s", s)
	}
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddress - Delivery address for any goods that have been ordered.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum `json:"type"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToContact - Details of the named contact at the delivery address.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToContact struct {
	// Email address of the contact at the delivery address.
	Email *string `json:"email,omitempty"`
	// Name of the contact at the delivery address.
	Name *string `json:"name,omitempty"`
	// Phone number of the contact at the delivery address.
	Phone *string `json:"phone,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipTo - Delivery details for any goods that have been ordered.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipTo struct {
	// Delivery address for any goods that have been ordered.
	Address *ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToAddress `json:"address,omitempty"`
	// Details of the named contact at the delivery address.
	Contact *ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipToContact `json:"contact,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum - Current state of the purchase order
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum string

const (
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnumUnknown ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum = "Unknown"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnumDraft   ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum = "Draft"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnumOpen    ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum = "Open"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnumClosed  ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum = "Closed"
	ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnumVoid    ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum = "Void"
)

func (e *ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Draft":
		fallthrough
	case "Open":
		fallthrough
	case "Closed":
		fallthrough
	case "Void":
		*e = ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum: %s", s)
	}
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDateSupplierRef - Supplier that the purchase order is recorded against in the accounting system.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

// ListPurchaseOrders200ApplicationJSONSourceModifiedDate - > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
//
// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
type ListPurchaseOrders200ApplicationJSONSourceModifiedDate struct {
	// Currency of the purchase order.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Actual delivery date for any goods that have been ordered.
	DeliveryDate *string `json:"deliveryDate,omitempty"`
	// Expected delivery date for any goods that have been ordered.
	ExpectedDeliveryDate *string `json:"expectedDeliveryDate,omitempty"`
	// Identifier for the purchase order, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the purchase order as recorded in the accounting platform.
	IssueDate *string `json:"issueDate,omitempty"`
	// Array of line items.
	LineItems []ListPurchaseOrders200ApplicationJSONSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *ListPurchaseOrders200ApplicationJSONSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Any additional information associated with the purchase order.
	Note *string `json:"note,omitempty"`
	// Date the supplier is due to be paid.
	PaymentDueDate *string `json:"paymentDueDate,omitempty"`
	// Friendly reference for the purchase order, commonly generated by the accounting platform.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Delivery details for any goods that have been ordered.
	ShipTo *ListPurchaseOrders200ApplicationJSONSourceModifiedDateShipTo `json:"shipTo,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the purchase order
	Status *ListPurchaseOrders200ApplicationJSONSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total amount of the purchase order, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Supplier that the purchase order is recorded against in the accounting system.
	SupplierRef *ListPurchaseOrders200ApplicationJSONSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Total amount of the purchase order, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Total value of any discounts applied to the purchase order.
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	//
	// Total amount of tax included in the purchase order.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
}

// ListPurchaseOrders200ApplicationJSON - Success
type ListPurchaseOrders200ApplicationJSON struct {
	Links        ListPurchaseOrders200ApplicationJSONLinks                `json:"_links"`
	PageNumber   int64                                                    `json:"pageNumber"`
	PageSize     int64                                                    `json:"pageSize"`
	Results      []ListPurchaseOrders200ApplicationJSONSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                                    `json:"totalResults"`
}

type ListPurchaseOrdersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	ListPurchaseOrders200ApplicationJSONObject *ListPurchaseOrders200ApplicationJSON
}
