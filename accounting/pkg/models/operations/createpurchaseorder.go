// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// CreatePurchaseOrderSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type CreatePurchaseOrderSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateLineItemsItemRef - Reference to the product or inventory item to which the line item is linked.
type CreatePurchaseOrderSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type CreatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type CreatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type CreatePurchaseOrderSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *CreatePurchaseOrderSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	// Reference to the product or inventory item to which the line item is linked.
	ItemRef *CreatePurchaseOrderSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *float64 `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *CreatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []CreatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *float64 `json:"unitAmount,omitempty"`
}

type CreatePurchaseOrderSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum - Type of the address.
type CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum string

const (
	CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumUnknown  CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Unknown"
	CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumBilling  CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Billing"
	CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumDelivery CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Delivery"
)

// CreatePurchaseOrderSourceModifiedDateShipToAddress - Delivery address for any goods that have been ordered.
type CreatePurchaseOrderSourceModifiedDateShipToAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type CreatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum `json:"type"`
}

// CreatePurchaseOrderSourceModifiedDateShipToContact - Details of the named contact at the delivery address.
type CreatePurchaseOrderSourceModifiedDateShipToContact struct {
	// Email address of the contact at the delivery address.
	Email *string `json:"email,omitempty"`
	// Name of the contact at the delivery address.
	Name *string `json:"name,omitempty"`
	// Phone number of the contact at the delivery address.
	Phone *string `json:"phone,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateShipTo - Delivery details for any goods that have been ordered.
type CreatePurchaseOrderSourceModifiedDateShipTo struct {
	// Delivery address for any goods that have been ordered.
	Address *CreatePurchaseOrderSourceModifiedDateShipToAddress `json:"address,omitempty"`
	// Details of the named contact at the delivery address.
	Contact *CreatePurchaseOrderSourceModifiedDateShipToContact `json:"contact,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDateStatusEnum - Current state of the purchase order
type CreatePurchaseOrderSourceModifiedDateStatusEnum string

const (
	CreatePurchaseOrderSourceModifiedDateStatusEnumUnknown CreatePurchaseOrderSourceModifiedDateStatusEnum = "Unknown"
	CreatePurchaseOrderSourceModifiedDateStatusEnumDraft   CreatePurchaseOrderSourceModifiedDateStatusEnum = "Draft"
	CreatePurchaseOrderSourceModifiedDateStatusEnumOpen    CreatePurchaseOrderSourceModifiedDateStatusEnum = "Open"
	CreatePurchaseOrderSourceModifiedDateStatusEnumClosed  CreatePurchaseOrderSourceModifiedDateStatusEnum = "Closed"
	CreatePurchaseOrderSourceModifiedDateStatusEnumVoid    CreatePurchaseOrderSourceModifiedDateStatusEnum = "Void"
)

// CreatePurchaseOrderSourceModifiedDateSupplierRef - Supplier that the purchase order is recorded against in the accounting system.
type CreatePurchaseOrderSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

// CreatePurchaseOrderSourceModifiedDate - > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
//
// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
type CreatePurchaseOrderSourceModifiedDate struct {
	// Currency of the purchase order.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Actual delivery date for any goods that have been ordered.
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// Expected delivery date for any goods that have been ordered.
	ExpectedDeliveryDate *time.Time `json:"expectedDeliveryDate,omitempty"`
	// Identifier for the purchase order, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the purchase order as recorded in the accounting platform.
	IssueDate *time.Time `json:"issueDate,omitempty"`
	// Array of line items.
	LineItems []CreatePurchaseOrderSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *CreatePurchaseOrderSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information associated with the purchase order.
	Note *string `json:"note,omitempty"`
	// Date the supplier is due to be paid.
	PaymentDueDate *time.Time `json:"paymentDueDate,omitempty"`
	// Friendly reference for the purchase order, commonly generated by the accounting platform.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Delivery details for any goods that have been ordered.
	ShipTo *CreatePurchaseOrderSourceModifiedDateShipTo `json:"shipTo,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the purchase order
	Status *CreatePurchaseOrderSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total amount of the purchase order, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Supplier that the purchase order is recorded against in the accounting system.
	SupplierRef *CreatePurchaseOrderSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Total amount of the purchase order, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Total value of any discounts applied to the purchase order.
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	//
	// Total amount of tax included in the purchase order.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
}

type CreatePurchaseOrderRequest struct {
	RequestBody      *CreatePurchaseOrderSourceModifiedDate `request:"mediaType=application/json"`
	CompanyID        string                                 `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID     string                                 `pathParam:"style=simple,explode=false,name=connectionId"`
	TimeoutInMinutes *int                                   `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

type CreatePurchaseOrder200ApplicationJSONChangesPushOperationRecordRef struct {
	DataType *string `json:"dataType,omitempty"`
	ID       *string `json:"id,omitempty"`
}

type CreatePurchaseOrder200ApplicationJSONChangesTypeEnum string

const (
	CreatePurchaseOrder200ApplicationJSONChangesTypeEnumUnknown            CreatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Unknown"
	CreatePurchaseOrder200ApplicationJSONChangesTypeEnumCreated            CreatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Created"
	CreatePurchaseOrder200ApplicationJSONChangesTypeEnumModified           CreatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Modified"
	CreatePurchaseOrder200ApplicationJSONChangesTypeEnumDeleted            CreatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Deleted"
	CreatePurchaseOrder200ApplicationJSONChangesTypeEnumAttachmentUploaded CreatePurchaseOrder200ApplicationJSONChangesTypeEnum = "AttachmentUploaded"
)

type CreatePurchaseOrder200ApplicationJSONChanges struct {
	AttachmentID *string                                                             `json:"attachmentId,omitempty"`
	RecordRef    *CreatePurchaseOrder200ApplicationJSONChangesPushOperationRecordRef `json:"recordRef,omitempty"`
	Type         *CreatePurchaseOrder200ApplicationJSONChangesTypeEnum               `json:"type,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef - Reference to the product or inventory item to which the line item is linked.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	// Reference to the product or inventory item to which the line item is linked.
	ItemRef *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *float64 `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *float64 `json:"unitAmount,omitempty"`
}

type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum - Type of the address.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum string

const (
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumUnknown  CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Unknown"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumBilling  CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Billing"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumDelivery CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Delivery"
)

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress - Delivery address for any goods that have been ordered.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum `json:"type"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact - Details of the named contact at the delivery address.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact struct {
	// Email address of the contact at the delivery address.
	Email *string `json:"email,omitempty"`
	// Name of the contact at the delivery address.
	Name *string `json:"name,omitempty"`
	// Phone number of the contact at the delivery address.
	Phone *string `json:"phone,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo - Delivery details for any goods that have been ordered.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo struct {
	// Delivery address for any goods that have been ordered.
	Address *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress `json:"address,omitempty"`
	// Details of the named contact at the delivery address.
	Contact *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact `json:"contact,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum - Current state of the purchase order
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum string

const (
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumUnknown CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Unknown"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumDraft   CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Draft"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumOpen    CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Open"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumClosed  CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Closed"
	CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumVoid    CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Void"
)

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef - Supplier that the purchase order is recorded against in the accounting system.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONSourceModifiedDate - > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
//
// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
type CreatePurchaseOrder200ApplicationJSONSourceModifiedDate struct {
	// Currency of the purchase order.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Actual delivery date for any goods that have been ordered.
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// Expected delivery date for any goods that have been ordered.
	ExpectedDeliveryDate *time.Time `json:"expectedDeliveryDate,omitempty"`
	// Identifier for the purchase order, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the purchase order as recorded in the accounting platform.
	IssueDate *time.Time `json:"issueDate,omitempty"`
	// Array of line items.
	LineItems []CreatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information associated with the purchase order.
	Note *string `json:"note,omitempty"`
	// Date the supplier is due to be paid.
	PaymentDueDate *time.Time `json:"paymentDueDate,omitempty"`
	// Friendly reference for the purchase order, commonly generated by the accounting platform.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Delivery details for any goods that have been ordered.
	ShipTo *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo `json:"shipTo,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the purchase order
	Status *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total amount of the purchase order, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Supplier that the purchase order is recorded against in the accounting system.
	SupplierRef *CreatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Total amount of the purchase order, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Total value of any discounts applied to the purchase order.
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	//
	// Total amount of tax included in the purchase order.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONStatusEnum - The status of the push operation.
type CreatePurchaseOrder200ApplicationJSONStatusEnum string

const (
	CreatePurchaseOrder200ApplicationJSONStatusEnumPending  CreatePurchaseOrder200ApplicationJSONStatusEnum = "Pending"
	CreatePurchaseOrder200ApplicationJSONStatusEnumFailed   CreatePurchaseOrder200ApplicationJSONStatusEnum = "Failed"
	CreatePurchaseOrder200ApplicationJSONStatusEnumSuccess  CreatePurchaseOrder200ApplicationJSONStatusEnum = "Success"
	CreatePurchaseOrder200ApplicationJSONStatusEnumTimedOut CreatePurchaseOrder200ApplicationJSONStatusEnum = "TimedOut"
)

type CreatePurchaseOrder200ApplicationJSONValidationValidationItem struct {
	ItemID        *string `json:"itemId,omitempty"`
	Message       *string `json:"message,omitempty"`
	ValidatorName *string `json:"validatorName,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSONValidation - A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
type CreatePurchaseOrder200ApplicationJSONValidation struct {
	Errors   []CreatePurchaseOrder200ApplicationJSONValidationValidationItem `json:"errors,omitempty"`
	Warnings []CreatePurchaseOrder200ApplicationJSONValidationValidationItem `json:"warnings,omitempty"`
}

// CreatePurchaseOrder200ApplicationJSON - Success
type CreatePurchaseOrder200ApplicationJSON struct {
	Changes []CreatePurchaseOrder200ApplicationJSONChanges `json:"changes,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID string `json:"companyId"`
	// The datetime when the push was completed, null if Pending.
	CompletedOnUtc *time.Time `json:"completedOnUtc,omitempty"`
	// > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
	//
	// ## Overview
	//
	// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
	//
	// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
	Data *CreatePurchaseOrder200ApplicationJSONSourceModifiedDate `json:"data,omitempty"`
	// Unique identifier for a company's data connection.
	DataConnectionKey string `json:"dataConnectionKey"`
	// The type of data being pushed, eg invoices, customers.
	DataType     *string `json:"dataType,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
	PushOperationKey string `json:"pushOperationKey"`
	// The datetime when the push was requested.
	RequestedOnUtc time.Time `json:"requestedOnUtc"`
	// The status of the push operation.
	Status           CreatePurchaseOrder200ApplicationJSONStatusEnum `json:"status"`
	StatusCode       int                                             `json:"statusCode"`
	TimeoutInMinutes *int                                            `json:"timeoutInMinutes,omitempty"`
	TimeoutInSeconds *int                                            `json:"timeoutInSeconds,omitempty"`
	// A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
	Validation *CreatePurchaseOrder200ApplicationJSONValidation `json:"validation,omitempty"`
}

type CreatePurchaseOrderResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CreatePurchaseOrder200ApplicationJSONObject *CreatePurchaseOrder200ApplicationJSON
}
