// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetTrackingCategoryRequest struct {
	CompanyID          string `pathParam:"style=simple,explode=false,name=companyId"`
	TrackingCategoryID string `pathParam:"style=simple,explode=false,name=trackingCategoryId"`
}

// GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum - Current state of the tracking category.
type GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum string

const (
	GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnumUnknown  GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum = "Unknown"
	GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnumActive   GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum = "Active"
	GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnumArchived GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum = "Archived"
)

func (e *GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum: %s", s)
	}
}

// GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum - Current state of the tracking category.
type GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum string

const (
	GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumUnknown  GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Unknown"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumActive   GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Active"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumArchived GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Archived"
)

func (e *GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum: %s", s)
	}
}

// GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum - Current state of the tracking category.
type GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum string

const (
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumUnknown  GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Unknown"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumActive   GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Active"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumArchived GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Archived"
)

func (e *GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum: %s", s)
	}
}

// GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum - Current state of the tracking category.
type GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum string

const (
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumUnknown  GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Unknown"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumActive   GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Active"
	GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnumArchived GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum = "Archived"
)

func (e *GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum: %s", s)
	}
}

type GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDate struct {
	// The identifier for the item, unique per tracking category
	ID *string `json:"id,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// The name of the tracking category
	Name *string `json:"name,omitempty"`
	// The identifier for this item's immediate parent
	ParentID *string `json:"parentId,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the tracking category.
	Status *GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum `json:"status,omitempty"`
}

type GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDate struct {
	// Boolean value indicating whether this category has SubCategories
	HasChildren *bool `json:"hasChildren,omitempty"`
	// The identifier for the item, unique per tracking category
	ID *string `json:"id,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// The name of the tracking category
	Name *string `json:"name,omitempty"`
	// The identifier for this item's immediate parent
	ParentID *string `json:"parentId,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the tracking category.
	Status *GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum `json:"status,omitempty"`
	// A collection of subcategories that are nested beneath this category.
	SubCategories []GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDateSourceModifiedDate `json:"subCategories,omitempty"`
}

type GetTrackingCategorySourceModifiedDateSourceModifiedDate struct {
	// Boolean value indicating whether this category has SubCategories
	HasChildren *bool `json:"hasChildren,omitempty"`
	// The identifier for the item, unique per tracking category
	ID *string `json:"id,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// The name of the tracking category
	Name *string `json:"name,omitempty"`
	// The identifier for this item's immediate parent
	ParentID *string `json:"parentId,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the tracking category.
	Status *GetTrackingCategorySourceModifiedDateSourceModifiedDateTrackingCategoryStatusEnum `json:"status,omitempty"`
	// A collection of subcategories that are nested beneath this category.
	SubCategories []GetTrackingCategorySourceModifiedDateSourceModifiedDateSourceModifiedDate `json:"subCategories,omitempty"`
}

// GetTrackingCategorySourceModifiedDate - Success
type GetTrackingCategorySourceModifiedDate struct {
	// Boolean value indicating whether this category has SubCategories
	HasChildren *bool `json:"hasChildren,omitempty"`
	// The identifier for the item, unique per tracking category
	ID *string `json:"id,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// The name of the tracking category
	Name *string `json:"name,omitempty"`
	// The identifier for this item's immediate parent
	ParentID *string `json:"parentId,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the tracking category.
	Status *GetTrackingCategorySourceModifiedDateTrackingCategoryStatusEnum `json:"status,omitempty"`
	// A collection of subcategories that are nested beneath this category.
	SubCategories []GetTrackingCategorySourceModifiedDateSourceModifiedDate `json:"subCategories,omitempty"`
}

type GetTrackingCategoryResponse struct {
	ContentType string
	// Success
	SourceModifiedDate *GetTrackingCategorySourceModifiedDate
	StatusCode         int
	RawResponse        *http.Response
}
