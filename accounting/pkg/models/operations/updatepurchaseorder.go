// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// UpdatePurchaseOrderSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type UpdatePurchaseOrderSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateLineItemsItemRef - Reference to the product or inventory item to which the line item is linked.
type UpdatePurchaseOrderSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type UpdatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type UpdatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type UpdatePurchaseOrderSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *UpdatePurchaseOrderSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	// Reference to the product or inventory item to which the line item is linked.
	ItemRef *UpdatePurchaseOrderSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *float64 `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *UpdatePurchaseOrderSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []UpdatePurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *float64 `json:"unitAmount,omitempty"`
}

type UpdatePurchaseOrderSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum - Type of the address.
type UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum string

const (
	UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumUnknown  UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Unknown"
	UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumBilling  UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Billing"
	UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnumDelivery UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum = "Delivery"
)

// UpdatePurchaseOrderSourceModifiedDateShipToAddress - Delivery address for any goods that have been ordered.
type UpdatePurchaseOrderSourceModifiedDateShipToAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type UpdatePurchaseOrderSourceModifiedDateShipToAddressTypeEnum `json:"type"`
}

// UpdatePurchaseOrderSourceModifiedDateShipToContact - Details of the named contact at the delivery address.
type UpdatePurchaseOrderSourceModifiedDateShipToContact struct {
	// Email address of the contact at the delivery address.
	Email *string `json:"email,omitempty"`
	// Name of the contact at the delivery address.
	Name *string `json:"name,omitempty"`
	// Phone number of the contact at the delivery address.
	Phone *string `json:"phone,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateShipTo - Delivery details for any goods that have been ordered.
type UpdatePurchaseOrderSourceModifiedDateShipTo struct {
	// Delivery address for any goods that have been ordered.
	Address *UpdatePurchaseOrderSourceModifiedDateShipToAddress `json:"address,omitempty"`
	// Details of the named contact at the delivery address.
	Contact *UpdatePurchaseOrderSourceModifiedDateShipToContact `json:"contact,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDateStatusEnum - Current state of the purchase order
type UpdatePurchaseOrderSourceModifiedDateStatusEnum string

const (
	UpdatePurchaseOrderSourceModifiedDateStatusEnumUnknown UpdatePurchaseOrderSourceModifiedDateStatusEnum = "Unknown"
	UpdatePurchaseOrderSourceModifiedDateStatusEnumDraft   UpdatePurchaseOrderSourceModifiedDateStatusEnum = "Draft"
	UpdatePurchaseOrderSourceModifiedDateStatusEnumOpen    UpdatePurchaseOrderSourceModifiedDateStatusEnum = "Open"
	UpdatePurchaseOrderSourceModifiedDateStatusEnumClosed  UpdatePurchaseOrderSourceModifiedDateStatusEnum = "Closed"
	UpdatePurchaseOrderSourceModifiedDateStatusEnumVoid    UpdatePurchaseOrderSourceModifiedDateStatusEnum = "Void"
)

// UpdatePurchaseOrderSourceModifiedDateSupplierRef - Supplier that the purchase order is recorded against in the accounting system.
type UpdatePurchaseOrderSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

// UpdatePurchaseOrderSourceModifiedDate - > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
//
// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
type UpdatePurchaseOrderSourceModifiedDate struct {
	// Currency of the purchase order.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Actual delivery date for any goods that have been ordered.
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// Expected delivery date for any goods that have been ordered.
	ExpectedDeliveryDate *time.Time `json:"expectedDeliveryDate,omitempty"`
	// Identifier for the purchase order, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the purchase order as recorded in the accounting platform.
	IssueDate *time.Time `json:"issueDate,omitempty"`
	// Array of line items.
	LineItems []UpdatePurchaseOrderSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *UpdatePurchaseOrderSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information associated with the purchase order.
	Note *string `json:"note,omitempty"`
	// Date the supplier is due to be paid.
	PaymentDueDate *time.Time `json:"paymentDueDate,omitempty"`
	// Friendly reference for the purchase order, commonly generated by the accounting platform.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Delivery details for any goods that have been ordered.
	ShipTo *UpdatePurchaseOrderSourceModifiedDateShipTo `json:"shipTo,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the purchase order
	Status *UpdatePurchaseOrderSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total amount of the purchase order, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Supplier that the purchase order is recorded against in the accounting system.
	SupplierRef *UpdatePurchaseOrderSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Total amount of the purchase order, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Total value of any discounts applied to the purchase order.
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	//
	// Total amount of tax included in the purchase order.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
}

type UpdatePurchaseOrderRequest struct {
	RequestBody      *UpdatePurchaseOrderSourceModifiedDate `request:"mediaType=application/json"`
	CompanyID        string                                 `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID     string                                 `pathParam:"style=simple,explode=false,name=connectionId"`
	ForceUpdate      *bool                                  `queryParam:"style=form,explode=true,name=forceUpdate"`
	PurchaseOrderID  string                                 `pathParam:"style=simple,explode=false,name=purchaseOrderId"`
	TimeoutInMinutes *int                                   `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

type UpdatePurchaseOrder200ApplicationJSONChangesPushOperationRecordRef struct {
	DataType *string `json:"dataType,omitempty"`
	ID       *string `json:"id,omitempty"`
}

type UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum string

const (
	UpdatePurchaseOrder200ApplicationJSONChangesTypeEnumUnknown            UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Unknown"
	UpdatePurchaseOrder200ApplicationJSONChangesTypeEnumCreated            UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Created"
	UpdatePurchaseOrder200ApplicationJSONChangesTypeEnumModified           UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Modified"
	UpdatePurchaseOrder200ApplicationJSONChangesTypeEnumDeleted            UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum = "Deleted"
	UpdatePurchaseOrder200ApplicationJSONChangesTypeEnumAttachmentUploaded UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum = "AttachmentUploaded"
)

type UpdatePurchaseOrder200ApplicationJSONChanges struct {
	AttachmentID *string                                                             `json:"attachmentId,omitempty"`
	RecordRef    *UpdatePurchaseOrder200ApplicationJSONChangesPushOperationRecordRef `json:"recordRef,omitempty"`
	Type         *UpdatePurchaseOrder200ApplicationJSONChangesTypeEnum               `json:"type,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef - Reference to the product or inventory item to which the line item is linked.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	// Reference to the product or inventory item to which the line item is linked.
	ItemRef *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *float64 `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *float64 `json:"unitAmount,omitempty"`
}

type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum - Type of the address.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum string

const (
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumUnknown  UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Unknown"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumBilling  UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Billing"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnumDelivery UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum = "Delivery"
)

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress - Delivery address for any goods that have been ordered.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddressTypeEnum `json:"type"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact - Details of the named contact at the delivery address.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact struct {
	// Email address of the contact at the delivery address.
	Email *string `json:"email,omitempty"`
	// Name of the contact at the delivery address.
	Name *string `json:"name,omitempty"`
	// Phone number of the contact at the delivery address.
	Phone *string `json:"phone,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo - Delivery details for any goods that have been ordered.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo struct {
	// Delivery address for any goods that have been ordered.
	Address *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToAddress `json:"address,omitempty"`
	// Details of the named contact at the delivery address.
	Contact *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipToContact `json:"contact,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum - Current state of the purchase order
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum string

const (
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumUnknown UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Unknown"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumDraft   UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Draft"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumOpen    UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Open"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumClosed  UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Closed"
	UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnumVoid    UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum = "Void"
)

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef - Supplier that the purchase order is recorded against in the accounting system.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONSourceModifiedDate - > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
//
// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
type UpdatePurchaseOrder200ApplicationJSONSourceModifiedDate struct {
	// Currency of the purchase order.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Actual delivery date for any goods that have been ordered.
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// Expected delivery date for any goods that have been ordered.
	ExpectedDeliveryDate *time.Time `json:"expectedDeliveryDate,omitempty"`
	// Identifier for the purchase order, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the purchase order as recorded in the accounting platform.
	IssueDate *time.Time `json:"issueDate,omitempty"`
	// Array of line items.
	LineItems []UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information associated with the purchase order.
	Note *string `json:"note,omitempty"`
	// Date the supplier is due to be paid.
	PaymentDueDate *time.Time `json:"paymentDueDate,omitempty"`
	// Friendly reference for the purchase order, commonly generated by the accounting platform.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Delivery details for any goods that have been ordered.
	ShipTo *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateShipTo `json:"shipTo,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the purchase order
	Status *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total amount of the purchase order, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Supplier that the purchase order is recorded against in the accounting system.
	SupplierRef *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Total amount of the purchase order, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Total value of any discounts applied to the purchase order.
	TotalDiscount *float64 `json:"totalDiscount,omitempty"`
	//
	// Total amount of tax included in the purchase order.
	TotalTaxAmount *float64 `json:"totalTaxAmount,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONStatusEnum - The status of the push operation.
type UpdatePurchaseOrder200ApplicationJSONStatusEnum string

const (
	UpdatePurchaseOrder200ApplicationJSONStatusEnumPending  UpdatePurchaseOrder200ApplicationJSONStatusEnum = "Pending"
	UpdatePurchaseOrder200ApplicationJSONStatusEnumFailed   UpdatePurchaseOrder200ApplicationJSONStatusEnum = "Failed"
	UpdatePurchaseOrder200ApplicationJSONStatusEnumSuccess  UpdatePurchaseOrder200ApplicationJSONStatusEnum = "Success"
	UpdatePurchaseOrder200ApplicationJSONStatusEnumTimedOut UpdatePurchaseOrder200ApplicationJSONStatusEnum = "TimedOut"
)

type UpdatePurchaseOrder200ApplicationJSONValidationValidationItem struct {
	ItemID        *string `json:"itemId,omitempty"`
	Message       *string `json:"message,omitempty"`
	ValidatorName *string `json:"validatorName,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSONValidation - A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
type UpdatePurchaseOrder200ApplicationJSONValidation struct {
	Errors   []UpdatePurchaseOrder200ApplicationJSONValidationValidationItem `json:"errors,omitempty"`
	Warnings []UpdatePurchaseOrder200ApplicationJSONValidationValidationItem `json:"warnings,omitempty"`
}

// UpdatePurchaseOrder200ApplicationJSON - Success
type UpdatePurchaseOrder200ApplicationJSON struct {
	Changes []UpdatePurchaseOrder200ApplicationJSONChanges `json:"changes,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID string `json:"companyId"`
	// The datetime when the push was completed, null if Pending.
	CompletedOnUtc *time.Time `json:"completedOnUtc,omitempty"`
	// > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
	//
	// ## Overview
	//
	// Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
	//
	// This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
	Data *UpdatePurchaseOrder200ApplicationJSONSourceModifiedDate `json:"data,omitempty"`
	// Unique identifier for a company's data connection.
	DataConnectionKey string `json:"dataConnectionKey"`
	// The type of data being pushed, eg invoices, customers.
	DataType     *string `json:"dataType,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
	PushOperationKey string `json:"pushOperationKey"`
	// The datetime when the push was requested.
	RequestedOnUtc time.Time `json:"requestedOnUtc"`
	// The status of the push operation.
	Status           UpdatePurchaseOrder200ApplicationJSONStatusEnum `json:"status"`
	StatusCode       int                                             `json:"statusCode"`
	TimeoutInMinutes *int                                            `json:"timeoutInMinutes,omitempty"`
	TimeoutInSeconds *int                                            `json:"timeoutInSeconds,omitempty"`
	// A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
	Validation *UpdatePurchaseOrder200ApplicationJSONValidation `json:"validation,omitempty"`
}

type UpdatePurchaseOrderResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UpdatePurchaseOrder200ApplicationJSONObject *UpdatePurchaseOrder200ApplicationJSON
}
