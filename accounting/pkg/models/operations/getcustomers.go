// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetCustomersRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type GetCustomers200ApplicationJSONLinksHypertextReference struct {
	Href *string `json:"href,omitempty"`
}

type GetCustomers200ApplicationJSONLinks struct {
	Current  GetCustomers200ApplicationJSONLinksHypertextReference  `json:"current"`
	Next     *GetCustomers200ApplicationJSONLinksHypertextReference `json:"next,omitempty"`
	Previous *GetCustomers200ApplicationJSONLinksHypertextReference `json:"previous,omitempty"`
	Self     GetCustomers200ApplicationJSONLinksHypertextReference  `json:"self"`
}

// GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum - Type of the address.
type GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum string

const (
	GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnumUnknown  GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum = "Unknown"
	GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnumBilling  GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum = "Billing"
	GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnumDelivery GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum = "Delivery"
)

func (e *GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Billing":
		fallthrough
	case "Delivery":
		*e = GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum: %s", s)
	}
}

type GetCustomers200ApplicationJSONSourceModifiedDateAddresses struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type GetCustomers200ApplicationJSONSourceModifiedDateAddressesTypeEnum `json:"type"`
}

// GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum - Type of the address.
type GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum string

const (
	GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnumUnknown  GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum = "Unknown"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnumBilling  GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum = "Billing"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnumDelivery GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum = "Delivery"
)

func (e *GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Billing":
		fallthrough
	case "Delivery":
		*e = GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum: %s", s)
	}
}

// GetCustomers200ApplicationJSONSourceModifiedDateContactsAddress - An object of Address information.
type GetCustomers200ApplicationJSONSourceModifiedDateContactsAddress struct {
	// City of the customer address.
	City *string `json:"city,omitempty"`
	// Country of the customer address.
	Country *string `json:"country,omitempty"`
	// Line 1 of the customer address.
	Line1 *string `json:"line1,omitempty"`
	// Line 2 of the customer address.
	Line2 *string `json:"line2,omitempty"`
	// Postal code or zip code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Region of the customer address.
	Region *string `json:"region,omitempty"`
	// Type of the address.
	Type GetCustomers200ApplicationJSONSourceModifiedDateContactsAddressTypeEnum `json:"type"`
}

// GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum - Type of phone number.
type GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum string

const (
	GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnumUnknown  GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum = "Unknown"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnumPrimary  GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum = "Primary"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnumLandline GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum = "Landline"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnumMobile   GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum = "Mobile"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnumFax      GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum = "Fax"
)

func (e *GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Primary":
		fallthrough
	case "Landline":
		fallthrough
	case "Mobile":
		fallthrough
	case "Fax":
		*e = GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum: %s", s)
	}
}

type GetCustomers200ApplicationJSONSourceModifiedDateContactsPhone struct {
	// Phone number for a customer contact.
	Number *string `json:"number,omitempty"`
	// Type of phone number.
	Type GetCustomers200ApplicationJSONSourceModifiedDateContactsPhoneTypeEnum `json:"type"`
}

// GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum - Status of customer contacts.
//
// Customers can have multiple contacts.
type GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum string

const (
	GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnumUnknown  GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum = "Unknown"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnumActive   GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum = "Active"
	GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnumArchived GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum = "Archived"
)

func (e *GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum: %s", s)
	}
}

type GetCustomers200ApplicationJSONSourceModifiedDateContacts struct {
	// An object of Address information.
	Address *GetCustomers200ApplicationJSONSourceModifiedDateContactsAddress `json:"address,omitempty"`
	// Email of a contact for a customer.
	Email *string `json:"email,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > ðŸ“˜ Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Name of a contact for a customer.
	Name *string `json:"name,omitempty"`
	// An array of Phone numbers.
	Phone []GetCustomers200ApplicationJSONSourceModifiedDateContactsPhone `json:"phone,omitempty"`
	// Status of customer contacts.
	//
	// Customers can have multiple contacts.
	Status GetCustomers200ApplicationJSONSourceModifiedDateContactsStatusEnum `json:"status"`
}

type GetCustomers200ApplicationJSONSourceModifiedDateMetadata struct {
	// Indicates whether the record has been deleted in the third-party system this record originated from.
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum - Current state of the customer.
type GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum string

const (
	GetCustomers200ApplicationJSONSourceModifiedDateStatusEnumUnknown  GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum = "Unknown"
	GetCustomers200ApplicationJSONSourceModifiedDateStatusEnumActive   GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum = "Active"
	GetCustomers200ApplicationJSONSourceModifiedDateStatusEnumArchived GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum = "Archived"
)

func (e *GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum: %s", s)
	}
}

// GetCustomers200ApplicationJSONSourceModifiedDateSupplementalData - Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
type GetCustomers200ApplicationJSONSourceModifiedDateSupplementalData struct {
	Content map[string]map[string]interface{} `json:"content,omitempty"`
}

// GetCustomers200ApplicationJSONSourceModifiedDate - > View the coverage for customers in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// A customer is a person or organisation that buys goods or services. From the Customers endpoints, you can retrieve a [list of all the customers of a company](https://api.codat.io/swagger/index.html#/Customers/get_companies__companyId__data_customers).
//
// Customers' data links to accounts receivable [invoices](https://docs.codat.io/accounting-api#/schemas/Invoice).
type GetCustomers200ApplicationJSONSourceModifiedDate struct {
	// An array of Addresses.
	Addresses []GetCustomers200ApplicationJSONSourceModifiedDateAddresses `json:"addresses,omitempty"`
	// Name of the main contact for the identified customer.
	ContactName *string `json:"contactName,omitempty"`
	// An array of Contacts.
	Contacts []GetCustomers200ApplicationJSONSourceModifiedDateContacts `json:"contacts,omitempty"`
	// Name of the customer as recorded in the accounting system, typically the company name.
	CustomerName *string `json:"customerName,omitempty"`
	// Default currency the transactional data of the customer is recorded in.
	DefaultCurrency *string `json:"defaultCurrency,omitempty"`
	// Email address the customer can be contacted by.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// Identifier for the customer, unique to the company in the accounting platform.
	ID       *string                                                   `json:"id,omitempty"`
	Metadata *GetCustomers200ApplicationJSONSourceModifiedDateMetadata `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Phone number the customer can be contacted by.
	Phone *string `json:"phone,omitempty"`
	// Company number. In the UK, this is typically the Companies House company registration number.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Current state of the customer.
	Status GetCustomers200ApplicationJSONSourceModifiedDateStatusEnum `json:"status"`
	// Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
	SupplementalData *GetCustomers200ApplicationJSONSourceModifiedDateSupplementalData `json:"supplementalData,omitempty"`
	// Company tax number.
	TaxNumber *string `json:"taxNumber,omitempty"`
}

// GetCustomers200ApplicationJSON - Success
type GetCustomers200ApplicationJSON struct {
	Links        GetCustomers200ApplicationJSONLinks                `json:"_links"`
	PageNumber   int64                                              `json:"pageNumber"`
	PageSize     int64                                              `json:"pageSize"`
	Results      []GetCustomers200ApplicationJSONSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                              `json:"totalResults"`
}

type GetCustomersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetCustomers200ApplicationJSONObject *GetCustomers200ApplicationJSON
}
