// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateItemSourceModifiedDateBillItemAccountRef - Reference of the account to which the item is linked.
type CreateItemSourceModifiedDateBillItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreateItemSourceModifiedDateBillItemTaxRateRef - Reference of the tax rate to which the item is linked.
type CreateItemSourceModifiedDateBillItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreateItemSourceModifiedDateBillItem - Item details that are only for bills.
type CreateItemSourceModifiedDateBillItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *CreateItemSourceModifiedDateBillItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *CreateItemSourceModifiedDateBillItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// CreateItemSourceModifiedDateInvoiceItemAccountRef - Reference of the account to which the item is linked.
type CreateItemSourceModifiedDateInvoiceItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreateItemSourceModifiedDateInvoiceItemTaxRateRef - Reference of the tax rate to which the item is linked.
type CreateItemSourceModifiedDateInvoiceItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreateItemSourceModifiedDateInvoiceItem - Item details that are only for bills.
type CreateItemSourceModifiedDateInvoiceItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *CreateItemSourceModifiedDateInvoiceItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *CreateItemSourceModifiedDateInvoiceItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// CreateItemSourceModifiedDateItemStatusEnum - Current state of the item, either:
//
// - `Active`: Available for use
// - `Archived`: Unavailable
// - `Unknown`
//
// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
type CreateItemSourceModifiedDateItemStatusEnum string

const (
	CreateItemSourceModifiedDateItemStatusEnumUnknown  CreateItemSourceModifiedDateItemStatusEnum = "Unknown"
	CreateItemSourceModifiedDateItemStatusEnumActive   CreateItemSourceModifiedDateItemStatusEnum = "Active"
	CreateItemSourceModifiedDateItemStatusEnumArchived CreateItemSourceModifiedDateItemStatusEnum = "Archived"
)

func (e *CreateItemSourceModifiedDateItemStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = CreateItemSourceModifiedDateItemStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItemSourceModifiedDateItemStatusEnum: %s", s)
	}
}

type CreateItemSourceModifiedDateMetadata struct {
	// Indicates whether the record has been deleted in the third-party system this record originated from.
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// CreateItemSourceModifiedDateTypeEnum - Type of the item.
type CreateItemSourceModifiedDateTypeEnum string

const (
	CreateItemSourceModifiedDateTypeEnumUnknown      CreateItemSourceModifiedDateTypeEnum = "Unknown"
	CreateItemSourceModifiedDateTypeEnumInventory    CreateItemSourceModifiedDateTypeEnum = "Inventory"
	CreateItemSourceModifiedDateTypeEnumNonInventory CreateItemSourceModifiedDateTypeEnum = "NonInventory"
	CreateItemSourceModifiedDateTypeEnumService      CreateItemSourceModifiedDateTypeEnum = "Service"
)

func (e *CreateItemSourceModifiedDateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Inventory":
		fallthrough
	case "NonInventory":
		fallthrough
	case "Service":
		*e = CreateItemSourceModifiedDateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItemSourceModifiedDateTypeEnum: %s", s)
	}
}

// CreateItemSourceModifiedDate - > View the coverage for items in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// **Items** allow your customers to save and track details of the products and services that they buy and sell.
type CreateItemSourceModifiedDate struct {
	// Item details that are only for bills.
	BillItem *CreateItemSourceModifiedDateBillItem `json:"billItem,omitempty"`
	// Friendly reference for the item.
	Code *string `json:"code,omitempty"`
	// Identifier for the item that is unique to a company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Item details that are only for bills.
	InvoiceItem *CreateItemSourceModifiedDateInvoiceItem `json:"invoiceItem,omitempty"`
	// Whether you can use this item for bills.
	IsBillItem bool `json:"isBillItem"`
	// Whether you can use this item for invoices.
	IsInvoiceItem bool `json:"isInvoiceItem"`
	// Current state of the item, either:
	//
	// - `Active`: Available for use
	// - `Archived`: Unavailable
	// - `Unknown`
	//
	// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
	ItemStatus CreateItemSourceModifiedDateItemStatusEnum `json:"itemStatus"`
	Metadata   *CreateItemSourceModifiedDateMetadata      `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Name of the item in the accounting platform.
	Name *string `json:"name,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Type of the item.
	Type CreateItemSourceModifiedDateTypeEnum `json:"type"`
}

type CreateItemRequest struct {
	RequestBody      *CreateItemSourceModifiedDate `request:"mediaType=application/json"`
	CompanyID        string                        `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID     string                        `pathParam:"style=simple,explode=false,name=connectionId"`
	TimeoutInMinutes *int                          `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

type CreateItem200ApplicationJSONChangesPushOperationRecordRef struct {
	DataType *string `json:"dataType,omitempty"`
	ID       *string `json:"id,omitempty"`
}

type CreateItem200ApplicationJSONChangesTypeEnum string

const (
	CreateItem200ApplicationJSONChangesTypeEnumUnknown            CreateItem200ApplicationJSONChangesTypeEnum = "Unknown"
	CreateItem200ApplicationJSONChangesTypeEnumCreated            CreateItem200ApplicationJSONChangesTypeEnum = "Created"
	CreateItem200ApplicationJSONChangesTypeEnumModified           CreateItem200ApplicationJSONChangesTypeEnum = "Modified"
	CreateItem200ApplicationJSONChangesTypeEnumDeleted            CreateItem200ApplicationJSONChangesTypeEnum = "Deleted"
	CreateItem200ApplicationJSONChangesTypeEnumAttachmentUploaded CreateItem200ApplicationJSONChangesTypeEnum = "AttachmentUploaded"
)

func (e *CreateItem200ApplicationJSONChangesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Created":
		fallthrough
	case "Modified":
		fallthrough
	case "Deleted":
		fallthrough
	case "AttachmentUploaded":
		*e = CreateItem200ApplicationJSONChangesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItem200ApplicationJSONChangesTypeEnum: %s", s)
	}
}

type CreateItem200ApplicationJSONChanges struct {
	AttachmentID *string                                                    `json:"attachmentId,omitempty"`
	RecordRef    *CreateItem200ApplicationJSONChangesPushOperationRecordRef `json:"recordRef,omitempty"`
	Type         *CreateItem200ApplicationJSONChangesTypeEnum               `json:"type,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateBillItemAccountRef - Reference of the account to which the item is linked.
type CreateItem200ApplicationJSONSourceModifiedDateBillItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateBillItemTaxRateRef - Reference of the tax rate to which the item is linked.
type CreateItem200ApplicationJSONSourceModifiedDateBillItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateBillItem - Item details that are only for bills.
type CreateItem200ApplicationJSONSourceModifiedDateBillItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *CreateItem200ApplicationJSONSourceModifiedDateBillItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *CreateItem200ApplicationJSONSourceModifiedDateBillItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef - Reference of the account to which the item is linked.
type CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef - Reference of the tax rate to which the item is linked.
type CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateInvoiceItem - Item details that are only for bills.
type CreateItem200ApplicationJSONSourceModifiedDateInvoiceItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *CreateItem200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum - Current state of the item, either:
//
// - `Active`: Available for use
// - `Archived`: Unavailable
// - `Unknown`
//
// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
type CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum string

const (
	CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnumUnknown  CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum = "Unknown"
	CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnumActive   CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum = "Active"
	CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnumArchived CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum = "Archived"
)

func (e *CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum: %s", s)
	}
}

type CreateItem200ApplicationJSONSourceModifiedDateMetadata struct {
	// Indicates whether the record has been deleted in the third-party system this record originated from.
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// CreateItem200ApplicationJSONSourceModifiedDateTypeEnum - Type of the item.
type CreateItem200ApplicationJSONSourceModifiedDateTypeEnum string

const (
	CreateItem200ApplicationJSONSourceModifiedDateTypeEnumUnknown      CreateItem200ApplicationJSONSourceModifiedDateTypeEnum = "Unknown"
	CreateItem200ApplicationJSONSourceModifiedDateTypeEnumInventory    CreateItem200ApplicationJSONSourceModifiedDateTypeEnum = "Inventory"
	CreateItem200ApplicationJSONSourceModifiedDateTypeEnumNonInventory CreateItem200ApplicationJSONSourceModifiedDateTypeEnum = "NonInventory"
	CreateItem200ApplicationJSONSourceModifiedDateTypeEnumService      CreateItem200ApplicationJSONSourceModifiedDateTypeEnum = "Service"
)

func (e *CreateItem200ApplicationJSONSourceModifiedDateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Inventory":
		fallthrough
	case "NonInventory":
		fallthrough
	case "Service":
		*e = CreateItem200ApplicationJSONSourceModifiedDateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItem200ApplicationJSONSourceModifiedDateTypeEnum: %s", s)
	}
}

// CreateItem200ApplicationJSONSourceModifiedDate - > View the coverage for items in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// **Items** allow your customers to save and track details of the products and services that they buy and sell.
type CreateItem200ApplicationJSONSourceModifiedDate struct {
	// Item details that are only for bills.
	BillItem *CreateItem200ApplicationJSONSourceModifiedDateBillItem `json:"billItem,omitempty"`
	// Friendly reference for the item.
	Code *string `json:"code,omitempty"`
	// Identifier for the item that is unique to a company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Item details that are only for bills.
	InvoiceItem *CreateItem200ApplicationJSONSourceModifiedDateInvoiceItem `json:"invoiceItem,omitempty"`
	// Whether you can use this item for bills.
	IsBillItem bool `json:"isBillItem"`
	// Whether you can use this item for invoices.
	IsInvoiceItem bool `json:"isInvoiceItem"`
	// Current state of the item, either:
	//
	// - `Active`: Available for use
	// - `Archived`: Unavailable
	// - `Unknown`
	//
	// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
	ItemStatus CreateItem200ApplicationJSONSourceModifiedDateItemStatusEnum `json:"itemStatus"`
	Metadata   *CreateItem200ApplicationJSONSourceModifiedDateMetadata      `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Name of the item in the accounting platform.
	Name *string `json:"name,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Type of the item.
	Type CreateItem200ApplicationJSONSourceModifiedDateTypeEnum `json:"type"`
}

// CreateItem200ApplicationJSONStatusEnum - The status of the push operation.
type CreateItem200ApplicationJSONStatusEnum string

const (
	CreateItem200ApplicationJSONStatusEnumPending  CreateItem200ApplicationJSONStatusEnum = "Pending"
	CreateItem200ApplicationJSONStatusEnumFailed   CreateItem200ApplicationJSONStatusEnum = "Failed"
	CreateItem200ApplicationJSONStatusEnumSuccess  CreateItem200ApplicationJSONStatusEnum = "Success"
	CreateItem200ApplicationJSONStatusEnumTimedOut CreateItem200ApplicationJSONStatusEnum = "TimedOut"
)

func (e *CreateItem200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Failed":
		fallthrough
	case "Success":
		fallthrough
	case "TimedOut":
		*e = CreateItem200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateItem200ApplicationJSONStatusEnum: %s", s)
	}
}

type CreateItem200ApplicationJSONValidationValidationItem struct {
	ItemID        *string `json:"itemId,omitempty"`
	Message       *string `json:"message,omitempty"`
	ValidatorName *string `json:"validatorName,omitempty"`
}

// CreateItem200ApplicationJSONValidation - A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
type CreateItem200ApplicationJSONValidation struct {
	Errors   []CreateItem200ApplicationJSONValidationValidationItem `json:"errors,omitempty"`
	Warnings []CreateItem200ApplicationJSONValidationValidationItem `json:"warnings,omitempty"`
}

// CreateItem200ApplicationJSON - Success
type CreateItem200ApplicationJSON struct {
	Changes []CreateItem200ApplicationJSONChanges `json:"changes,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID string `json:"companyId"`
	// The datetime when the push was completed, null if Pending.
	CompletedOnUtc *string `json:"completedOnUtc,omitempty"`
	// > View the coverage for items in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items" target="_blank">Data coverage explorer</a>.
	//
	// ## Overview
	//
	// **Items** allow your customers to save and track details of the products and services that they buy and sell.
	//
	Data *CreateItem200ApplicationJSONSourceModifiedDate `json:"data,omitempty"`
	// Unique identifier for a company's data connection.
	DataConnectionKey string `json:"dataConnectionKey"`
	// The type of data being pushed, eg invoices, customers.
	DataType     *string `json:"dataType,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
	PushOperationKey string `json:"pushOperationKey"`
	// The datetime when the push was requested.
	RequestedOnUtc string `json:"requestedOnUtc"`
	// The status of the push operation.
	Status           CreateItem200ApplicationJSONStatusEnum `json:"status"`
	StatusCode       int                                    `json:"statusCode"`
	TimeoutInMinutes *int                                   `json:"timeoutInMinutes,omitempty"`
	TimeoutInSeconds *int                                   `json:"timeoutInSeconds,omitempty"`
	// A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
	Validation *CreateItem200ApplicationJSONValidation `json:"validation,omitempty"`
}

type CreateItemResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CreateItem200ApplicationJSONObject *CreateItem200ApplicationJSON
}
