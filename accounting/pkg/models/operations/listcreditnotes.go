// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListCreditNotesRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListCreditNotesLinksLinksCurrent struct {
	Href string `json:"href"`
}

type ListCreditNotesLinksLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type ListCreditNotesLinksLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type ListCreditNotesLinksLinksSelf struct {
	Href string `json:"href"`
}

type ListCreditNotesLinksLinks struct {
	Current  ListCreditNotesLinksLinksCurrent   `json:"current"`
	Next     *ListCreditNotesLinksLinksNext     `json:"next,omitempty"`
	Previous *ListCreditNotesLinksLinksPrevious `json:"previous,omitempty"`
	Self     ListCreditNotesLinksLinksSelf      `json:"self"`
}

// ListCreditNotesLinksSourceModifiedDateCustomerRef - Reference to the customer the credit note has been issued to.
type ListCreditNotesLinksSourceModifiedDateCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

// ListCreditNotesLinksSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type ListCreditNotesLinksSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// ListCreditNotesLinksSourceModifiedDateLineItemsItemRef - Reference to the item the line is linked to.
type ListCreditNotesLinksSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// ListCreditNotesLinksSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type ListCreditNotesLinksSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

type ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum string

const (
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumUnknown       ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Unknown"
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumNotApplicable ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "NotApplicable"
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumProject       ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Project"
)

type ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum string

const (
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumUnknown       ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Unknown"
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumNotApplicable ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "NotApplicable"
	ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumProject       ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Project"
)

type ListCreditNotesLinksSourceModifiedDateLineItemsTrackingProjectRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// ListCreditNotesLinksSourceModifiedDateLineItemsTracking - Categories, and a project and customer, against which the item is tracked.
type ListCreditNotesLinksSourceModifiedDateLineItemsTracking struct {
	CategoryRefs []ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCategoryRefs   `json:"categoryRefs"`
	CustomerRef  *ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCustomerRef     `json:"customerRef,omitempty"`
	IsBilledTo   ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum   `json:"isBilledTo"`
	IsRebilledTo ListCreditNotesLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum `json:"isRebilledTo"`
	ProjectRef   *ListCreditNotesLinksSourceModifiedDateLineItemsTrackingProjectRef      `json:"projectRef,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *ListCreditNotesLinksSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Friendly name of each line item. For example, the goods or service for which credit has been issued.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *float64 `json:"discountAmount,omitempty"`
	// Percentage rate of any discount applied to the line item.
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	IsDirectIncome     *bool    `json:"isDirectIncome,omitempty"`
	// Reference to the item the line is linked to.
	ItemRef *ListCreditNotesLinksSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units of the goods or service for which credit has been issued.
	Quantity float64 `json:"quantity"`
	// Amount of credit associated with the line item, including discounts but excluding tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax associated with the line item.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *ListCreditNotesLinksSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line item, including discounts and tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Categories, and a project and customer, against which the item is tracked.
	Tracking *ListCreditNotesLinksSourceModifiedDateLineItemsTracking `json:"tracking,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []ListCreditNotesLinksSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Unit price of the goods or service.
	UnitAmount float64 `json:"unitAmount"`
}

type ListCreditNotesLinksSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDatePaymentAllocationsAllocation struct {
	// The date the payment was allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// The currency of the transaction.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// The total amount that has been allocated.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// ListCreditNotesLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef - The account that the allocated payment is made from or to.
type ListCreditNotesLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDatePaymentAllocationsPayment struct {
	// The account that the allocated payment is made from or to.
	AccountRef *ListCreditNotesLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef `json:"accountRef,omitempty"`
	// Currency the payment has been made in.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Identifier of the allocated payment.
	ID *string `json:"id,omitempty"`
	// Notes attached to the allocated payment.
	Note *string `json:"note,omitempty"`
	// The date the payment was paid.
	PaidOnDate *time.Time `json:"paidOnDate,omitempty"`
	// Reference to the allocated payment.
	Reference *string `json:"reference,omitempty"`
	// Total amount that was paid.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDatePaymentAllocations struct {
	Allocation ListCreditNotesLinksSourceModifiedDatePaymentAllocationsAllocation `json:"allocation"`
	Payment    ListCreditNotesLinksSourceModifiedDatePaymentAllocationsPayment    `json:"payment"`
}

// ListCreditNotesLinksSourceModifiedDateStatusEnum - Current state of the credit note.
type ListCreditNotesLinksSourceModifiedDateStatusEnum string

const (
	ListCreditNotesLinksSourceModifiedDateStatusEnumUnknown       ListCreditNotesLinksSourceModifiedDateStatusEnum = "Unknown"
	ListCreditNotesLinksSourceModifiedDateStatusEnumDraft         ListCreditNotesLinksSourceModifiedDateStatusEnum = "Draft"
	ListCreditNotesLinksSourceModifiedDateStatusEnumSubmitted     ListCreditNotesLinksSourceModifiedDateStatusEnum = "Submitted"
	ListCreditNotesLinksSourceModifiedDateStatusEnumPaid          ListCreditNotesLinksSourceModifiedDateStatusEnum = "Paid"
	ListCreditNotesLinksSourceModifiedDateStatusEnumVoid          ListCreditNotesLinksSourceModifiedDateStatusEnum = "Void"
	ListCreditNotesLinksSourceModifiedDateStatusEnumPartiallyPaid ListCreditNotesLinksSourceModifiedDateStatusEnum = "PartiallyPaid"
)

// ListCreditNotesLinksSourceModifiedDateSupplementalData - Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
type ListCreditNotesLinksSourceModifiedDateSupplementalData struct {
	Content map[string]map[string]interface{} `json:"content,omitempty"`
}

type ListCreditNotesLinksSourceModifiedDateWithholdingTax struct {
	Amount float64 `json:"amount"`
	Name   string  `json:"name"`
}

// ListCreditNotesLinksSourceModifiedDate - > View the coverage for credit notes in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// Think of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.
//
// In the Codat system a credit note is issued to a [customer's](https://docs.codat.io/accounting-api#/schemas/Customer) accounts receivable.
//
// It contains details of:
// * The amount of credit remaining and its status.
// * Payment allocations against the payments type, in this case an invoice.
// * Which customers the credit notes have been issued to.
type ListCreditNotesLinksSourceModifiedDate struct {
	AdditionalTaxAmount     *float64 `json:"additionalTaxAmount,omitempty"`
	AdditionalTaxPercentage *float64 `json:"additionalTaxPercentage,omitempty"`
	// Date on which the credit note was fully allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// Friendly reference for the credit note.
	CreditNoteNumber *string `json:"creditNoteNumber,omitempty"`
	// Currency of the credit note.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Reference to the customer the credit note has been issued to.
	CustomerRef *ListCreditNotesLinksSourceModifiedDateCustomerRef `json:"customerRef,omitempty"`
	// Percentage rate (from 0 to 100) of discounts applied to the credit note.
	DiscountPercentage float64 `json:"discountPercentage"`
	// Identifier for the credit note, unique to the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the credit note as recorded in the accounting system.
	IssueDate *time.Time                                        `json:"issueDate,omitempty"`
	LineItems []ListCreditNotesLinksSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *ListCreditNotesLinksSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information about the credit note. Where possible, Codat links to a data field in the accounting platform that is publicly available. This means that the contents of the note field are included when a credit note is emailed from the accounting platform to the customer.
	Note *string `json:"note,omitempty"`
	// An array of payment allocations.
	PaymentAllocations []ListCreditNotesLinksSourceModifiedDatePaymentAllocations `json:"paymentAllocations,omitempty"`
	// Unused balance of totalAmount originally raised.
	RemainingCredit float64 `json:"remainingCredit"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the credit note.
	Status ListCreditNotesLinksSourceModifiedDateStatusEnum `json:"status"`
	// Value of the credit note, including discounts and excluding tax.
	SubTotal float64 `json:"subTotal"`
	// Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
	SupplementalData *ListCreditNotesLinksSourceModifiedDateSupplementalData `json:"supplementalData,omitempty"`
	// Total amount of credit that has been applied to the customer's accounts receivable
	TotalAmount float64 `json:"totalAmount"`
	// Any discounts applied to the credit note amount.
	TotalDiscount float64 `json:"totalDiscount"`
	// Any tax applied to the credit note amount.
	TotalTaxAmount float64                                                `json:"totalTaxAmount"`
	WithholdingTax []ListCreditNotesLinksSourceModifiedDateWithholdingTax `json:"withholdingTax,omitempty"`
}

// ListCreditNotesLinks - Codat's Paging Model
type ListCreditNotesLinks struct {
	Links        ListCreditNotesLinksLinks                `json:"_links"`
	PageNumber   int64                                    `json:"pageNumber"`
	PageSize     int64                                    `json:"pageSize"`
	Results      []ListCreditNotesLinksSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                    `json:"totalResults"`
}

type ListCreditNotesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	Links *ListCreditNotesLinks
}
