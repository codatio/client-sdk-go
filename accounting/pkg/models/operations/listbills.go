// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListBillsRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListBillsLinksLinksCurrent struct {
	Href string `json:"href"`
}

type ListBillsLinksLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type ListBillsLinksLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type ListBillsLinksLinksSelf struct {
	Href string `json:"href"`
}

type ListBillsLinksLinks struct {
	Current  ListBillsLinksLinksCurrent   `json:"current"`
	Next     *ListBillsLinksLinksNext     `json:"next,omitempty"`
	Previous *ListBillsLinksLinksPrevious `json:"previous,omitempty"`
	Self     ListBillsLinksLinksSelf      `json:"self"`
}

// ListBillsLinksSourceModifiedDateLineItemsAccountRef - Reference to the account to which the line item is linked.
type ListBillsLinksSourceModifiedDateLineItemsAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// ListBillsLinksSourceModifiedDateLineItemsItemRef - Reference to the product, service type, or inventory item to which the line item is linked.
type ListBillsLinksSourceModifiedDateLineItemsItemRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// ListBillsLinksSourceModifiedDateLineItemsTaxRateRef - Reference to the tax rate to which the line item is linked.
type ListBillsLinksSourceModifiedDateLineItemsTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// ListBillsLinksSourceModifiedDateLineItemsTrackingCategoryRefs - References a category against which the item is tracked.
type ListBillsLinksSourceModifiedDateLineItemsTrackingCategoryRefs struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type ListBillsLinksSourceModifiedDateLineItemsTrackingCustomerRef struct {
	CompanyName *string `json:"companyName,omitempty"`
	ID          string  `json:"id"`
}

type ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum string

const (
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumUnknown       ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Unknown"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumNotApplicable ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "NotApplicable"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumCustomer      ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Customer"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnumProject       ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum = "Project"
)

type ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum string

const (
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumUnknown       ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Unknown"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumNotApplicable ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "NotApplicable"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumCustomer      ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Customer"
	ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnumProject       ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum = "Project"
)

type ListBillsLinksSourceModifiedDateLineItemsTrackingProjectRef struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// ListBillsLinksSourceModifiedDateLineItemsTracking - Categories, and a project and customer, against which the item is tracked.
type ListBillsLinksSourceModifiedDateLineItemsTracking struct {
	CategoryRefs []ListBillsLinksSourceModifiedDateLineItemsTrackingCategoryRefs   `json:"categoryRefs"`
	CustomerRef  *ListBillsLinksSourceModifiedDateLineItemsTrackingCustomerRef     `json:"customerRef,omitempty"`
	IsBilledTo   ListBillsLinksSourceModifiedDateLineItemsTrackingIsBilledToEnum   `json:"isBilledTo"`
	IsRebilledTo ListBillsLinksSourceModifiedDateLineItemsTrackingIsRebilledToEnum `json:"isRebilledTo"`
	ProjectRef   *ListBillsLinksSourceModifiedDateLineItemsTrackingProjectRef      `json:"projectRef,omitempty"`
}

type ListBillsLinksSourceModifiedDateLineItems struct {
	// Reference to the account to which the line item is linked.
	AccountRef *ListBillsLinksSourceModifiedDateLineItemsAccountRef `json:"accountRef,omitempty"`
	// Friendly name of the goods or services received.
	Description *string `json:"description,omitempty"`
	// Numerical value of any discounts applied.
	//
	// Do not use to apply discounts in Oracle NetSuite—see Oracle NetSuite integration reference.
	DiscountAmount     *float64 `json:"discountAmount,omitempty"`
	DiscountPercentage *float64 `json:"discountPercentage,omitempty"`
	IsDirectCost       *bool    `json:"isDirectCost,omitempty"`
	// Reference to the product, service type, or inventory item to which the line item is linked.
	ItemRef *ListBillsLinksSourceModifiedDateLineItemsItemRef `json:"itemRef,omitempty"`
	// Number of units of goods or services received.
	Quantity float64 `json:"quantity"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *float64 `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Reference to the tax rate to which the line item is linked.
	TaxRateRef *ListBillsLinksSourceModifiedDateLineItemsTaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, including tax.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Categories, and a project and customer, against which the item is tracked.
	Tracking *ListBillsLinksSourceModifiedDateLineItemsTracking `json:"tracking,omitempty"`
	// Collection of categories against which this item is tracked.
	TrackingCategoryRefs []ListBillsLinksSourceModifiedDateLineItemsTrackingCategoryRefs `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit of goods or services.
	UnitAmount float64 `json:"unitAmount"`
}

type ListBillsLinksSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

type ListBillsLinksSourceModifiedDatePaymentAllocationsAllocation struct {
	// The date the payment was allocated.
	AllocatedOnDate *time.Time `json:"allocatedOnDate,omitempty"`
	// The currency of the transaction.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// The total amount that has been allocated.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// ListBillsLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef - The account that the allocated payment is made from or to.
type ListBillsLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

type ListBillsLinksSourceModifiedDatePaymentAllocationsPayment struct {
	// The account that the allocated payment is made from or to.
	AccountRef *ListBillsLinksSourceModifiedDatePaymentAllocationsPaymentAccountRef `json:"accountRef,omitempty"`
	// Currency the payment has been made in.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Identifier of the allocated payment.
	ID *string `json:"id,omitempty"`
	// Notes attached to the allocated payment.
	Note *string `json:"note,omitempty"`
	// The date the payment was paid.
	PaidOnDate *time.Time `json:"paidOnDate,omitempty"`
	// Reference to the allocated payment.
	Reference *string `json:"reference,omitempty"`
	// Total amount that was paid.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

type ListBillsLinksSourceModifiedDatePaymentAllocations struct {
	Allocation ListBillsLinksSourceModifiedDatePaymentAllocationsAllocation `json:"allocation"`
	Payment    ListBillsLinksSourceModifiedDatePaymentAllocationsPayment    `json:"payment"`
}

type ListBillsLinksSourceModifiedDatePurchaseOrderRefs struct {
	ID                  *string `json:"id,omitempty"`
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
}

// ListBillsLinksSourceModifiedDateStatusEnum - Current state of the bill.
type ListBillsLinksSourceModifiedDateStatusEnum string

const (
	ListBillsLinksSourceModifiedDateStatusEnumUnknown       ListBillsLinksSourceModifiedDateStatusEnum = "Unknown"
	ListBillsLinksSourceModifiedDateStatusEnumOpen          ListBillsLinksSourceModifiedDateStatusEnum = "Open"
	ListBillsLinksSourceModifiedDateStatusEnumPartiallyPaid ListBillsLinksSourceModifiedDateStatusEnum = "PartiallyPaid"
	ListBillsLinksSourceModifiedDateStatusEnumPaid          ListBillsLinksSourceModifiedDateStatusEnum = "Paid"
	ListBillsLinksSourceModifiedDateStatusEnumVoid          ListBillsLinksSourceModifiedDateStatusEnum = "Void"
	ListBillsLinksSourceModifiedDateStatusEnumDraft         ListBillsLinksSourceModifiedDateStatusEnum = "Draft"
)

// ListBillsLinksSourceModifiedDateSupplementalData - Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
type ListBillsLinksSourceModifiedDateSupplementalData struct {
	Content map[string]map[string]interface{} `json:"content,omitempty"`
}

// ListBillsLinksSourceModifiedDateSupplierRef - Reference to the supplier the bill was received from.
type ListBillsLinksSourceModifiedDateSupplierRef struct {
	ID           string  `json:"id"`
	SupplierName *string `json:"supplierName,omitempty"`
}

type ListBillsLinksSourceModifiedDateWithholdingTax struct {
	Amount float64 `json:"amount"`
	Name   string  `json:"name"`
}

// ListBillsLinksSourceModifiedDate - > **Invoices or bills?**
// >
// > In Codat, bills are for accounts payable only. For the accounts receivable equivalent of bills, see [Invoices](https://docs.codat.io/accounting-api#/schemas/Invoice).
//
// View the coverage for bills in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// In Codat, a bill contains details of:
// * When the bill was recorded in the accounting system.
// * How much the bill is for and the currency of the amount.
// * Who the bill was received from — the *supplier*.
// * What the bill is for — the *line items*.
//
// Some accounting platforms give a separate name to purchases where the payment is made immediately, such as something bought with a credit card or online payment. One example of this would be QuickBooks Online's *expenses*.
//
// You can find these types of transactions in our [Direct costs](https://docs.codat.io/accounting-api#/schemas/DirectCost) data model.
type ListBillsLinksSourceModifiedDate struct {
	// Amount outstanding on the bill.
	AmountDue *float64 `json:"amountDue,omitempty"`
	// Currency of the bill.
	Currency *string `json:"currency,omitempty"`
	// Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
	//
	// Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
	//
	// Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
	//
	// For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
	//
	// ## Examples with base currency of GBP
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **USD**          | $20            | 0.781         | £15.62                     |
	// | **EUR**          | €20            | 0.885         | £17.70                     |
	// | **RUB**          | ₽20            | 0.011         | £0.22                      |
	//
	// ## Examples with base currency of USD
	//
	// | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
	// | :--------------- | :------------- | :------------ | :------------------------- |
	// | **GBP**          | £20            | 1.277         | $25.54                     |
	// | **EUR**          | €20            | 1.134         | $22.68                     |
	// | **RUB**          | ₽20            | 0.015         | $0.30                      |
	CurrencyRate *float64 `json:"currencyRate,omitempty"`
	// Date the supplier is due to be paid.
	DueDate *time.Time `json:"dueDate,omitempty"`
	// Identifier for the bill, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Date of the bill as recorded in the accounting platform.
	IssueDate time.Time `json:"issueDate"`
	// Array of BillLineItems.
	LineItems []ListBillsLinksSourceModifiedDateLineItems `json:"lineItems,omitempty"`
	Metadata  *ListBillsLinksSourceModifiedDateMetadata   `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any private, company notes about the bill, such as payment information.
	Note *string `json:"note,omitempty"`
	// An array of payment allocations.
	PaymentAllocations []ListBillsLinksSourceModifiedDatePaymentAllocations `json:"paymentAllocations,omitempty"`
	PurchaseOrderRefs  []ListBillsLinksSourceModifiedDatePurchaseOrderRefs  `json:"purchaseOrderRefs,omitempty"`
	// User-friendly reference for the bill.
	Reference *string `json:"reference,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current state of the bill.
	Status ListBillsLinksSourceModifiedDateStatusEnum `json:"status"`
	// Total amount of the bill, excluding any taxes.
	SubTotal float64 `json:"subTotal"`
	// Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
	SupplementalData *ListBillsLinksSourceModifiedDateSupplementalData `json:"supplementalData,omitempty"`
	// Reference to the supplier the bill was received from.
	SupplierRef *ListBillsLinksSourceModifiedDateSupplierRef `json:"supplierRef,omitempty"`
	// Amount of tax on the bill.
	TaxAmount float64 `json:"taxAmount"`
	// Amount of the bill, including tax.
	TotalAmount    float64                                          `json:"totalAmount"`
	WithholdingTax []ListBillsLinksSourceModifiedDateWithholdingTax `json:"withholdingTax,omitempty"`
}

// ListBillsLinks - Codat's Paging Model
type ListBillsLinks struct {
	Links        ListBillsLinksLinks                `json:"_links"`
	PageNumber   int64                              `json:"pageNumber"`
	PageSize     int64                              `json:"pageSize"`
	Results      []ListBillsLinksSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                              `json:"totalResults"`
}

type ListBillsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	Links *ListBillsLinks
}
