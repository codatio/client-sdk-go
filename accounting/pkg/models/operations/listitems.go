// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListItemsRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListItems200ApplicationJSONLinksHypertextReference struct {
	Href *string `json:"href,omitempty"`
}

type ListItems200ApplicationJSONLinks struct {
	Current  ListItems200ApplicationJSONLinksHypertextReference  `json:"current"`
	Next     *ListItems200ApplicationJSONLinksHypertextReference `json:"next,omitempty"`
	Previous *ListItems200ApplicationJSONLinksHypertextReference `json:"previous,omitempty"`
	Self     ListItems200ApplicationJSONLinksHypertextReference  `json:"self"`
}

// ListItems200ApplicationJSONSourceModifiedDateBillItemAccountRef - Reference of the account to which the item is linked.
type ListItems200ApplicationJSONSourceModifiedDateBillItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateBillItemTaxRateRef - Reference of the tax rate to which the item is linked.
type ListItems200ApplicationJSONSourceModifiedDateBillItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateBillItem - Item details that are only for bills.
type ListItems200ApplicationJSONSourceModifiedDateBillItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *ListItems200ApplicationJSONSourceModifiedDateBillItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *ListItems200ApplicationJSONSourceModifiedDateBillItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef - Reference of the account to which the item is linked.
type ListItems200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef struct {
	// 'id' from the Accounts data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the Accounts data type.
	Name *string `json:"name,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef - Reference of the tax rate to which the item is linked.
type ListItems200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef struct {
	// Applicable tax rate.
	EffectiveTaxRate *float64 `json:"effectiveTaxRate,omitempty"`
	// 'id' from the 'taxRates' data type.
	ID *string `json:"id,omitempty"`
	// 'name' from the 'taxRates' data type.
	Name *string `json:"name,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateInvoiceItem - Item details that are only for bills.
type ListItems200ApplicationJSONSourceModifiedDateInvoiceItem struct {
	// Reference of the account to which the item is linked.
	AccountRef *ListItems200ApplicationJSONSourceModifiedDateInvoiceItemAccountRef `json:"accountRef,omitempty"`
	// Short description of the product or service that has been bought by the customer.
	Description *string `json:"description,omitempty"`
	// Reference of the tax rate to which the item is linked.
	TaxRateRef *ListItems200ApplicationJSONSourceModifiedDateInvoiceItemTaxRateRef `json:"taxRateRef,omitempty"`
	// Unit price of the product or service.
	UnitPrice *float64 `json:"unitPrice,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum - Current state of the item, either:
//
// - `Active`: Available for use
// - `Archived`: Unavailable
// - `Unknown`
//
// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
type ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum string

const (
	ListItems200ApplicationJSONSourceModifiedDateItemStatusEnumUnknown  ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum = "Unknown"
	ListItems200ApplicationJSONSourceModifiedDateItemStatusEnumActive   ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum = "Active"
	ListItems200ApplicationJSONSourceModifiedDateItemStatusEnumArchived ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum = "Archived"
)

func (e *ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum: %s", s)
	}
}

type ListItems200ApplicationJSONSourceModifiedDateMetadata struct {
	// Indicates whether the record has been deleted in the third-party system this record originated from.
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// ListItems200ApplicationJSONSourceModifiedDateTypeEnum - Type of the item.
type ListItems200ApplicationJSONSourceModifiedDateTypeEnum string

const (
	ListItems200ApplicationJSONSourceModifiedDateTypeEnumUnknown      ListItems200ApplicationJSONSourceModifiedDateTypeEnum = "Unknown"
	ListItems200ApplicationJSONSourceModifiedDateTypeEnumInventory    ListItems200ApplicationJSONSourceModifiedDateTypeEnum = "Inventory"
	ListItems200ApplicationJSONSourceModifiedDateTypeEnumNonInventory ListItems200ApplicationJSONSourceModifiedDateTypeEnum = "NonInventory"
	ListItems200ApplicationJSONSourceModifiedDateTypeEnumService      ListItems200ApplicationJSONSourceModifiedDateTypeEnum = "Service"
)

func (e *ListItems200ApplicationJSONSourceModifiedDateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Inventory":
		fallthrough
	case "NonInventory":
		fallthrough
	case "Service":
		*e = ListItems200ApplicationJSONSourceModifiedDateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListItems200ApplicationJSONSourceModifiedDateTypeEnum: %s", s)
	}
}

// ListItems200ApplicationJSONSourceModifiedDate - > View the coverage for items in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// **Items** allow your customers to save and track details of the products and services that they buy and sell.
type ListItems200ApplicationJSONSourceModifiedDate struct {
	// Item details that are only for bills.
	BillItem *ListItems200ApplicationJSONSourceModifiedDateBillItem `json:"billItem,omitempty"`
	// Friendly reference for the item.
	Code *string `json:"code,omitempty"`
	// Identifier for the item that is unique to a company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// Item details that are only for bills.
	InvoiceItem *ListItems200ApplicationJSONSourceModifiedDateInvoiceItem `json:"invoiceItem,omitempty"`
	// Whether you can use this item for bills.
	IsBillItem bool `json:"isBillItem"`
	// Whether you can use this item for invoices.
	IsInvoiceItem bool `json:"isInvoiceItem"`
	// Current state of the item, either:
	//
	// - `Active`: Available for use
	// - `Archived`: Unavailable
	// - `Unknown`
	//
	// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
	ItemStatus ListItems200ApplicationJSONSourceModifiedDateItemStatusEnum `json:"itemStatus"`
	Metadata   *ListItems200ApplicationJSONSourceModifiedDateMetadata      `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// Name of the item in the accounting platform.
	Name *string `json:"name,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Type of the item.
	Type ListItems200ApplicationJSONSourceModifiedDateTypeEnum `json:"type"`
}

// ListItems200ApplicationJSON - Success
type ListItems200ApplicationJSON struct {
	Links        ListItems200ApplicationJSONLinks                `json:"_links"`
	PageNumber   int64                                           `json:"pageNumber"`
	PageSize     int64                                           `json:"pageSize"`
	Results      []ListItems200ApplicationJSONSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                           `json:"totalResults"`
}

type ListItemsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	ListItems200ApplicationJSONObject *ListItems200ApplicationJSON
}
