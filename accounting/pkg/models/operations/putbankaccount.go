// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// PutBankAccountSourceModifiedDateAccountTypeEnum - The type of the account.
type PutBankAccountSourceModifiedDateAccountTypeEnum string

const (
	PutBankAccountSourceModifiedDateAccountTypeEnumUnknown PutBankAccountSourceModifiedDateAccountTypeEnum = "Unknown"
	PutBankAccountSourceModifiedDateAccountTypeEnumCredit  PutBankAccountSourceModifiedDateAccountTypeEnum = "Credit"
	PutBankAccountSourceModifiedDateAccountTypeEnumDebit   PutBankAccountSourceModifiedDateAccountTypeEnum = "Debit"
)

type PutBankAccountSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// PutBankAccountSourceModifiedDate - > **Accessing Bank Accounts through Banking API**
// >
// > This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators.
// >
// > To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/banking-api#/schemas/Account)
//
// > View the coverage for bank accounts in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// A list of bank accounts associated with a company and a specific [data connection](https://api.codat.io/swagger/index.html#/Connection/get_companies__companyId__connections__connectionId_).
//
// Bank accounts data includes:
// * The name and ID of the account in the accounting platform.
// * The currency and balance of the account.
// * The sort code and account number.
type PutBankAccountSourceModifiedDate struct {
	// Name of the bank account in the accounting platform.
	AccountName *string `json:"accountName,omitempty"`
	// Account number for the bank account.
	//
	// Xero integrations
	// Only a UK account number shows for bank accounts with GBP currency and a combined total of sort code and account number that equals 14 digits, For non-GBP accounts, the full bank account number is populated.
	//
	// FreeAgent integrations
	// For Credit accounts, only the last four digits are required. For other types, the field is optional.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The type of the account.
	AccountType *PutBankAccountSourceModifiedDateAccountTypeEnum `json:"accountType,omitempty"`
	// Total available balance of the bank account as reported by the underlying data source. This may take into account overdrafts or pending transactions for example.
	AvailableBalance *float64 `json:"availableBalance,omitempty"`
	// Balance of the bank account.
	Balance *float64 `json:"balance,omitempty"`
	// Base currency of the bank account.
	Currency *string `json:"currency,omitempty"`
	// International bank account number of the account. Often used when making or receiving international payments.
	IBan *string `json:"iBan,omitempty"`
	// Identifier for the account, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// The institution of the bank account.
	Institution *string                                   `json:"institution,omitempty"`
	Metadata    *PutBankAccountSourceModifiedDateMetadata `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Code used to identify each nominal account for a business.
	NominalCode *string `json:"nominalCode,omitempty"`
	// Pre-arranged overdraft limit of the account.
	//
	// The value is always positive. For example, an overdraftLimit of `1000` means that the balance of the account can go down to `-1000`.
	OverdraftLimit *float64 `json:"overdraftLimit,omitempty"`
	// Sort code for the bank account.
	//
	// Xero integrations
	// The sort code is only displayed when the currency = GBP and the sort code and account number sum to 14 digits. For non-GBP accounts, this field is not populated.
	SortCode *string `json:"sortCode,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
}

type PutBankAccountRequest struct {
	RequestBody *PutBankAccountSourceModifiedDate `request:"mediaType=application/json"`
	// Unique identifier for a bank account
	BankAccountID    string `pathParam:"style=simple,explode=false,name=bankAccountId"`
	CompanyID        string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID     string `pathParam:"style=simple,explode=false,name=connectionId"`
	ForceUpdate      *bool  `queryParam:"style=form,explode=true,name=forceUpdate"`
	TimeoutInMinutes *int   `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

type PutBankAccount200ApplicationJSONChangesPushOperationRecordRef struct {
	DataType *string `json:"dataType,omitempty"`
	ID       *string `json:"id,omitempty"`
}

type PutBankAccount200ApplicationJSONChangesTypeEnum string

const (
	PutBankAccount200ApplicationJSONChangesTypeEnumUnknown            PutBankAccount200ApplicationJSONChangesTypeEnum = "Unknown"
	PutBankAccount200ApplicationJSONChangesTypeEnumCreated            PutBankAccount200ApplicationJSONChangesTypeEnum = "Created"
	PutBankAccount200ApplicationJSONChangesTypeEnumModified           PutBankAccount200ApplicationJSONChangesTypeEnum = "Modified"
	PutBankAccount200ApplicationJSONChangesTypeEnumDeleted            PutBankAccount200ApplicationJSONChangesTypeEnum = "Deleted"
	PutBankAccount200ApplicationJSONChangesTypeEnumAttachmentUploaded PutBankAccount200ApplicationJSONChangesTypeEnum = "AttachmentUploaded"
)

type PutBankAccount200ApplicationJSONChanges struct {
	AttachmentID *string                                                        `json:"attachmentId,omitempty"`
	RecordRef    *PutBankAccount200ApplicationJSONChangesPushOperationRecordRef `json:"recordRef,omitempty"`
	Type         *PutBankAccount200ApplicationJSONChangesTypeEnum               `json:"type,omitempty"`
}

// PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum - The type of the account.
type PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum string

const (
	PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnumUnknown PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum = "Unknown"
	PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnumCredit  PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum = "Credit"
	PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnumDebit   PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum = "Debit"
)

type PutBankAccount200ApplicationJSONSourceModifiedDateMetadata struct {
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// PutBankAccount200ApplicationJSONSourceModifiedDate - > **Accessing Bank Accounts through Banking API**
// >
// > This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators.
// >
// > To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/banking-api#/schemas/Account)
//
// > View the coverage for bank accounts in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// A list of bank accounts associated with a company and a specific [data connection](https://api.codat.io/swagger/index.html#/Connection/get_companies__companyId__connections__connectionId_).
//
// Bank accounts data includes:
// * The name and ID of the account in the accounting platform.
// * The currency and balance of the account.
// * The sort code and account number.
type PutBankAccount200ApplicationJSONSourceModifiedDate struct {
	// Name of the bank account in the accounting platform.
	AccountName *string `json:"accountName,omitempty"`
	// Account number for the bank account.
	//
	// Xero integrations
	// Only a UK account number shows for bank accounts with GBP currency and a combined total of sort code and account number that equals 14 digits, For non-GBP accounts, the full bank account number is populated.
	//
	// FreeAgent integrations
	// For Credit accounts, only the last four digits are required. For other types, the field is optional.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The type of the account.
	AccountType *PutBankAccount200ApplicationJSONSourceModifiedDateAccountTypeEnum `json:"accountType,omitempty"`
	// Total available balance of the bank account as reported by the underlying data source. This may take into account overdrafts or pending transactions for example.
	AvailableBalance *float64 `json:"availableBalance,omitempty"`
	// Balance of the bank account.
	Balance *float64 `json:"balance,omitempty"`
	// Base currency of the bank account.
	Currency *string `json:"currency,omitempty"`
	// International bank account number of the account. Often used when making or receiving international payments.
	IBan *string `json:"iBan,omitempty"`
	// Identifier for the account, unique for the company in the accounting platform.
	ID *string `json:"id,omitempty"`
	// The institution of the bank account.
	Institution *string                                                     `json:"institution,omitempty"`
	Metadata    *PutBankAccount200ApplicationJSONSourceModifiedDateMetadata `json:"metadata,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Code used to identify each nominal account for a business.
	NominalCode *string `json:"nominalCode,omitempty"`
	// Pre-arranged overdraft limit of the account.
	//
	// The value is always positive. For example, an overdraftLimit of `1000` means that the balance of the account can go down to `-1000`.
	OverdraftLimit *float64 `json:"overdraftLimit,omitempty"`
	// Sort code for the bank account.
	//
	// Xero integrations
	// The sort code is only displayed when the currency = GBP and the sort code and account number sum to 14 digits. For non-GBP accounts, this field is not populated.
	SortCode *string `json:"sortCode,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
}

// PutBankAccount200ApplicationJSONStatusEnum - The status of the push operation.
type PutBankAccount200ApplicationJSONStatusEnum string

const (
	PutBankAccount200ApplicationJSONStatusEnumPending  PutBankAccount200ApplicationJSONStatusEnum = "Pending"
	PutBankAccount200ApplicationJSONStatusEnumFailed   PutBankAccount200ApplicationJSONStatusEnum = "Failed"
	PutBankAccount200ApplicationJSONStatusEnumSuccess  PutBankAccount200ApplicationJSONStatusEnum = "Success"
	PutBankAccount200ApplicationJSONStatusEnumTimedOut PutBankAccount200ApplicationJSONStatusEnum = "TimedOut"
)

type PutBankAccount200ApplicationJSONValidationValidationItem struct {
	ItemID        *string `json:"itemId,omitempty"`
	Message       *string `json:"message,omitempty"`
	ValidatorName *string `json:"validatorName,omitempty"`
}

// PutBankAccount200ApplicationJSONValidation - A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
type PutBankAccount200ApplicationJSONValidation struct {
	Errors   []PutBankAccount200ApplicationJSONValidationValidationItem `json:"errors,omitempty"`
	Warnings []PutBankAccount200ApplicationJSONValidationValidationItem `json:"warnings,omitempty"`
}

// PutBankAccount200ApplicationJSON - Success
type PutBankAccount200ApplicationJSON struct {
	Changes []PutBankAccount200ApplicationJSONChanges `json:"changes,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID string `json:"companyId"`
	// The datetime when the push was completed, null if Pending.
	CompletedOnUtc *time.Time `json:"completedOnUtc,omitempty"`
	// > **Accessing Bank Accounts through Banking API**
	// >
	// > This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators.
	// >
	// > To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/banking-api#/schemas/Account)
	//
	// > View the coverage for bank accounts in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts" target="_blank">Data coverage explorer</a>.
	//
	// ## Overview
	//
	// A list of bank accounts associated with a company and a specific [data connection](https://api.codat.io/swagger/index.html#/Connection/get_companies__companyId__connections__connectionId_).
	//
	// Bank accounts data includes:
	// * The name and ID of the account in the accounting platform.
	// * The currency and balance of the account.
	// * The sort code and account number.
	Data *PutBankAccount200ApplicationJSONSourceModifiedDate `json:"data,omitempty"`
	// Unique identifier for a company's data connection.
	DataConnectionKey string `json:"dataConnectionKey"`
	// The type of data being pushed, eg invoices, customers.
	DataType     *string `json:"dataType,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
	PushOperationKey string `json:"pushOperationKey"`
	// The datetime when the push was requested.
	RequestedOnUtc time.Time `json:"requestedOnUtc"`
	// The status of the push operation.
	Status           PutBankAccount200ApplicationJSONStatusEnum `json:"status"`
	StatusCode       int                                        `json:"statusCode"`
	TimeoutInMinutes *int                                       `json:"timeoutInMinutes,omitempty"`
	TimeoutInSeconds *int                                       `json:"timeoutInSeconds,omitempty"`
	// A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
	Validation *PutBankAccount200ApplicationJSONValidation `json:"validation,omitempty"`
}

type PutBankAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	PutBankAccount200ApplicationJSONObject *PutBankAccount200ApplicationJSON
}
