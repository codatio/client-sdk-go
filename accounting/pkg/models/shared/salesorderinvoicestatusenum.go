// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SalesOrderInvoiceStatusEnum - If the sales order is converted to an invoice, or will be in future, the invoicingStatus field indicates the current stage of the invoicing process.
type SalesOrderInvoiceStatusEnum string

const (
	SalesOrderInvoiceStatusEnumUnknown           SalesOrderInvoiceStatusEnum = "Unknown"
	SalesOrderInvoiceStatusEnumPartiallyInvoiced SalesOrderInvoiceStatusEnum = "PartiallyInvoiced"
	SalesOrderInvoiceStatusEnumInvoiced          SalesOrderInvoiceStatusEnum = "Invoiced"
	SalesOrderInvoiceStatusEnumNotInvoiced       SalesOrderInvoiceStatusEnum = "NotInvoiced"
)

func (e SalesOrderInvoiceStatusEnum) ToPointer() *SalesOrderInvoiceStatusEnum {
	return &e
}

func (e *SalesOrderInvoiceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "PartiallyInvoiced":
		fallthrough
	case "Invoiced":
		fallthrough
	case "NotInvoiced":
		*e = SalesOrderInvoiceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SalesOrderInvoiceStatusEnum: %v", v)
	}
}
