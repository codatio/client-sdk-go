// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/bank-feeds/v3/pkg/models/shared"
	"net/http"
)

type CreateBankTransactionsRequest struct {
	CreateBankTransactions *shared.CreateBankTransactions `request:"mediaType=application/json"`
	// Unique identifier for an account
	AccountID               string `pathParam:"style=simple,explode=false,name=accountId"`
	AllowSyncOnPushComplete *bool  `queryParam:"style=form,explode=true,name=allowSyncOnPushComplete"`
	CompanyID               string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID            string `pathParam:"style=simple,explode=false,name=connectionId"`
	TimeoutInMinutes        *int   `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

func (o *CreateBankTransactionsRequest) GetCreateBankTransactions() *shared.CreateBankTransactions {
	if o == nil {
		return nil
	}
	return o.CreateBankTransactions
}

func (o *CreateBankTransactionsRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *CreateBankTransactionsRequest) GetAllowSyncOnPushComplete() *bool {
	if o == nil {
		return nil
	}
	return o.AllowSyncOnPushComplete
}

func (o *CreateBankTransactionsRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *CreateBankTransactionsRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *CreateBankTransactionsRequest) GetTimeoutInMinutes() *int {
	if o == nil {
		return nil
	}
	return o.TimeoutInMinutes
}

type CreateBankTransactionsResponse struct {
	ContentType string
	// Success
	CreateBankTransactionsResponse *shared.CreateBankTransactionsResponse
	// Your API request was not properly authorized.
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
}

func (o *CreateBankTransactionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateBankTransactionsResponse) GetCreateBankTransactionsResponse() *shared.CreateBankTransactionsResponse {
	if o == nil {
		return nil
	}
	return o.CreateBankTransactionsResponse
}

func (o *CreateBankTransactionsResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *CreateBankTransactionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateBankTransactionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
