// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/codatio/client-sdk-go/bank-feeds/v8/pkg/models/shared"
	"github.com/codatio/client-sdk-go/bank-feeds/v8/pkg/utils"
	"net/http"
)

type ListSourceAccountsRequest struct {
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Unique identifier for a connection.
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
}

func (o *ListSourceAccountsRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *ListSourceAccountsRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

type ListSourceAccountsResponseBodyType string

const (
	ListSourceAccountsResponseBodyTypeArrayOfSourceAccountV2 ListSourceAccountsResponseBodyType = "arrayOfSourceAccountV2"
	ListSourceAccountsResponseBodyTypeArrayOfSourceAccount   ListSourceAccountsResponseBodyType = "arrayOfSourceAccount"
)

// ListSourceAccountsResponseBody - Success
type ListSourceAccountsResponseBody struct {
	ArrayOfSourceAccountV2 []shared.SourceAccountV2 `queryParam:"inline"`
	ArrayOfSourceAccount   []shared.SourceAccount   `queryParam:"inline"`

	Type ListSourceAccountsResponseBodyType
}

func CreateListSourceAccountsResponseBodyArrayOfSourceAccountV2(arrayOfSourceAccountV2 []shared.SourceAccountV2) ListSourceAccountsResponseBody {
	typ := ListSourceAccountsResponseBodyTypeArrayOfSourceAccountV2

	return ListSourceAccountsResponseBody{
		ArrayOfSourceAccountV2: arrayOfSourceAccountV2,
		Type:                   typ,
	}
}

func CreateListSourceAccountsResponseBodyArrayOfSourceAccount(arrayOfSourceAccount []shared.SourceAccount) ListSourceAccountsResponseBody {
	typ := ListSourceAccountsResponseBodyTypeArrayOfSourceAccount

	return ListSourceAccountsResponseBody{
		ArrayOfSourceAccount: arrayOfSourceAccount,
		Type:                 typ,
	}
}

func (u *ListSourceAccountsResponseBody) UnmarshalJSON(data []byte) error {

	var arrayOfSourceAccountV2 []shared.SourceAccountV2 = []shared.SourceAccountV2{}
	if err := utils.UnmarshalJSON(data, &arrayOfSourceAccountV2, "", true, true); err == nil {
		u.ArrayOfSourceAccountV2 = arrayOfSourceAccountV2
		u.Type = ListSourceAccountsResponseBodyTypeArrayOfSourceAccountV2
		return nil
	}

	var arrayOfSourceAccount []shared.SourceAccount = []shared.SourceAccount{}
	if err := utils.UnmarshalJSON(data, &arrayOfSourceAccount, "", true, true); err == nil {
		u.ArrayOfSourceAccount = arrayOfSourceAccount
		u.Type = ListSourceAccountsResponseBodyTypeArrayOfSourceAccount
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListSourceAccountsResponseBody", string(data))
}

func (u ListSourceAccountsResponseBody) MarshalJSON() ([]byte, error) {
	if u.ArrayOfSourceAccountV2 != nil {
		return utils.MarshalJSON(u.ArrayOfSourceAccountV2, "", true)
	}

	if u.ArrayOfSourceAccount != nil {
		return utils.MarshalJSON(u.ArrayOfSourceAccount, "", true)
	}

	return nil, errors.New("could not marshal union type ListSourceAccountsResponseBody: all fields are null")
}

type ListSourceAccountsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	OneOf *ListSourceAccountsResponseBody
}

func (o *ListSourceAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSourceAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSourceAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListSourceAccountsResponse) GetOneOf() *ListSourceAccountsResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
