// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/codatio/client-sdk-go/bank-feeds/v7/pkg/models/shared"
	"github.com/codatio/client-sdk-go/bank-feeds/v7/pkg/utils"
	"net/http"
)

type CreateBatchSourceAccountRequestBodyType string

const (
	CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccountV2 CreateBatchSourceAccountRequestBodyType = "arrayOfSourceAccountV2"
	CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccount   CreateBatchSourceAccountRequestBodyType = "arrayOfSourceAccount"
)

type CreateBatchSourceAccountRequestBody struct {
	ArrayOfSourceAccountV2 []shared.SourceAccountV2
	ArrayOfSourceAccount   []shared.SourceAccount

	Type CreateBatchSourceAccountRequestBodyType
}

func CreateCreateBatchSourceAccountRequestBodyArrayOfSourceAccountV2(arrayOfSourceAccountV2 []shared.SourceAccountV2) CreateBatchSourceAccountRequestBody {
	typ := CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccountV2

	return CreateBatchSourceAccountRequestBody{
		ArrayOfSourceAccountV2: arrayOfSourceAccountV2,
		Type:                   typ,
	}
}

func CreateCreateBatchSourceAccountRequestBodyArrayOfSourceAccount(arrayOfSourceAccount []shared.SourceAccount) CreateBatchSourceAccountRequestBody {
	typ := CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccount

	return CreateBatchSourceAccountRequestBody{
		ArrayOfSourceAccount: arrayOfSourceAccount,
		Type:                 typ,
	}
}

func (u *CreateBatchSourceAccountRequestBody) UnmarshalJSON(data []byte) error {

	var arrayOfSourceAccountV2 []shared.SourceAccountV2 = []shared.SourceAccountV2{}
	if err := utils.UnmarshalJSON(data, &arrayOfSourceAccountV2, "", true, true); err == nil {
		u.ArrayOfSourceAccountV2 = arrayOfSourceAccountV2
		u.Type = CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccountV2
		return nil
	}

	var arrayOfSourceAccount []shared.SourceAccount = []shared.SourceAccount{}
	if err := utils.UnmarshalJSON(data, &arrayOfSourceAccount, "", true, true); err == nil {
		u.ArrayOfSourceAccount = arrayOfSourceAccount
		u.Type = CreateBatchSourceAccountRequestBodyTypeArrayOfSourceAccount
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateBatchSourceAccountRequestBody", string(data))
}

func (u CreateBatchSourceAccountRequestBody) MarshalJSON() ([]byte, error) {
	if u.ArrayOfSourceAccountV2 != nil {
		return utils.MarshalJSON(u.ArrayOfSourceAccountV2, "", true)
	}

	if u.ArrayOfSourceAccount != nil {
		return utils.MarshalJSON(u.ArrayOfSourceAccount, "", true)
	}

	return nil, errors.New("could not marshal union type CreateBatchSourceAccountRequestBody: all fields are null")
}

type CreateBatchSourceAccountRequest struct {
	RequestBody *CreateBatchSourceAccountRequestBody `request:"mediaType=application/json"`
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Unique identifier for a connection.
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
}

func (o *CreateBatchSourceAccountRequest) GetRequestBody() *CreateBatchSourceAccountRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *CreateBatchSourceAccountRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *CreateBatchSourceAccountRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

type CreateBatchSourceAccount1Type string

const (
	CreateBatchSourceAccount1TypeSourceAccountV2BatchCreateResponse CreateBatchSourceAccount1Type = "SourceAccountV2BatchCreateResponse"
	CreateBatchSourceAccount1TypeSourceAccountBatchCreateResponse   CreateBatchSourceAccount1Type = "SourceAccountBatchCreateResponse"
	CreateBatchSourceAccount1TypeSourceAccountBatchErrorResponse    CreateBatchSourceAccount1Type = "SourceAccountBatchErrorResponse"
)

type CreateBatchSourceAccount1 struct {
	SourceAccountV2BatchCreateResponse *shared.SourceAccountV2BatchCreateResponse
	SourceAccountBatchCreateResponse   *shared.SourceAccountBatchCreateResponse
	SourceAccountBatchErrorResponse    *shared.SourceAccountBatchErrorResponse

	Type CreateBatchSourceAccount1Type
}

func CreateCreateBatchSourceAccount1SourceAccountV2BatchCreateResponse(sourceAccountV2BatchCreateResponse shared.SourceAccountV2BatchCreateResponse) CreateBatchSourceAccount1 {
	typ := CreateBatchSourceAccount1TypeSourceAccountV2BatchCreateResponse

	return CreateBatchSourceAccount1{
		SourceAccountV2BatchCreateResponse: &sourceAccountV2BatchCreateResponse,
		Type:                               typ,
	}
}

func CreateCreateBatchSourceAccount1SourceAccountBatchCreateResponse(sourceAccountBatchCreateResponse shared.SourceAccountBatchCreateResponse) CreateBatchSourceAccount1 {
	typ := CreateBatchSourceAccount1TypeSourceAccountBatchCreateResponse

	return CreateBatchSourceAccount1{
		SourceAccountBatchCreateResponse: &sourceAccountBatchCreateResponse,
		Type:                             typ,
	}
}

func CreateCreateBatchSourceAccount1SourceAccountBatchErrorResponse(sourceAccountBatchErrorResponse shared.SourceAccountBatchErrorResponse) CreateBatchSourceAccount1 {
	typ := CreateBatchSourceAccount1TypeSourceAccountBatchErrorResponse

	return CreateBatchSourceAccount1{
		SourceAccountBatchErrorResponse: &sourceAccountBatchErrorResponse,
		Type:                            typ,
	}
}

func (u *CreateBatchSourceAccount1) UnmarshalJSON(data []byte) error {

	var sourceAccountV2BatchCreateResponse shared.SourceAccountV2BatchCreateResponse = shared.SourceAccountV2BatchCreateResponse{}
	if err := utils.UnmarshalJSON(data, &sourceAccountV2BatchCreateResponse, "", true, true); err == nil {
		u.SourceAccountV2BatchCreateResponse = &sourceAccountV2BatchCreateResponse
		u.Type = CreateBatchSourceAccount1TypeSourceAccountV2BatchCreateResponse
		return nil
	}

	var sourceAccountBatchCreateResponse shared.SourceAccountBatchCreateResponse = shared.SourceAccountBatchCreateResponse{}
	if err := utils.UnmarshalJSON(data, &sourceAccountBatchCreateResponse, "", true, true); err == nil {
		u.SourceAccountBatchCreateResponse = &sourceAccountBatchCreateResponse
		u.Type = CreateBatchSourceAccount1TypeSourceAccountBatchCreateResponse
		return nil
	}

	var sourceAccountBatchErrorResponse shared.SourceAccountBatchErrorResponse = shared.SourceAccountBatchErrorResponse{}
	if err := utils.UnmarshalJSON(data, &sourceAccountBatchErrorResponse, "", true, true); err == nil {
		u.SourceAccountBatchErrorResponse = &sourceAccountBatchErrorResponse
		u.Type = CreateBatchSourceAccount1TypeSourceAccountBatchErrorResponse
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateBatchSourceAccount1", string(data))
}

func (u CreateBatchSourceAccount1) MarshalJSON() ([]byte, error) {
	if u.SourceAccountV2BatchCreateResponse != nil {
		return utils.MarshalJSON(u.SourceAccountV2BatchCreateResponse, "", true)
	}

	if u.SourceAccountBatchCreateResponse != nil {
		return utils.MarshalJSON(u.SourceAccountBatchCreateResponse, "", true)
	}

	if u.SourceAccountBatchErrorResponse != nil {
		return utils.MarshalJSON(u.SourceAccountBatchErrorResponse, "", true)
	}

	return nil, errors.New("could not marshal union type CreateBatchSourceAccount1: all fields are null")
}

type CreateBatchSourceAccountSourceAccountsResponseBodyType string

const (
	CreateBatchSourceAccountSourceAccountsResponseBodyTypeArrayOfCreateBatchSourceAccount1 CreateBatchSourceAccountSourceAccountsResponseBodyType = "arrayOfCreateBatchSourceAccount1"
)

// CreateBatchSourceAccountSourceAccountsResponseBody - Multi-Status
type CreateBatchSourceAccountSourceAccountsResponseBody struct {
	ArrayOfCreateBatchSourceAccount1 []CreateBatchSourceAccount1

	Type CreateBatchSourceAccountSourceAccountsResponseBodyType
}

func CreateCreateBatchSourceAccountSourceAccountsResponseBodyArrayOfCreateBatchSourceAccount1(arrayOfCreateBatchSourceAccount1 []CreateBatchSourceAccount1) CreateBatchSourceAccountSourceAccountsResponseBody {
	typ := CreateBatchSourceAccountSourceAccountsResponseBodyTypeArrayOfCreateBatchSourceAccount1

	return CreateBatchSourceAccountSourceAccountsResponseBody{
		ArrayOfCreateBatchSourceAccount1: arrayOfCreateBatchSourceAccount1,
		Type:                             typ,
	}
}

func (u *CreateBatchSourceAccountSourceAccountsResponseBody) UnmarshalJSON(data []byte) error {

	var arrayOfCreateBatchSourceAccount1 []CreateBatchSourceAccount1 = []CreateBatchSourceAccount1{}
	if err := utils.UnmarshalJSON(data, &arrayOfCreateBatchSourceAccount1, "", true, true); err == nil {
		u.ArrayOfCreateBatchSourceAccount1 = arrayOfCreateBatchSourceAccount1
		u.Type = CreateBatchSourceAccountSourceAccountsResponseBodyTypeArrayOfCreateBatchSourceAccount1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateBatchSourceAccountSourceAccountsResponseBody", string(data))
}

func (u CreateBatchSourceAccountSourceAccountsResponseBody) MarshalJSON() ([]byte, error) {
	if u.ArrayOfCreateBatchSourceAccount1 != nil {
		return utils.MarshalJSON(u.ArrayOfCreateBatchSourceAccount1, "", true)
	}

	return nil, errors.New("could not marshal union type CreateBatchSourceAccountSourceAccountsResponseBody: all fields are null")
}

type OneType string

const (
	OneTypeSourceAccountV2BatchCreateResponse OneType = "SourceAccountV2BatchCreateResponse"
	OneTypeSourceAccountBatchCreateResponse   OneType = "SourceAccountBatchCreateResponse"
)

type One struct {
	SourceAccountV2BatchCreateResponse *shared.SourceAccountV2BatchCreateResponse
	SourceAccountBatchCreateResponse   *shared.SourceAccountBatchCreateResponse

	Type OneType
}

func CreateOneSourceAccountV2BatchCreateResponse(sourceAccountV2BatchCreateResponse shared.SourceAccountV2BatchCreateResponse) One {
	typ := OneTypeSourceAccountV2BatchCreateResponse

	return One{
		SourceAccountV2BatchCreateResponse: &sourceAccountV2BatchCreateResponse,
		Type:                               typ,
	}
}

func CreateOneSourceAccountBatchCreateResponse(sourceAccountBatchCreateResponse shared.SourceAccountBatchCreateResponse) One {
	typ := OneTypeSourceAccountBatchCreateResponse

	return One{
		SourceAccountBatchCreateResponse: &sourceAccountBatchCreateResponse,
		Type:                             typ,
	}
}

func (u *One) UnmarshalJSON(data []byte) error {

	var sourceAccountV2BatchCreateResponse shared.SourceAccountV2BatchCreateResponse = shared.SourceAccountV2BatchCreateResponse{}
	if err := utils.UnmarshalJSON(data, &sourceAccountV2BatchCreateResponse, "", true, true); err == nil {
		u.SourceAccountV2BatchCreateResponse = &sourceAccountV2BatchCreateResponse
		u.Type = OneTypeSourceAccountV2BatchCreateResponse
		return nil
	}

	var sourceAccountBatchCreateResponse shared.SourceAccountBatchCreateResponse = shared.SourceAccountBatchCreateResponse{}
	if err := utils.UnmarshalJSON(data, &sourceAccountBatchCreateResponse, "", true, true); err == nil {
		u.SourceAccountBatchCreateResponse = &sourceAccountBatchCreateResponse
		u.Type = OneTypeSourceAccountBatchCreateResponse
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for One", string(data))
}

func (u One) MarshalJSON() ([]byte, error) {
	if u.SourceAccountV2BatchCreateResponse != nil {
		return utils.MarshalJSON(u.SourceAccountV2BatchCreateResponse, "", true)
	}

	if u.SourceAccountBatchCreateResponse != nil {
		return utils.MarshalJSON(u.SourceAccountBatchCreateResponse, "", true)
	}

	return nil, errors.New("could not marshal union type One: all fields are null")
}

type CreateBatchSourceAccountResponseBodyType string

const (
	CreateBatchSourceAccountResponseBodyTypeArrayOf1 CreateBatchSourceAccountResponseBodyType = "arrayOf1"
)

// CreateBatchSourceAccountResponseBody - Success
type CreateBatchSourceAccountResponseBody struct {
	ArrayOf1 []One

	Type CreateBatchSourceAccountResponseBodyType
}

func CreateCreateBatchSourceAccountResponseBodyArrayOf1(arrayOf1 []One) CreateBatchSourceAccountResponseBody {
	typ := CreateBatchSourceAccountResponseBodyTypeArrayOf1

	return CreateBatchSourceAccountResponseBody{
		ArrayOf1: arrayOf1,
		Type:     typ,
	}
}

func (u *CreateBatchSourceAccountResponseBody) UnmarshalJSON(data []byte) error {

	var arrayOf1 []One = []One{}
	if err := utils.UnmarshalJSON(data, &arrayOf1, "", true, true); err == nil {
		u.ArrayOf1 = arrayOf1
		u.Type = CreateBatchSourceAccountResponseBodyTypeArrayOf1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateBatchSourceAccountResponseBody", string(data))
}

func (u CreateBatchSourceAccountResponseBody) MarshalJSON() ([]byte, error) {
	if u.ArrayOf1 != nil {
		return utils.MarshalJSON(u.ArrayOf1, "", true)
	}

	return nil, errors.New("could not marshal union type CreateBatchSourceAccountResponseBody: all fields are null")
}

type CreateBatchSourceAccountResponse struct {
	// Success
	TwoHundredApplicationJSONOneOf *CreateBatchSourceAccountResponseBody
	// Multi-Status
	TwoHundredAndSevenApplicationJSONOneOf *CreateBatchSourceAccountSourceAccountsResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateBatchSourceAccountResponse) GetTwoHundredApplicationJSONOneOf() *CreateBatchSourceAccountResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONOneOf
}

func (o *CreateBatchSourceAccountResponse) GetTwoHundredAndSevenApplicationJSONOneOf() *CreateBatchSourceAccountSourceAccountsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndSevenApplicationJSONOneOf
}

func (o *CreateBatchSourceAccountResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateBatchSourceAccountResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateBatchSourceAccountResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
