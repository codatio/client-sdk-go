// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/bankfeeds/pkg/models/shared"
	"net/http"
)

type ProxyRequest struct {
	CompanyID    string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
	// The endpoint and query parameters made to the underlying integration.
	Endpoint string `queryParam:"style=form,explode=true,name=endpoint"`
}

func (o *ProxyRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *ProxyRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *ProxyRequest) GetEndpoint() string {
	if o == nil {
		return ""
	}
	return o.Endpoint
}

type ProxyResponse struct {
	ContentType string
	// Your API request was not properly authorized.
	ErrorMessage *shared.ErrorMessage
	// Success
	ProxyResponse map[string]interface{}
	StatusCode    int
	RawResponse   *http.Response
}

func (o *ProxyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ProxyResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *ProxyResponse) GetProxyResponse() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.ProxyResponse
}

func (o *ProxyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ProxyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
