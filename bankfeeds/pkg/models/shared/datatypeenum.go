// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataTypeEnum - Available Data types
type DataTypeEnum string

const (
	DataTypeEnumAccountTransactions          DataTypeEnum = "accountTransactions"
	DataTypeEnumBalanceSheet                 DataTypeEnum = "balanceSheet"
	DataTypeEnumBankAccounts                 DataTypeEnum = "bankAccounts"
	DataTypeEnumBankTransactions             DataTypeEnum = "bankTransactions"
	DataTypeEnumBillCreditNotes              DataTypeEnum = "billCreditNotes"
	DataTypeEnumBillPayments                 DataTypeEnum = "billPayments"
	DataTypeEnumBills                        DataTypeEnum = "bills"
	DataTypeEnumCashFlowStatement            DataTypeEnum = "cashFlowStatement"
	DataTypeEnumChartOfAccounts              DataTypeEnum = "chartOfAccounts"
	DataTypeEnumCompany                      DataTypeEnum = "company"
	DataTypeEnumCreditNotes                  DataTypeEnum = "creditNotes"
	DataTypeEnumCustomers                    DataTypeEnum = "customers"
	DataTypeEnumDirectCosts                  DataTypeEnum = "directCosts"
	DataTypeEnumDirectIncomes                DataTypeEnum = "directIncomes"
	DataTypeEnumInvoices                     DataTypeEnum = "invoices"
	DataTypeEnumItems                        DataTypeEnum = "items"
	DataTypeEnumJournalEntries               DataTypeEnum = "journalEntries"
	DataTypeEnumJournals                     DataTypeEnum = "journals"
	DataTypeEnumPaymentMethods               DataTypeEnum = "paymentMethods"
	DataTypeEnumPayments                     DataTypeEnum = "payments"
	DataTypeEnumProfitAndLoss                DataTypeEnum = "profitAndLoss"
	DataTypeEnumPurchaseOrders               DataTypeEnum = "purchaseOrders"
	DataTypeEnumSalesOrders                  DataTypeEnum = "salesOrders"
	DataTypeEnumSuppliers                    DataTypeEnum = "suppliers"
	DataTypeEnumTaxRates                     DataTypeEnum = "taxRates"
	DataTypeEnumTrackingCategories           DataTypeEnum = "trackingCategories"
	DataTypeEnumTransfers                    DataTypeEnum = "transfers"
	DataTypeEnumBankingAccountBalances       DataTypeEnum = "banking-accountBalances"
	DataTypeEnumBankingAccounts              DataTypeEnum = "banking-accounts"
	DataTypeEnumBankingTransactionCategories DataTypeEnum = "banking-transactionCategories"
	DataTypeEnumBankingTransactions          DataTypeEnum = "banking-transactions"
	DataTypeEnumCommerceCompanyInfo          DataTypeEnum = "commerce-companyInfo"
	DataTypeEnumCommerceCustomers            DataTypeEnum = "commerce-customers"
	DataTypeEnumCommerceDisputes             DataTypeEnum = "commerce-disputes"
	DataTypeEnumCommerceLocations            DataTypeEnum = "commerce-locations"
	DataTypeEnumCommerceOrders               DataTypeEnum = "commerce-orders"
	DataTypeEnumCommercePaymentMethods       DataTypeEnum = "commerce-paymentMethods"
	DataTypeEnumCommercePayments             DataTypeEnum = "commerce-payments"
	DataTypeEnumCommerceProductCategories    DataTypeEnum = "commerce-productCategories"
	DataTypeEnumCommerceProducts             DataTypeEnum = "commerce-products"
	DataTypeEnumCommerceTaxComponents        DataTypeEnum = "commerce-taxComponents"
	DataTypeEnumCommerceTransactions         DataTypeEnum = "commerce-transactions"
)

func (e DataTypeEnum) ToPointer() *DataTypeEnum {
	return &e
}

func (e *DataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accountTransactions":
		fallthrough
	case "balanceSheet":
		fallthrough
	case "bankAccounts":
		fallthrough
	case "bankTransactions":
		fallthrough
	case "billCreditNotes":
		fallthrough
	case "billPayments":
		fallthrough
	case "bills":
		fallthrough
	case "cashFlowStatement":
		fallthrough
	case "chartOfAccounts":
		fallthrough
	case "company":
		fallthrough
	case "creditNotes":
		fallthrough
	case "customers":
		fallthrough
	case "directCosts":
		fallthrough
	case "directIncomes":
		fallthrough
	case "invoices":
		fallthrough
	case "items":
		fallthrough
	case "journalEntries":
		fallthrough
	case "journals":
		fallthrough
	case "paymentMethods":
		fallthrough
	case "payments":
		fallthrough
	case "profitAndLoss":
		fallthrough
	case "purchaseOrders":
		fallthrough
	case "salesOrders":
		fallthrough
	case "suppliers":
		fallthrough
	case "taxRates":
		fallthrough
	case "trackingCategories":
		fallthrough
	case "transfers":
		fallthrough
	case "banking-accountBalances":
		fallthrough
	case "banking-accounts":
		fallthrough
	case "banking-transactionCategories":
		fallthrough
	case "banking-transactions":
		fallthrough
	case "commerce-companyInfo":
		fallthrough
	case "commerce-customers":
		fallthrough
	case "commerce-disputes":
		fallthrough
	case "commerce-locations":
		fallthrough
	case "commerce-orders":
		fallthrough
	case "commerce-paymentMethods":
		fallthrough
	case "commerce-payments":
		fallthrough
	case "commerce-productCategories":
		fallthrough
	case "commerce-products":
		fallthrough
	case "commerce-taxComponents":
		fallthrough
	case "commerce-transactions":
		*e = DataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataTypeEnum: %v", v)
	}
}
