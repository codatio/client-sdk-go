// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-payables/pkg/models/shared"
)

type GetMappingOptionsBillsRequest struct {
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Unique identifier for a connection.
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
	// Retrieve the next page of results using the continuation token from the previous response.
	ContinuationToken *string `queryParam:"style=form,explode=true,name=continuationToken"`
	// Codat query string allows you to filter by `status` (`status=Active||status=Archived`). [Learn more](https://docs.codat.io/using-the-api/querying) about Codat's query string.
	StatusQuery *string `queryParam:"style=form,explode=true,name=statusQuery"`
}

func (o *GetMappingOptionsBillsRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *GetMappingOptionsBillsRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *GetMappingOptionsBillsRequest) GetContinuationToken() *string {
	if o == nil {
		return nil
	}
	return o.ContinuationToken
}

func (o *GetMappingOptionsBillsRequest) GetStatusQuery() *string {
	if o == nil {
		return nil
	}
	return o.StatusQuery
}

type GetMappingOptionsBillsResponse struct {
	HTTPMeta shared.HTTPMetadata `json:"-"`
	// Success
	BillMappingOptions *shared.BillMappingOptions
}

func (o *GetMappingOptionsBillsResponse) GetHTTPMeta() shared.HTTPMetadata {
	if o == nil {
		return shared.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetMappingOptionsBillsResponse) GetBillMappingOptions() *shared.BillMappingOptions {
	if o == nil {
		return nil
	}
	return o.BillMappingOptions
}
