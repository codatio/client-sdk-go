// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/sync-for-payables/pkg/models/shared"
)

type UnlinkConnectionUpdateConnection struct {
	// The current authorization status of the data connection.
	Status *shared.DataConnectionStatus `json:"status,omitempty"`
}

func (o *UnlinkConnectionUpdateConnection) GetStatus() *shared.DataConnectionStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type UnlinkConnectionRequest struct {
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Unique identifier for a connection.
	ConnectionID string                            `pathParam:"style=simple,explode=false,name=connectionId"`
	RequestBody  *UnlinkConnectionUpdateConnection `request:"mediaType=application/json"`
}

func (o *UnlinkConnectionRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *UnlinkConnectionRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *UnlinkConnectionRequest) GetRequestBody() *UnlinkConnectionUpdateConnection {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UnlinkConnectionResponse struct {
	HTTPMeta shared.HTTPMetadata `json:"-"`
	// OK
	Connection *shared.Connection
}

func (o *UnlinkConnectionResponse) GetHTTPMeta() shared.HTTPMetadata {
	if o == nil {
		return shared.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UnlinkConnectionResponse) GetConnection() *shared.Connection {
	if o == nil {
		return nil
	}
	return o.Connection
}
