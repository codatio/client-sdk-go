// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type JournalPrototype struct {
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	CreatedOn *string `json:"createdOn,omitempty"`
	// If the journal has child journals, this value is true. If it doesnâ€™t, it is false.
	HasChildren *bool `json:"hasChildren,omitempty"`
	// Native journal number or code.
	JournalCode *string `json:"journalCode,omitempty"`
	// Journal name.
	// The maximum length for a journal name is 256 characters. All characters above that number will be truncated.
	Name *string `json:"name,omitempty"`
	// Parent journal ID.
	// If the journal is a parent journal, this value is not present.
	ParentID *string `json:"parentId,omitempty"`
	// Current journal status.
	Status *JournalStatus `json:"status,omitempty"`
	// The type of the journal.
	Type *string `json:"type,omitempty"`
}

func (o *JournalPrototype) GetCreatedOn() *string {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *JournalPrototype) GetHasChildren() *bool {
	if o == nil {
		return nil
	}
	return o.HasChildren
}

func (o *JournalPrototype) GetJournalCode() *string {
	if o == nil {
		return nil
	}
	return o.JournalCode
}

func (o *JournalPrototype) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *JournalPrototype) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *JournalPrototype) GetStatus() *JournalStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *JournalPrototype) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
