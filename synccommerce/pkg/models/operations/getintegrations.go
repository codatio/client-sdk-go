// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetIntegrationsRequest struct {
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type GetIntegrations200ApplicationJSONLinksCurrent struct {
	Href *string `json:"href,omitempty"`
}

type GetIntegrations200ApplicationJSONLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type GetIntegrations200ApplicationJSONLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type GetIntegrations200ApplicationJSONLinksSelf struct {
	Href *string `json:"href,omitempty"`
}

type GetIntegrations200ApplicationJSONLinks struct {
	Current  *GetIntegrations200ApplicationJSONLinksCurrent  `json:"current,omitempty"`
	Next     *GetIntegrations200ApplicationJSONLinksNext     `json:"next,omitempty"`
	Previous *GetIntegrations200ApplicationJSONLinksPrevious `json:"previous,omitempty"`
	Self     *GetIntegrations200ApplicationJSONLinksSelf     `json:"self,omitempty"`
}

type GetIntegrations200ApplicationJSONResultsDatatypeFeaturesSupportedFeatures struct {
	// The state of the release by Codat for the datatype.
	FeatureState *string `json:"featureState,omitempty"`
	// The HTTP method operation supported by Codat for the datatype.
	FeatureType *string `json:"featureType,omitempty"`
}

type GetIntegrations200ApplicationJSONResultsDatatypeFeatures struct {
	// Name of the codat datatype.
	Datatype          *string                                                                     `json:"datatype,omitempty"`
	SupportedFeatures []GetIntegrations200ApplicationJSONResultsDatatypeFeaturesSupportedFeatures `json:"supportedFeatures,omitempty"`
}

// GetIntegrations200ApplicationJSONResultsSourceTypeEnum - Type of source for the data.
type GetIntegrations200ApplicationJSONResultsSourceTypeEnum string

const (
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumUnknown    GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Unknown"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumAccounting GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Accounting"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumBanking    GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Banking"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumBankFeed   GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "BankFeed"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumCommerce   GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Commerce"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumExpense    GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Expense"
	GetIntegrations200ApplicationJSONResultsSourceTypeEnumOther      GetIntegrations200ApplicationJSONResultsSourceTypeEnum = "Other"
)

// GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum - Supported environments for the integration.
type GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum string

const (
	GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnumUnknown        GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum = "Unknown"
	GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnumSandboxOnly    GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum = "SandboxOnly"
	GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnumLiveOnly       GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum = "LiveOnly"
	GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnumLiveAndSandbox GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum = "LiveAndSandbox"
)

type GetIntegrations200ApplicationJSONResults struct {
	DatatypeFeatures []GetIntegrations200ApplicationJSONResultsDatatypeFeatures `json:"datatypeFeatures,omitempty"`
	// Boolean indicator confirming this integration is enabled for use.
	Enabled *bool `json:"enabled,omitempty"`
	// A Codat ID representing the integration.
	IntegrationID *string `json:"integrationId,omitempty"`
	// Boolean indicator confirming integration in beta release phase.
	IsBeta *bool `json:"isBeta,omitempty"`
	// Boolean indicator confirming if the integration is an offline integration.
	IsOfflineConnector *bool `json:"isOfflineConnector,omitempty"`
	// Four letter key for an integration.
	Key *string `json:"key,omitempty"`
	// Number of total data connections which are linked.
	LinkedConnectionsCount *int `json:"linkedConnectionsCount,omitempty"`
	// URL of the logo.
	LogoURL *string `json:"logoUrl,omitempty"`
	// Name of the integration.
	Name *string `json:"name,omitempty"`
	// A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, sourceId is associated with a specific bank and has a many-to-one relationship with the integrationId.
	SourceID *string `json:"sourceId,omitempty"`
	// Type of source for the data.
	SourceType *GetIntegrations200ApplicationJSONResultsSourceTypeEnum `json:"sourceType,omitempty"`
	// Supported environments for the integration.
	SupportedEnvironments *GetIntegrations200ApplicationJSONResultsSupportedEnvironmentsEnum `json:"supportedEnvironments,omitempty"`
	// Number of total data connections.
	TotalConnectionsCount *int `json:"totalConnectionsCount,omitempty"`
}

// GetIntegrations200ApplicationJSON - Used to represent what can be returned by an endpoint that supports paging.
// Usable with the [ProducesResponseType] attribute on a controller action.
type GetIntegrations200ApplicationJSON struct {
	Links        *GetIntegrations200ApplicationJSONLinks    `json:"_links,omitempty"`
	PageNumber   *int                                       `json:"pageNumber,omitempty"`
	PageSize     *int                                       `json:"pageSize,omitempty"`
	Results      []GetIntegrations200ApplicationJSONResults `json:"results,omitempty"`
	TotalResults *int                                       `json:"totalResults,omitempty"`
}

type GetIntegrationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetIntegrations200ApplicationJSONObject *GetIntegrations200ApplicationJSON
}
