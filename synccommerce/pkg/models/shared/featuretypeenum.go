// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FeatureTypeEnum string

const (
	FeatureTypeEnumGet                FeatureTypeEnum = "Get"
	FeatureTypeEnumPost               FeatureTypeEnum = "Post"
	FeatureTypeEnumCategorization     FeatureTypeEnum = "Categorization"
	FeatureTypeEnumDelete             FeatureTypeEnum = "Delete"
	FeatureTypeEnumPut                FeatureTypeEnum = "Put"
	FeatureTypeEnumGetAsPdf           FeatureTypeEnum = "GetAsPdf"
	FeatureTypeEnumDownloadAttachment FeatureTypeEnum = "DownloadAttachment"
	FeatureTypeEnumGetAttachment      FeatureTypeEnum = "GetAttachment"
	FeatureTypeEnumGetAttachments     FeatureTypeEnum = "GetAttachments"
	FeatureTypeEnumUploadAttachment   FeatureTypeEnum = "UploadAttachment"
)

func (e FeatureTypeEnum) ToPointer() *FeatureTypeEnum {
	return &e
}

func (e *FeatureTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Get":
		fallthrough
	case "Post":
		fallthrough
	case "Categorization":
		fallthrough
	case "Delete":
		fallthrough
	case "Put":
		fallthrough
	case "GetAsPdf":
		fallthrough
	case "DownloadAttachment":
		fallthrough
	case "GetAttachment":
		fallthrough
	case "GetAttachments":
		fallthrough
	case "UploadAttachment":
		*e = FeatureTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureTypeEnum: %v", v)
	}
}
