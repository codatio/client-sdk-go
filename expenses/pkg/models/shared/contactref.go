// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ContactRefContactType - The type of contact.
type ContactRefContactType string

const (
	ContactRefContactTypeSupplier ContactRefContactType = "Supplier"
)

func (e ContactRefContactType) ToPointer() *ContactRefContactType {
	return &e
}

func (e *ContactRefContactType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Supplier":
		*e = ContactRefContactType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactRefContactType: %v", v)
	}
}

type ContactRef struct {
	// The type of contact.
	ContactType *ContactRefContactType `json:"contactType,omitempty"`
	// Identifier of supplier or customer.
	ID *string `json:"id,omitempty"`
}

func (o *ContactRef) GetContactType() *ContactRefContactType {
	if o == nil {
		return nil
	}
	return o.ContactType
}

func (o *ContactRef) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}
