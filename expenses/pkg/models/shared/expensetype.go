// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExpenseType - The type of transaction.
type ExpenseType string

const (
	ExpenseTypePayment       ExpenseType = "Payment"
	ExpenseTypeRefund        ExpenseType = "Refund"
	ExpenseTypeReward        ExpenseType = "Reward"
	ExpenseTypeChargeback    ExpenseType = "Chargeback"
	ExpenseTypeTransferIn    ExpenseType = "TransferIn"
	ExpenseTypeTransferOut   ExpenseType = "TransferOut"
	ExpenseTypeAdjustmentIn  ExpenseType = "AdjustmentIn"
	ExpenseTypeAdjustmentOut ExpenseType = "AdjustmentOut"
)

func (e ExpenseType) ToPointer() *ExpenseType {
	return &e
}

func (e *ExpenseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Payment":
		fallthrough
	case "Refund":
		fallthrough
	case "Reward":
		fallthrough
	case "Chargeback":
		fallthrough
	case "TransferIn":
		fallthrough
	case "TransferOut":
		fallthrough
	case "AdjustmentIn":
		fallthrough
	case "AdjustmentOut":
		*e = ExpenseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExpenseType: %v", v)
	}
}
