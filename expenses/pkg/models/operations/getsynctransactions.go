// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetSyncTransactionsRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Unique identifier for a sync.
	SyncID string `pathParam:"style=simple,explode=false,name=syncId"`
}

type GetSyncTransactions200ApplicationJSONHalLink struct {
	// Link to next page in paginated response
	Href *string `json:"href,omitempty"`
}

// GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum - Type of transaction that has been processed e.g. Expense or Bank Feed.
type GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum string

const (
	GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnumExpenses  GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum = "expenses"
	GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnumBankfeeds GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum = "bankfeeds"
)

// GetSyncTransactions200ApplicationJSONResultsStatusEnum - Status of the transaction.
type GetSyncTransactions200ApplicationJSONResultsStatusEnum string

const (
	GetSyncTransactions200ApplicationJSONResultsStatusEnumUnknown         GetSyncTransactions200ApplicationJSONResultsStatusEnum = "Unknown"
	GetSyncTransactions200ApplicationJSONResultsStatusEnumPending         GetSyncTransactions200ApplicationJSONResultsStatusEnum = "Pending"
	GetSyncTransactions200ApplicationJSONResultsStatusEnumValidationError GetSyncTransactions200ApplicationJSONResultsStatusEnum = "ValidationError"
	GetSyncTransactions200ApplicationJSONResultsStatusEnumCompleted       GetSyncTransactions200ApplicationJSONResultsStatusEnum = "Completed"
	GetSyncTransactions200ApplicationJSONResultsStatusEnumPushError       GetSyncTransactions200ApplicationJSONResultsStatusEnum = "PushError"
)

type GetSyncTransactions200ApplicationJSONResults struct {
	// Type of transaction that has been processed e.g. Expense or Bank Feed.
	IntegrationType *GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum `json:"integrationType,omitempty"`
	// Metadata such as validation errors or the resulting record created in the accounting software.
	Message *string `json:"message,omitempty"`
	// Status of the transaction.
	Status *GetSyncTransactions200ApplicationJSONResultsStatusEnum `json:"status,omitempty"`
	// Your unique idenfier of the transaction.
	TransactionID *string `json:"transactionId,omitempty"`
}

// GetSyncTransactions200ApplicationJSON - Success
type GetSyncTransactions200ApplicationJSON struct {
	Links map[string]GetSyncTransactions200ApplicationJSONHalLink `json:"links,omitempty"`
	// Page of current request
	PageNumber int `json:"pageNumber"`
	// Page size of current request.
	PageSize int                                            `json:"pageSize"`
	Results  []GetSyncTransactions200ApplicationJSONResults `json:"results,omitempty"`
	// Total number of transactions.
	TotalResults int `json:"totalResults"`
}

type GetSyncTransactionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetSyncTransactions200ApplicationJSONObject *GetSyncTransactions200ApplicationJSON
}
