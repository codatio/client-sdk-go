// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListSyncsRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
}

type ListSyncs200ApplicationJSON struct {
	// Unique identifier for your SMB in Codat.
	CompanyID *string `json:"companyId,omitempty"`
	// Boolean of whether the sync resulted in data being pushed.
	DataPushed *bool `json:"dataPushed,omitempty"`
	// Error message of the sync.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Exception message of the sync.
	SyncExceptionMessage *string `json:"syncExceptionMessage,omitempty"`
	// Unique identifier of the sync.
	SyncID *string `json:"syncId,omitempty"`
	// Text status of the sync.
	SyncStatus *string `json:"syncStatus,omitempty"`
	// Status code of the sync.
	SyncStatusCode *int `json:"syncStatusCode,omitempty"`
	// Datetime of the sync.
	SyncUtc *time.Time `json:"syncUtc,omitempty"`
}

type ListSyncsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	ListSyncs200ApplicationJSONObjects []ListSyncs200ApplicationJSON
}
