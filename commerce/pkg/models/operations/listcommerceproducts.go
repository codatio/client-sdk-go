// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListCommerceProductsRequest struct {
	CompanyID    string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListCommerceProductsLinksLinksCurrent struct {
	Href string `json:"href"`
}

type ListCommerceProductsLinksLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceProductsLinksLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceProductsLinksLinksSelf struct {
	Href string `json:"href"`
}

type ListCommerceProductsLinksLinks struct {
	Current  ListCommerceProductsLinksLinksCurrent   `json:"current"`
	Next     *ListCommerceProductsLinksLinksNext     `json:"next,omitempty"`
	Previous *ListCommerceProductsLinksLinksPrevious `json:"previous,omitempty"`
	Self     ListCommerceProductsLinksLinksSelf      `json:"self"`
}

type ListCommerceProductsLinksProductSourceModifiedDateStatusEnum string

const (
	ListCommerceProductsLinksProductSourceModifiedDateStatusEnumUnknown     ListCommerceProductsLinksProductSourceModifiedDateStatusEnum = "Unknown"
	ListCommerceProductsLinksProductSourceModifiedDateStatusEnumPublished   ListCommerceProductsLinksProductSourceModifiedDateStatusEnum = "Published"
	ListCommerceProductsLinksProductSourceModifiedDateStatusEnumUnpublished ListCommerceProductsLinksProductSourceModifiedDateStatusEnum = "Unpublished"
)

// ListCommerceProductsLinksProductSourceModifiedDate - Represents a variation of a product available for sale, for example an item of clothing
// may be available for sale in multiple sizes and colors
type ListCommerceProductsLinksProductSourceModifiedDate struct {
	Barcode *string `json:"barcode,omitempty"`
	// The date the entity was created.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// A unique, persistent identifier for this record
	ID           string        `json:"id"`
	Inventory    []interface{} `json:"inventory,omitempty"`
	IsTaxEnabled *bool         `json:"isTaxEnabled,omitempty"`
	// The date on which this record was last modified in Codat.
	ModifiedDate     *time.Time    `json:"modifiedDate,omitempty"`
	Name             *string       `json:"name,omitempty"`
	Prices           []interface{} `json:"prices,omitempty"`
	Quantity         *float64      `json:"quantity,omitempty"`
	ShippingRequired *bool         `json:"shippingRequired,omitempty"`
	Sku              *string       `json:"sku,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time                                                    `json:"sourceModifiedDate,omitempty"`
	Status             *ListCommerceProductsLinksProductSourceModifiedDateStatusEnum `json:"status,omitempty"`
	UnitOfMeasure      *string                                                       `json:"unitOfMeasure,omitempty"`
	VatPercentage      *float64                                                      `json:"vatPercentage,omitempty"`
}

// ListCommerceProductsLinksProduct - A Product is an item in the company's inventory, and includes information
// about the price and quantity of all products, and variants thereof, available for sale
type ListCommerceProductsLinksProduct struct {
	// Retail category that the product is assigned to
	Categorization *string `json:"categorization,omitempty"`
	// Description of the product recorded in the commerce or point of sale platform.
	Description *string `json:"description,omitempty"`
	// A unique, persistent identifier for this record
	ID string `json:"id"`
	// Whether the product represents a gift card or voucher that
	// can be redeemed in the commerce or POS platform
	//
	IsGiftCard *bool `json:"isGiftCard,omitempty"`
	// Name of the product in the commerce or POS system
	Name     *string                                              `json:"name,omitempty"`
	Variants []ListCommerceProductsLinksProductSourceModifiedDate `json:"variants,omitempty"`
}

// ListCommerceProductsLinks - Codat's Paging Model
type ListCommerceProductsLinks struct {
	Links        ListCommerceProductsLinksLinks     `json:"_links"`
	PageNumber   int64                              `json:"pageNumber"`
	PageSize     int64                              `json:"pageSize"`
	Results      []ListCommerceProductsLinksProduct `json:"results,omitempty"`
	TotalResults int64                              `json:"totalResults"`
}

type ListCommerceProductsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Links *ListCommerceProductsLinks
}
