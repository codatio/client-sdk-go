// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListCommerceDisputesRequest struct {
	CompanyID    string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListCommerceDisputesLinksLinksCurrent struct {
	Href string `json:"href"`
}

type ListCommerceDisputesLinksLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceDisputesLinksLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceDisputesLinksLinksSelf struct {
	Href string `json:"href"`
}

type ListCommerceDisputesLinksLinks struct {
	Current  ListCommerceDisputesLinksLinksCurrent   `json:"current"`
	Next     *ListCommerceDisputesLinksLinksNext     `json:"next,omitempty"`
	Previous *ListCommerceDisputesLinksLinksPrevious `json:"previous,omitempty"`
	Self     ListCommerceDisputesLinksLinksSelf      `json:"self"`
}

type ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum string

const (
	ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnumFee           ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum = "Fee"
	ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnumOrder         ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum = "Order"
	ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnumPayment       ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum = "Payment"
	ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnumServiceCharge ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum = "ServiceCharge"
	ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnumUnknown       ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum = "Unknown"
)

type ListCommerceDisputesLinksSourceModifiedDateRecordRef struct {
	// The unique identitifer of the record being referenced
	ID   string                                                       `json:"id"`
	Type ListCommerceDisputesLinksSourceModifiedDateRecordRefTypeEnum `json:"type"`
}

// ListCommerceDisputesLinksSourceModifiedDateStatusEnum - Current status of the dispute
type ListCommerceDisputesLinksSourceModifiedDateStatusEnum string

const (
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumWon                     ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "Won"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumLost                    ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "Lost"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumAccepted                ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "Accepted"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumProcessing              ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "Processing"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumChargeRefunded          ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "ChargeRefunded"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumEvidenceRequired        ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "EvidenceRequired"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumInquiryEvidenceRequired ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "InquiryEvidenceRequired"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumInquiryProcessing       ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "InquiryProcessing"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumInquiryClosed           ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "InquiryClosed"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumWaitingThirdParty       ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "WaitingThirdParty"
	ListCommerceDisputesLinksSourceModifiedDateStatusEnumUnknown                 ListCommerceDisputesLinksSourceModifiedDateStatusEnum = "Unknown"
)

type ListCommerceDisputesLinksSourceModifiedDate struct {
	// The date the entity was created.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// Currency of the disputed transaction.
	Currency string `json:"currency"`
	// Link to the source event which triggered this transaction.
	DisputedTransactions *ListCommerceDisputesLinksSourceModifiedDateRecordRef `json:"disputedTransactions,omitempty"`
	// Date when the next action in the dispute resolution is due
	DueDate *time.Time `json:"dueDate,omitempty"`
	// A unique, persistent identifier for this record
	ID string `json:"id"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Reason for the dispute
	Reason *string `json:"reason,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
	// Current status of the dispute
	Status *ListCommerceDisputesLinksSourceModifiedDateStatusEnum `json:"status,omitempty"`
	// Total transaction amount that is under dispute.
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// ListCommerceDisputesLinks - Codat's Paging Model
type ListCommerceDisputesLinks struct {
	Links        ListCommerceDisputesLinksLinks                `json:"_links"`
	PageNumber   int64                                         `json:"pageNumber"`
	PageSize     int64                                         `json:"pageSize"`
	Results      []ListCommerceDisputesLinksSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                         `json:"totalResults"`
}

type ListCommerceDisputesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Links *ListCommerceDisputesLinks
}
