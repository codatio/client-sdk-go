// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ListCommerceCustomersRequest struct {
	CompanyID    string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
	// Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page number. [Read more](https://docs.codat.io/using-the-api/paging).
	Page int `queryParam:"style=form,explode=true,name=page"`
	// Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type ListCommerceCustomersLinksLinksCurrent struct {
	Href string `json:"href"`
}

type ListCommerceCustomersLinksLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceCustomersLinksLinksPrevious struct {
	Href *string `json:"href,omitempty"`
}

type ListCommerceCustomersLinksLinksSelf struct {
	Href string `json:"href"`
}

type ListCommerceCustomersLinksLinks struct {
	Current  ListCommerceCustomersLinksLinksCurrent   `json:"current"`
	Next     *ListCommerceCustomersLinksLinksNext     `json:"next,omitempty"`
	Previous *ListCommerceCustomersLinksLinksPrevious `json:"previous,omitempty"`
	Self     ListCommerceCustomersLinksLinksSelf      `json:"self"`
}

type ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnum string

const (
	ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnumBilling  ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnum = "Billing"
	ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnumDelivery ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnum = "Delivery"
)

type ListCommerceCustomersLinksSourceModifiedDateAddress struct {
	// The third line of the address, or city
	City *string `json:"city,omitempty"`
	// The country for the address
	Country *string `json:"country,omitempty"`
	// The first line of the address
	Line1 *string `json:"line1,omitempty"`
	// The second line of the address
	Line2 *string `json:"line2,omitempty"`
	// The postal (or zip) code for the address
	PostalCode *string `json:"postalCode,omitempty"`
	// The fourth line of the address, or region
	Region *string                                                      `json:"region,omitempty"`
	Type   *ListCommerceCustomersLinksSourceModifiedDateAddressTypeEnum `json:"type,omitempty"`
}

// ListCommerceCustomersLinksSourceModifiedDate - Represents a customer who has placed an order in the commerce system"
type ListCommerceCustomersLinksSourceModifiedDate struct {
	// Addresses of the customer
	Addresses []ListCommerceCustomersLinksSourceModifiedDateAddress `json:"addresses,omitempty"`
	// The date the entity was created.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// Name of the customer
	CustomerName    *string `json:"customerName,omitempty"`
	DefaultCurrency *string `json:"defaultCurrency,omitempty"`
	// Email address of the customer
	EmailAddress *string `json:"emailAddress,omitempty"`
	// A unique, persistent identifier for this record
	ID string `json:"id"`
	// The date on which this record was last modified in Codat.
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Any additional information about the customer
	Note *string `json:"note,omitempty"`
	// A phone number
	Phone *string `json:"phone,omitempty"`
	// The date on which this record was last modified in the originating system
	SourceModifiedDate *time.Time `json:"sourceModifiedDate,omitempty"`
}

// ListCommerceCustomersLinks - Codat's Paging Model
type ListCommerceCustomersLinks struct {
	Links        ListCommerceCustomersLinksLinks                `json:"_links"`
	PageNumber   int64                                          `json:"pageNumber"`
	PageSize     int64                                          `json:"pageSize"`
	Results      []ListCommerceCustomersLinksSourceModifiedDate `json:"results,omitempty"`
	TotalResults int64                                          `json:"totalResults"`
}

type ListCommerceCustomersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Links *ListCommerceCustomersLinks
}
