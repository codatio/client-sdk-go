// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FinancialMetricsPeriodUnitEnum string

const (
	FinancialMetricsPeriodUnitEnumMonth FinancialMetricsPeriodUnitEnum = "Month"
	FinancialMetricsPeriodUnitEnumWeek  FinancialMetricsPeriodUnitEnum = "Week"
	FinancialMetricsPeriodUnitEnumDay   FinancialMetricsPeriodUnitEnum = "Day"
)

func (e FinancialMetricsPeriodUnitEnum) ToPointer() *FinancialMetricsPeriodUnitEnum {
	return &e
}

func (e *FinancialMetricsPeriodUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Month":
		fallthrough
	case "Week":
		fallthrough
	case "Day":
		*e = FinancialMetricsPeriodUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FinancialMetricsPeriodUnitEnum: %v", v)
	}
}

// FinancialMetrics - OK
type FinancialMetrics struct {
	// The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
	//
	// ## Unknown currencies
	//
	// In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction.
	//
	// There are only a very small number of edge cases where this currency code is returned by the Codat system.
	Currency *string `json:"currency,omitempty"`
	// If there are no errors, an empty array is returned.
	Errors     []FinancialMetricError          `json:"errors,omitempty"`
	Metrics    []FinancialMetric               `json:"metrics,omitempty"`
	PeriodUnit *FinancialMetricsPeriodUnitEnum `json:"periodUnit,omitempty"`
}
