// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaymentLinkTypeEnum - Types of payment line links, either:
// `Unknown`
// `Unlinked` - Not used
// `Invoice` - ID refers to the invoice
// `CreditNote` - ID refers to the credit note
// `Refund` - ID refers to the sibling payment
// `Payment` - ID refers to the sibling payment
// `PaymentOnAccount` - ID refers to the customer
// `Other` - ID refers to the customer
// `Manual Journal`
// `Discount` - ID refers to the payment
type PaymentLinkTypeEnum string

const (
	PaymentLinkTypeEnumUnknown          PaymentLinkTypeEnum = "Unknown"
	PaymentLinkTypeEnumUnlinked         PaymentLinkTypeEnum = "Unlinked"
	PaymentLinkTypeEnumInvoice          PaymentLinkTypeEnum = "Invoice"
	PaymentLinkTypeEnumCreditNote       PaymentLinkTypeEnum = "CreditNote"
	PaymentLinkTypeEnumOther            PaymentLinkTypeEnum = "Other"
	PaymentLinkTypeEnumRefund           PaymentLinkTypeEnum = "Refund"
	PaymentLinkTypeEnumPayment          PaymentLinkTypeEnum = "Payment"
	PaymentLinkTypeEnumPaymentOnAccount PaymentLinkTypeEnum = "PaymentOnAccount"
	PaymentLinkTypeEnumManualJournal    PaymentLinkTypeEnum = "ManualJournal"
	PaymentLinkTypeEnumDiscount         PaymentLinkTypeEnum = "Discount"
)

func (e *PaymentLinkTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Unlinked":
		fallthrough
	case "Invoice":
		fallthrough
	case "CreditNote":
		fallthrough
	case "Other":
		fallthrough
	case "Refund":
		fallthrough
	case "Payment":
		fallthrough
	case "PaymentOnAccount":
		fallthrough
	case "ManualJournal":
		fallthrough
	case "Discount":
		*e = PaymentLinkTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentLinkTypeEnum: %s", s)
	}
}
