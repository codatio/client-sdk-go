// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IntegrityStatusEnum - The current status of the most recently run matching algorithm.
type IntegrityStatusEnum string

const (
	IntegrityStatusEnumUnknown      IntegrityStatusEnum = "Unknown"
	IntegrityStatusEnumDoesNotExist IntegrityStatusEnum = "DoesNotExist"
	IntegrityStatusEnumError        IntegrityStatusEnum = "Error"
	IntegrityStatusEnumComplete     IntegrityStatusEnum = "Complete"
)

func (e IntegrityStatusEnum) ToPointer() *IntegrityStatusEnum {
	return &e
}

func (e *IntegrityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "DoesNotExist":
		fallthrough
	case "Error":
		fallthrough
	case "Complete":
		*e = IntegrityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntegrityStatusEnum: %v", v)
	}
}
