// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/platform/v4/pkg/models/shared"
	"net/http"
)

type ConfigureCustomDataTypeRequest struct {
	// Custom data type configuration for the specified platform.
	CustomDataTypeConfiguration *shared.CustomDataTypeConfiguration `request:"mediaType=application/json"`
	// Unique identifier for a custom data type.
	CustomDataIdentifier string `pathParam:"style=simple,explode=false,name=customDataIdentifier"`
	// A unique 4-letter key to represent a platform in each integration.
	PlatformKey string `pathParam:"style=simple,explode=false,name=platformKey"`
}

func (o *ConfigureCustomDataTypeRequest) GetCustomDataTypeConfiguration() *shared.CustomDataTypeConfiguration {
	if o == nil {
		return nil
	}
	return o.CustomDataTypeConfiguration
}

func (o *ConfigureCustomDataTypeRequest) GetCustomDataIdentifier() string {
	if o == nil {
		return ""
	}
	return o.CustomDataIdentifier
}

func (o *ConfigureCustomDataTypeRequest) GetPlatformKey() string {
	if o == nil {
		return ""
	}
	return o.PlatformKey
}

type ConfigureCustomDataTypeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	CustomDataTypeConfiguration *shared.CustomDataTypeConfiguration
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ConfigureCustomDataTypeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ConfigureCustomDataTypeResponse) GetCustomDataTypeConfiguration() *shared.CustomDataTypeConfiguration {
	if o == nil {
		return nil
	}
	return o.CustomDataTypeConfiguration
}

func (o *ConfigureCustomDataTypeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConfigureCustomDataTypeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
