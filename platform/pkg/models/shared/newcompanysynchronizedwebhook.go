// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// NewCompanySynchronizedWebhook - Webhook request body to notify that a new company has successfully synchronized at least one dataType for the first time.
type NewCompanySynchronizedWebhook struct {
	// Unique identifier of the webhook event.
	AlertID *string `json:"AlertId,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID *string `json:"CompanyId,omitempty"`
	// A human readable message about the webhook.
	Message *string `json:"Message,omitempty"`
	// Unique identifier for the rule.
	RuleID *string `json:"RuleId,omitempty"`
	// The type of rule.
	Type *string `json:"Type,omitempty"`
}

func (o *NewCompanySynchronizedWebhook) GetAlertID() *string {
	if o == nil {
		return nil
	}
	return o.AlertID
}

func (o *NewCompanySynchronizedWebhook) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *NewCompanySynchronizedWebhook) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *NewCompanySynchronizedWebhook) GetRuleID() *string {
	if o == nil {
		return nil
	}
	return o.RuleID
}

func (o *NewCompanySynchronizedWebhook) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
