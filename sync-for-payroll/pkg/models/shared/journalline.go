// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/sync-for-payroll/pkg/types"
	"github.com/ericlagergren/decimal"
)

// JournalLineTracking - List of record refs associated with the tracking information for the line (eg to a Tracking Category, or customer etc.)
type JournalLineTracking struct {
	RecordRefs []RecordRef `json:"recordRefs,omitempty"`
}

func (o *JournalLineTracking) GetRecordRefs() []RecordRef {
	if o == nil {
		return nil
	}
	return o.RecordRefs
}

type JournalLine struct {
	// Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.
	AccountRef *AccountRef `json:"accountRef,omitempty"`
	// Currency for the journal line item.
	Currency *string `json:"currency,omitempty"`
	// Description of the journal line item.
	Description *string `json:"description,omitempty"`
	// Amount for the journal line. Debit entries are considered positive, and credit entries are considered negative.
	NetAmount types.Decimal `json:"netAmount"`
	// List of record refs associated with the tracking information for the line (eg to a Tracking Category, or customer etc.)
	Tracking *JournalLineTracking `json:"tracking,omitempty"`
}

func (o *JournalLine) GetAccountRef() *AccountRef {
	if o == nil {
		return nil
	}
	return o.AccountRef
}

func (o *JournalLine) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *JournalLine) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *JournalLine) GetNetAmount() types.Decimal {
	if o == nil {
		return types.Decimal{Big: *(new(decimal.Big).SetFloat64(0.0))}
	}
	return o.NetAmount
}

func (o *JournalLine) GetTracking() *JournalLineTracking {
	if o == nil {
		return nil
	}
	return o.Tracking
}
