// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Source - The source of the banking data that determines its format
type Source string

const (
	SourceCodat Source = "codat"
)

func (e Source) ToPointer() *Source {
	return &e
}
func (e *Source) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "codat":
		*e = Source(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Source: %v", v)
	}
}

// BankStatementUploadConfiguration - Configuration settings for uploading banking data to Codat
type BankStatementUploadConfiguration struct {
	// The ID of the account in the third-party platform
	AccountID *string `json:"accountId,omitempty"`
	// TrueLayer provider ID (only required if source is TrueLayer)
	ProviderID *string `json:"providerId,omitempty"`
	// The source of the banking data that determines its format
	Source *Source `json:"source,omitempty"`
}

func (o *BankStatementUploadConfiguration) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BankStatementUploadConfiguration) GetProviderID() *string {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *BankStatementUploadConfiguration) GetSource() *Source {
	if o == nil {
		return nil
	}
	return o.Source
}
