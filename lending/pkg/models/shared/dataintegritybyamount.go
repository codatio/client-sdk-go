// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/lending/pkg/types"
)

type DataIntegrityByAmount struct {
	// The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
	//
	// ## Unknown currencies
	//
	// In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction.
	//
	// There are only a very small number of edge cases where this currency code is returned by the Codat system.
	Currency *string `json:"currency,omitempty"`
	// The percentage of the absolute value of transactions of the type specified in the route which have a match.
	MatchPercentage *types.Decimal `json:"matchPercentage,omitempty"`
	// The sum of the absolute value of transactions of the type specified in the route which have a match.
	Matched *types.Decimal `json:"matched,omitempty"`
	// The total of unmatched and matched.
	Total *types.Decimal `json:"total,omitempty"`
	// The sum of the absolute value of transactions of the type specified in the route which don't have a match.
	Unmatched *types.Decimal `json:"unmatched,omitempty"`
}

func (o *DataIntegrityByAmount) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *DataIntegrityByAmount) GetMatchPercentage() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.MatchPercentage
}

func (o *DataIntegrityByAmount) GetMatched() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.Matched
}

func (o *DataIntegrityByAmount) GetTotal() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *DataIntegrityByAmount) GetUnmatched() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.Unmatched
}
