// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WebLinkType - The type of the weblink.
type WebLinkType string

const (
	WebLinkTypeWebsite WebLinkType = "Website"
	WebLinkTypeSocial  WebLinkType = "Social"
	WebLinkTypeUnknown WebLinkType = "Unknown"
)

func (e WebLinkType) ToPointer() *WebLinkType {
	return &e
}
func (e *WebLinkType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Website":
		fallthrough
	case "Social":
		fallthrough
	case "Unknown":
		*e = WebLinkType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebLinkType: %v", v)
	}
}

// WebLink - Weblink associated with the company.
type WebLink struct {
	// The type of the weblink.
	Type *WebLinkType `json:"type,omitempty"`
	// The full URL for the weblink.
	URL *string `json:"url,omitempty"`
}

func (o *WebLink) GetType() *WebLinkType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *WebLink) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}
