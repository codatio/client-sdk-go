// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataIntegrityDataType string

const (
	DataIntegrityDataTypeBankingAccounts     DataIntegrityDataType = "banking-accounts"
	DataIntegrityDataTypeBankingTransactions DataIntegrityDataType = "banking-transactions"
	DataIntegrityDataTypeBankAccounts        DataIntegrityDataType = "bankAccounts"
	DataIntegrityDataTypeAccountTransactions DataIntegrityDataType = "accountTransactions"
)

func (e DataIntegrityDataType) ToPointer() *DataIntegrityDataType {
	return &e
}
func (e *DataIntegrityDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "banking-accounts":
		fallthrough
	case "banking-transactions":
		fallthrough
	case "bankAccounts":
		fallthrough
	case "accountTransactions":
		*e = DataIntegrityDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataIntegrityDataType: %v", v)
	}
}
