// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/lending/pkg/models/shared"
	"net/http"
)

type GetEnhancedBalanceSheetAccountsRequest struct {
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// The number of periods to return. If not provided, 12 periods will be used as the default value.
	NumberOfPeriods *int64 `queryParam:"style=form,explode=true,name=numberOfPeriods"`
	// The date in which the report is created up to. Users must specify a specific date, however the response will be provided for the full month.
	ReportDate string `queryParam:"style=form,explode=true,name=reportDate"`
}

func (o *GetEnhancedBalanceSheetAccountsRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *GetEnhancedBalanceSheetAccountsRequest) GetNumberOfPeriods() *int64 {
	if o == nil {
		return nil
	}
	return o.NumberOfPeriods
}

func (o *GetEnhancedBalanceSheetAccountsRequest) GetReportDate() string {
	if o == nil {
		return ""
	}
	return o.ReportDate
}

type GetEnhancedBalanceSheetAccountsResponse struct {
	ContentType string
	// OK
	EnhancedFinancialReport *shared.EnhancedFinancialReport
	// Your API request was not properly authorized.
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
}

func (o *GetEnhancedBalanceSheetAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetEnhancedBalanceSheetAccountsResponse) GetEnhancedFinancialReport() *shared.EnhancedFinancialReport {
	if o == nil {
		return nil
	}
	return o.EnhancedFinancialReport
}

func (o *GetEnhancedBalanceSheetAccountsResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *GetEnhancedBalanceSheetAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetEnhancedBalanceSheetAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
