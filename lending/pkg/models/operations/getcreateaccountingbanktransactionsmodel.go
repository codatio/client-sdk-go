// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/lending/pkg/models/shared"
	"net/http"
)

type GetCreateAccountingBankTransactionsModelRequest struct {
	// Unique identifier for an account
	AccountID    string `pathParam:"style=simple,explode=false,name=accountId"`
	CompanyID    string `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID string `pathParam:"style=simple,explode=false,name=connectionId"`
}

func (o *GetCreateAccountingBankTransactionsModelRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *GetCreateAccountingBankTransactionsModelRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *GetCreateAccountingBankTransactionsModelRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

// GetCreateAccountingBankTransactionsModelPushOption - Success
type GetCreateAccountingBankTransactionsModelPushOption struct {
	Description *string                                                                                                                                                                                                                                          `json:"description,omitempty"`
	DisplayName string                                                                                                                                                                                                                                           `json:"displayName"`
	Options     []shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionChoice            `json:"options,omitempty"`
	Properties  map[string]shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionProperty `json:"properties,omitempty"`
	Required    bool                                                                                                                                                                                                                                             `json:"required"`
	Type        shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionType                `json:"type"`
	Validation  *shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushValidationInfo           `json:"validation,omitempty"`
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetOptions() []shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionChoice {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetProperties() map[string]shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionProperty {
	if o == nil {
		return nil
	}
	return o.Properties
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetRequired() bool {
	if o == nil {
		return false
	}
	return o.Required
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetType() shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionType {
	if o == nil {
		return shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionType("")
	}
	return o.Type
}

func (o *GetCreateAccountingBankTransactionsModelPushOption) GetValidation() *shared.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1bankAccounts1Percent7BaccountIDPercent7D1bankTransactionsGetResponses200ContentApplication1jsonSchemaDefinitionsPushValidationInfo {
	if o == nil {
		return nil
	}
	return o.Validation
}

type GetCreateAccountingBankTransactionsModelResponse struct {
	ContentType string
	// Your API request was not properly authorized.
	ErrorMessage *shared.ErrorMessage
	// Success
	PushOption  *GetCreateAccountingBankTransactionsModelPushOption
	StatusCode  int
	RawResponse *http.Response
}

func (o *GetCreateAccountingBankTransactionsModelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCreateAccountingBankTransactionsModelResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *GetCreateAccountingBankTransactionsModelResponse) GetPushOption() *GetCreateAccountingBankTransactionsModelPushOption {
	if o == nil {
		return nil
	}
	return o.PushOption
}

func (o *GetCreateAccountingBankTransactionsModelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCreateAccountingBankTransactionsModelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
