// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaxRateStatus - Status of the tax rate in the accounting software.
// - `Active` - An active tax rate in use by a company.
// - `Archived` - A tax rate that has been archived or is inactive in the accounting software.
// - `Unknown` - Where the status of the tax rate cannot be determined from the underlying platform.
type TaxRateStatus string

const (
	TaxRateStatusUnknown  TaxRateStatus = "Unknown"
	TaxRateStatusActive   TaxRateStatus = "Active"
	TaxRateStatusArchived TaxRateStatus = "Archived"
)

func (e TaxRateStatus) ToPointer() *TaxRateStatus {
	return &e
}
func (e *TaxRateStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = TaxRateStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxRateStatus: %v", v)
	}
}
