// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TrackingRecordRefDataType - Name of underlying data type.
type TrackingRecordRefDataType string

const (
	TrackingRecordRefDataTypeCustomers          TrackingRecordRefDataType = "customers"
	TrackingRecordRefDataTypeSuppliers          TrackingRecordRefDataType = "suppliers"
	TrackingRecordRefDataTypeTrackingCategories TrackingRecordRefDataType = "trackingCategories"
)

func (e TrackingRecordRefDataType) ToPointer() *TrackingRecordRefDataType {
	return &e
}
func (e *TrackingRecordRefDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customers":
		fallthrough
	case "suppliers":
		fallthrough
	case "trackingCategories":
		*e = TrackingRecordRefDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrackingRecordRefDataType: %v", v)
	}
}

// TrackingRecordRef - Links to the customer or tracking category.
type TrackingRecordRef struct {
	// Name of underlying data type.
	DataType *TrackingRecordRefDataType `json:"dataType,omitempty"`
	// 'id' of the underlying record or data type.
	ID *string `json:"id,omitempty"`
}

func (o *TrackingRecordRef) GetDataType() *TrackingRecordRefDataType {
	if o == nil {
		return nil
	}
	return o.DataType
}

func (o *TrackingRecordRef) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}
