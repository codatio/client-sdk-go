// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-commerce-version-1/pkg/utils"
	"github.com/ericlagergren/decimal"
)

// TaxComponentRef - Taxes rates reference object depending on the rates being available on source commerce package.
type TaxComponentRef struct {
	// The unique identitifer of the tax component being referenced.
	ID string `json:"id"`
	// Name of the tax component being referenced.
	Name string `json:"name"`
}

func (o *TaxComponentRef) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TaxComponentRef) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type TaxeItems struct {
	// Tax amount on order line sale as available from source commerce platform.
	Rate *decimal.Big `decimal:"number" json:"rate,omitempty"`
	// Taxes rates reference object depending on the rates being available on source commerce package.
	TaxComponentRef *TaxComponentRef `json:"taxComponentRef,omitempty"`
}

func (t TaxeItems) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaxeItems) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaxeItems) GetRate() *decimal.Big {
	if o == nil {
		return nil
	}
	return o.Rate
}

func (o *TaxeItems) GetTaxComponentRef() *TaxComponentRef {
	if o == nil {
		return nil
	}
	return o.TaxComponentRef
}
