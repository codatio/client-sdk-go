// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CommercePaymentMethodStatus - Status of the Payment Method.
type CommercePaymentMethodStatus string

const (
	CommercePaymentMethodStatusUnknown  CommercePaymentMethodStatus = "Unknown"
	CommercePaymentMethodStatusActive   CommercePaymentMethodStatus = "Active"
	CommercePaymentMethodStatusArchived CommercePaymentMethodStatus = "Archived"
)

func (e CommercePaymentMethodStatus) ToPointer() *CommercePaymentMethodStatus {
	return &e
}

func (e *CommercePaymentMethodStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "Active":
		fallthrough
	case "Archived":
		*e = CommercePaymentMethodStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommercePaymentMethodStatus: %v", v)
	}
}

// CommercePaymentMethod - A Payment Method represents the payment method(s) used to make payments.
//
// Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=commerce-paymentMethods) for this data type.
type CommercePaymentMethod struct {
	// A unique, persistent identifier for this record
	ID           string  `json:"id"`
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// The name of the PaymentMethod
	Name               *string `json:"name,omitempty"`
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Status of the Payment Method.
	Status *CommercePaymentMethodStatus `json:"status,omitempty"`
}

func (o *CommercePaymentMethod) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CommercePaymentMethod) GetModifiedDate() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedDate
}

func (o *CommercePaymentMethod) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CommercePaymentMethod) GetSourceModifiedDate() *string {
	if o == nil {
		return nil
	}
	return o.SourceModifiedDate
}

func (o *CommercePaymentMethod) GetStatus() *CommercePaymentMethodStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
