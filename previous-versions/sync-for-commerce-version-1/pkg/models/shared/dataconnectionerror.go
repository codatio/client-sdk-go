// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorStatus - The current status of a transient error. Null statuses indicate that the error is not transient.
type ErrorStatus string

const (
	ErrorStatusActive   ErrorStatus = "Active"
	ErrorStatusResolved ErrorStatus = "Resolved"
)

func (e ErrorStatus) ToPointer() *ErrorStatus {
	return &e
}
func (e *ErrorStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Active":
		fallthrough
	case "Resolved":
		*e = ErrorStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorStatus: %v", v)
	}
}

type DataConnectionError struct {
	// A message about a error returned by Codat.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	ErroredOnUtc *string `json:"erroredOnUtc,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	ResolvedOnUtc *string `json:"resolvedOnUtc,omitempty"`
	// The current status of a transient error. Null statuses indicate that the error is not transient.
	Status *ErrorStatus `json:"status,omitempty"`
	// The HTTP status code returned by the source platform when the error occurred.
	StatusCode *string `json:"statusCode,omitempty"`
	// A non-numeric status code/text returned by the source platform when the error occurred.
	StatusText *string `json:"statusText,omitempty"`
}

func (o *DataConnectionError) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *DataConnectionError) GetErroredOnUtc() *string {
	if o == nil {
		return nil
	}
	return o.ErroredOnUtc
}

func (o *DataConnectionError) GetResolvedOnUtc() *string {
	if o == nil {
		return nil
	}
	return o.ResolvedOnUtc
}

func (o *DataConnectionError) GetStatus() *ErrorStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DataConnectionError) GetStatusCode() *string {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *DataConnectionError) GetStatusText() *string {
	if o == nil {
		return nil
	}
	return o.StatusText
}
