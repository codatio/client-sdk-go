// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-commerce-version-1/pkg/models/shared"
	"net/http"
)

type CreateAccountingCreditNoteRequest struct {
	AccountingCreditNote *shared.AccountingCreditNote `request:"mediaType=application/json"`
	CompanyID            string                       `pathParam:"style=simple,explode=false,name=companyId"`
	ConnectionID         string                       `pathParam:"style=simple,explode=false,name=connectionId"`
	TimeoutInMinutes     *int                         `queryParam:"style=form,explode=true,name=timeoutInMinutes"`
}

func (o *CreateAccountingCreditNoteRequest) GetAccountingCreditNote() *shared.AccountingCreditNote {
	if o == nil {
		return nil
	}
	return o.AccountingCreditNote
}

func (o *CreateAccountingCreditNoteRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *CreateAccountingCreditNoteRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *CreateAccountingCreditNoteRequest) GetTimeoutInMinutes() *int {
	if o == nil {
		return nil
	}
	return o.TimeoutInMinutes
}

type CreateAccountingCreditNoteResponse struct {
	// Success
	AccountingCreateCreditNoteResponse *shared.AccountingCreateCreditNoteResponse
	ContentType                        string
	// The request made is not valid.
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
}

func (o *CreateAccountingCreditNoteResponse) GetAccountingCreateCreditNoteResponse() *shared.AccountingCreateCreditNoteResponse {
	if o == nil {
		return nil
	}
	return o.AccountingCreateCreditNoteResponse
}

func (o *CreateAccountingCreditNoteResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateAccountingCreditNoteResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *CreateAccountingCreditNoteResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateAccountingCreditNoteResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
