// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-commerce-version-1/pkg/models/shared"
	"net/http"
)

type GetVisibleAccountsRequest struct {
	ClientID    string `pathParam:"style=simple,explode=false,name=clientId"`
	PlatformKey string `pathParam:"style=simple,explode=false,name=platformKey"`
}

func (o *GetVisibleAccountsRequest) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *GetVisibleAccountsRequest) GetPlatformKey() string {
	if o == nil {
		return ""
	}
	return o.PlatformKey
}

type GetVisibleAccountsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	VisibleAccounts *shared.VisibleAccounts
}

func (o *GetVisibleAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetVisibleAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetVisibleAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetVisibleAccountsResponse) GetVisibleAccounts() *shared.VisibleAccounts {
	if o == nil {
		return nil
	}
	return o.VisibleAccounts
}
