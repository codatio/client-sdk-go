// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ItemReceiptStatus - Current status of the item receipt.
type ItemReceiptStatus string

const (
	ItemReceiptStatusUnknown  ItemReceiptStatus = "Unknown"
	ItemReceiptStatusDraft    ItemReceiptStatus = "Draft"
	ItemReceiptStatusReceived ItemReceiptStatus = "Received"
	ItemReceiptStatusRejected ItemReceiptStatus = "Rejected"
	ItemReceiptStatusVoid     ItemReceiptStatus = "Void"
)

func (e ItemReceiptStatus) ToPointer() *ItemReceiptStatus {
	return &e
}
func (e *ItemReceiptStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "Draft":
		fallthrough
	case "Received":
		fallthrough
	case "Rejected":
		fallthrough
	case "Void":
		*e = ItemReceiptStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ItemReceiptStatus: %v", v)
	}
}
