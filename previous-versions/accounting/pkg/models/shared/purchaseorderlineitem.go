// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/previous-versions/accounting/pkg/types"
)

type PurchaseOrderLineItem struct {
	// Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.
	AccountRef *AccountRef `json:"accountRef,omitempty"`
	// Description of the goods / services that have been ordered.
	Description *string `json:"description,omitempty"`
	// Value of any discounts applied.
	DiscountAmount *types.Decimal `json:"discountAmount,omitempty"`
	// Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
	DiscountPercentage *types.Decimal `json:"discountPercentage,omitempty"`
	ItemRef            *ItemRef       `json:"itemRef,omitempty"`
	// Number of units that have been ordered.
	Quantity *types.Decimal `json:"quantity,omitempty"`
	// Amount of the line, inclusive of discounts but exclusive of tax.
	SubTotal *types.Decimal `json:"subTotal,omitempty"`
	// Amount of tax for the line.
	TaxAmount *types.Decimal `json:"taxAmount,omitempty"`
	// Data types that reference a tax rate, for example invoice and bill line items, use a taxRateRef that includes the ID and name of the linked tax rate.
	//
	// Found on:
	//
	// - Bill line items
	// - Bill Credit Note line items
	// - Credit Note line items
	// - Direct incomes line items
	// - Invoice line items
	// - Items
	TaxRateRef *TaxRateRef `json:"taxRateRef,omitempty"`
	// Total amount of the line, inclusive of discounts and tax.
	TotalAmount *types.Decimal `json:"totalAmount,omitempty"`
	// Reference to the tracking categories to which the line item is linked.
	TrackingCategoryRefs []TrackingCategoryRef `json:"trackingCategoryRefs,omitempty"`
	// Price of each unit.
	UnitAmount *types.Decimal `json:"unitAmount,omitempty"`
}

func (o *PurchaseOrderLineItem) GetAccountRef() *AccountRef {
	if o == nil {
		return nil
	}
	return o.AccountRef
}

func (o *PurchaseOrderLineItem) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PurchaseOrderLineItem) GetDiscountAmount() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.DiscountAmount
}

func (o *PurchaseOrderLineItem) GetDiscountPercentage() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.DiscountPercentage
}

func (o *PurchaseOrderLineItem) GetItemRef() *ItemRef {
	if o == nil {
		return nil
	}
	return o.ItemRef
}

func (o *PurchaseOrderLineItem) GetQuantity() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.Quantity
}

func (o *PurchaseOrderLineItem) GetSubTotal() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.SubTotal
}

func (o *PurchaseOrderLineItem) GetTaxAmount() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.TaxAmount
}

func (o *PurchaseOrderLineItem) GetTaxRateRef() *TaxRateRef {
	if o == nil {
		return nil
	}
	return o.TaxRateRef
}

func (o *PurchaseOrderLineItem) GetTotalAmount() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.TotalAmount
}

func (o *PurchaseOrderLineItem) GetTrackingCategoryRefs() []TrackingCategoryRef {
	if o == nil {
		return nil
	}
	return o.TrackingCategoryRefs
}

func (o *PurchaseOrderLineItem) GetUnitAmount() *types.Decimal {
	if o == nil {
		return nil
	}
	return o.UnitAmount
}
