// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SalesOrderInvoiceStatus - If the sales order is converted to an invoice, or will be in future, the invoicingStatus field indicates the current stage of the invoicing process.
type SalesOrderInvoiceStatus string

const (
	SalesOrderInvoiceStatusUnknown           SalesOrderInvoiceStatus = "Unknown"
	SalesOrderInvoiceStatusPartiallyInvoiced SalesOrderInvoiceStatus = "PartiallyInvoiced"
	SalesOrderInvoiceStatusInvoiced          SalesOrderInvoiceStatus = "Invoiced"
	SalesOrderInvoiceStatusNotInvoiced       SalesOrderInvoiceStatus = "NotInvoiced"
)

func (e SalesOrderInvoiceStatus) ToPointer() *SalesOrderInvoiceStatus {
	return &e
}
func (e *SalesOrderInvoiceStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "PartiallyInvoiced":
		fallthrough
	case "Invoiced":
		fallthrough
	case "NotInvoiced":
		*e = SalesOrderInvoiceStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SalesOrderInvoiceStatus: %v", v)
	}
}
