// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SalesOrderRefDataType - The underlying data type associated to the reference `id`.
type SalesOrderRefDataType string

const (
	SalesOrderRefDataTypeSalesOrders SalesOrderRefDataType = "salesOrders"
)

func (e SalesOrderRefDataType) ToPointer() *SalesOrderRefDataType {
	return &e
}
func (e *SalesOrderRefDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "salesOrders":
		*e = SalesOrderRefDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SalesOrderRefDataType: %v", v)
	}
}

type SalesOrderRef struct {
	// The underlying data type associated to the reference `id`.
	DataType *SalesOrderRefDataType `json:"dataType,omitempty"`
	// Unique identifier to a record in `dataType`.
	ID *string `json:"id,omitempty"`
}

func (o *SalesOrderRef) GetDataType() *SalesOrderRefDataType {
	if o == nil {
		return nil
	}
	return o.DataType
}

func (o *SalesOrderRef) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}
