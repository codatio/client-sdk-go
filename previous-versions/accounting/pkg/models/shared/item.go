// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Item - > View the coverage for items in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items" target="_blank">Data coverage explorer</a>.
//
// ## Overview
//
// **Items** allow your customers to save and track details of the products and services that they buy and sell.
type Item struct {
	// Item details that are only for bills.
	BillItem *BillItem `json:"billItem,omitempty"`
	// Friendly reference for the item.
	Code *string `json:"code,omitempty"`
	// Identifier for the item that is unique to a company in the accounting software.
	ID *string `json:"id,omitempty"`
	// Item details that are only for bills.
	InvoiceItem *InvoiceItem `json:"invoiceItem,omitempty"`
	// Whether you can use this item for bills.
	IsBillItem bool `json:"isBillItem"`
	// Whether you can use this item for invoices.
	IsInvoiceItem bool `json:"isInvoiceItem"`
	// Current state of the item, either:
	//
	// - `Active`: Available for use
	// - `Archived`: Unavailable
	// - `Unknown`
	//
	// Due to a [limitation in Xero's API](https://docs.codat.io/integrations/accounting/xero/xero-faq#why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`.
	ItemStatus   ItemStatus `json:"itemStatus"`
	Metadata     *Metadata  `json:"metadata,omitempty"`
	ModifiedDate *string    `json:"modifiedDate,omitempty"`
	// Name of the item in the accounting software.
	Name               *string `json:"name,omitempty"`
	SourceModifiedDate *string `json:"sourceModifiedDate,omitempty"`
	// Supplemental data is additional data you can include in our standard data types.
	//
	// It is referenced as a configured dynamic key value pair that is unique to the accounting software. [Learn more](https://docs.codat.io/using-the-api/supplemental-data/overview) about supplemental data.
	SupplementalData *SupplementalData `json:"supplementalData,omitempty"`
	// Type of the item.
	Type ItemType `json:"type"`
}

func (o *Item) GetBillItem() *BillItem {
	if o == nil {
		return nil
	}
	return o.BillItem
}

func (o *Item) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *Item) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Item) GetInvoiceItem() *InvoiceItem {
	if o == nil {
		return nil
	}
	return o.InvoiceItem
}

func (o *Item) GetIsBillItem() bool {
	if o == nil {
		return false
	}
	return o.IsBillItem
}

func (o *Item) GetIsInvoiceItem() bool {
	if o == nil {
		return false
	}
	return o.IsInvoiceItem
}

func (o *Item) GetItemStatus() ItemStatus {
	if o == nil {
		return ItemStatus("")
	}
	return o.ItemStatus
}

func (o *Item) GetMetadata() *Metadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Item) GetModifiedDate() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedDate
}

func (o *Item) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Item) GetSourceModifiedDate() *string {
	if o == nil {
		return nil
	}
	return o.SourceModifiedDate
}

func (o *Item) GetSupplementalData() *SupplementalData {
	if o == nil {
		return nil
	}
	return o.SupplementalData
}

func (o *Item) GetType() ItemType {
	if o == nil {
		return ItemType("")
	}
	return o.Type
}
