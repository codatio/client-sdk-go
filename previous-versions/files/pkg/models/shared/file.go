// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/previous-versions/files/pkg/utils"
)

type File struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// An optional display name for the file.
	DisplayName *string `json:"displayName,omitempty"`
	// The file's name.
	FileName *string `json:"fileName,omitempty"`
	// The source of the file uploaded.
	SourceType *string `json:"sourceType,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	Uploaded *string `json:"uploaded,omitempty"`
}

func (f File) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *File) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *File) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *File) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *File) GetFileName() *string {
	if o == nil {
		return nil
	}
	return o.FileName
}

func (o *File) GetSourceType() *string {
	if o == nil {
		return nil
	}
	return o.SourceType
}

func (o *File) GetUploaded() *string {
	if o == nil {
		return nil
	}
	return o.Uploaded
}
