// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/codatio/client-sdk-go/previous-versions/assess/pkg/models/shared"
	"net/http"
)

// ListLoanTransactionsQueryParamSourceType - Data source type
type ListLoanTransactionsQueryParamSourceType string

const (
	ListLoanTransactionsQueryParamSourceTypeBanking    ListLoanTransactionsQueryParamSourceType = "banking"
	ListLoanTransactionsQueryParamSourceTypeCommerce   ListLoanTransactionsQueryParamSourceType = "commerce"
	ListLoanTransactionsQueryParamSourceTypeAccounting ListLoanTransactionsQueryParamSourceType = "accounting"
)

func (e ListLoanTransactionsQueryParamSourceType) ToPointer() *ListLoanTransactionsQueryParamSourceType {
	return &e
}

func (e *ListLoanTransactionsQueryParamSourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "banking":
		fallthrough
	case "commerce":
		fallthrough
	case "accounting":
		*e = ListLoanTransactionsQueryParamSourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListLoanTransactionsQueryParamSourceType: %v", v)
	}
}

type ListLoanTransactionsRequest struct {
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// Data source type
	SourceType ListLoanTransactionsQueryParamSourceType `queryParam:"style=form,explode=true,name=sourceType"`
}

func (o *ListLoanTransactionsRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *ListLoanTransactionsRequest) GetSourceType() ListLoanTransactionsQueryParamSourceType {
	if o == nil {
		return ListLoanTransactionsQueryParamSourceType("")
	}
	return o.SourceType
}

type ListLoanTransactionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	LoanTransactions *shared.LoanTransactions
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListLoanTransactionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListLoanTransactionsResponse) GetLoanTransactions() *shared.LoanTransactions {
	if o == nil {
		return nil
	}
	return o.LoanTransactions
}

func (o *ListLoanTransactionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListLoanTransactionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
