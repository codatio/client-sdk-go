// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FinancialMetricErrorType string

const (
	FinancialMetricErrorTypeDataNotSynced      FinancialMetricErrorType = "DataNotSynced"
	FinancialMetricErrorTypeDataNotSupported   FinancialMetricErrorType = "DataNotSupported"
	FinancialMetricErrorTypeDataSyncFailed     FinancialMetricErrorType = "DataSyncFailed"
	FinancialMetricErrorTypeDataTypeNotEnabled FinancialMetricErrorType = "DataTypeNotEnabled"
)

func (e FinancialMetricErrorType) ToPointer() *FinancialMetricErrorType {
	return &e
}

func (e *FinancialMetricErrorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DataNotSynced":
		fallthrough
	case "DataNotSupported":
		fallthrough
	case "DataSyncFailed":
		fallthrough
	case "DataTypeNotEnabled":
		*e = FinancialMetricErrorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FinancialMetricErrorType: %v", v)
	}
}

type FinancialMetricError struct {
	Message *string                   `json:"message,omitempty"`
	Type    *FinancialMetricErrorType `json:"type,omitempty"`
}
