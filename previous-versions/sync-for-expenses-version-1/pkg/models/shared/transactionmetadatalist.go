// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-expenses-version-1/pkg/utils"
)

type TransactionMetadataList struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Links                Links                  `json:"_links"`
	// Current page number.
	PageNumber int64 `json:"pageNumber"`
	// Number of items to return in results array.
	PageSize int64                 `json:"pageSize"`
	Results  []TransactionMetadata `json:"results,omitempty"`
	// Total number of items.
	TotalResults int64 `json:"totalResults"`
}

func (t TransactionMetadataList) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransactionMetadataList) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TransactionMetadataList) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *TransactionMetadataList) GetLinks() Links {
	if o == nil {
		return Links{}
	}
	return o.Links
}

func (o *TransactionMetadataList) GetPageNumber() int64 {
	if o == nil {
		return 0
	}
	return o.PageNumber
}

func (o *TransactionMetadataList) GetPageSize() int64 {
	if o == nil {
		return 0
	}
	return o.PageSize
}

func (o *TransactionMetadataList) GetResults() []TransactionMetadata {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *TransactionMetadataList) GetTotalResults() int64 {
	if o == nil {
		return 0
	}
	return o.TotalResults
}
