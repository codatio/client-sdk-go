// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-expenses-version-1/pkg/types"
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-expenses-version-1/pkg/utils"
)

type ContactRef struct {
	// The type of contact.
	contactType *string `const:"Supplier" json:"contactType,omitempty"`
	// Identifier of supplier or customer.
	ID *string `json:"id,omitempty"`
}

func (c ContactRef) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ContactRef) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ContactRef) GetContactType() *string {
	return types.String("Supplier")
}

func (o *ContactRef) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}
