// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-expenses-version-1/pkg/models/shared"
	"net/http"
)

type IntiateSyncRequest struct {
	PostSync  *shared.PostSync `request:"mediaType=application/json"`
	CompanyID string           `pathParam:"style=simple,explode=false,name=companyId"`
}

func (o *IntiateSyncRequest) GetPostSync() *shared.PostSync {
	if o == nil {
		return nil
	}
	return o.PostSync
}

func (o *IntiateSyncRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

type IntiateSyncResponse struct {
	ContentType string
	// If model is incorrect
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
	// Returns the newly created SyncId
	SyncInitiated *shared.SyncInitiated
}

func (o *IntiateSyncResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *IntiateSyncResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *IntiateSyncResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *IntiateSyncResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *IntiateSyncResponse) GetSyncInitiated() *shared.SyncInitiated {
	if o == nil {
		return nil
	}
	return o.SyncInitiated
}
