// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/previous-versions/sync-for-expenses-version-1/pkg/models/shared"
	"net/http"
)

type UpdateExpenseDatasetRequest struct {
	UpdateExpenseRequest *shared.UpdateExpenseRequest `request:"mediaType=application/json"`
	// Unique identifier for a company.
	CompanyID string `pathParam:"style=simple,explode=false,name=companyId"`
	// The unique identifier for your SMB's transaction.
	TransactionID string `pathParam:"style=simple,explode=false,name=transactionId"`
}

func (o *UpdateExpenseDatasetRequest) GetUpdateExpenseRequest() *shared.UpdateExpenseRequest {
	if o == nil {
		return nil
	}
	return o.UpdateExpenseRequest
}

func (o *UpdateExpenseDatasetRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

func (o *UpdateExpenseDatasetRequest) GetTransactionID() string {
	if o == nil {
		return ""
	}
	return o.TransactionID
}

// UpdateExpenseDatasetResponseBody - Accepted
type UpdateExpenseDatasetResponseBody struct {
	// Unique identifier for the updated sync.
	SyncID *string `json:"syncId,omitempty"`
}

func (o *UpdateExpenseDatasetResponseBody) GetSyncID() *string {
	if o == nil {
		return nil
	}
	return o.SyncID
}

type UpdateExpenseDatasetResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Accepted
	Object *UpdateExpenseDatasetResponseBody
}

func (o *UpdateExpenseDatasetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateExpenseDatasetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateExpenseDatasetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateExpenseDatasetResponse) GetObject() *UpdateExpenseDatasetResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
