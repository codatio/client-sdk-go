// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type DataTypeWriteWebhookPayload struct {
	// Unique identifier for the uploaded attachment, null if no attachment uploaded.
	AttachmentID *string `json:"attachmentId,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	CompletedOnDate *string `json:"completedOnDate,omitempty"`
	// Unique identifier for a company's data connection.
	ConnectionID *string `json:"connectionId,omitempty"`
	// Unique identifier of the write request. This is also known as the push operation ID.
	ID               *string                     `json:"id,omitempty"`
	Record           *DataTypeWriteWebhookRecord `json:"record,omitempty"`
	ReferenceCompany *CompanyReference           `json:"referenceCompany,omitempty"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	RequestedOnDate *string `json:"requestedOnDate,omitempty"`
	// The current status of the write request, which is the same as the push operation status.
	Status *WriteStatus `json:"status,omitempty"`
	// Type of write request.
	Type *WriteType `json:"type,omitempty"`
}

func (o *DataTypeWriteWebhookPayload) GetAttachmentID() *string {
	if o == nil {
		return nil
	}
	return o.AttachmentID
}

func (o *DataTypeWriteWebhookPayload) GetCompletedOnDate() *string {
	if o == nil {
		return nil
	}
	return o.CompletedOnDate
}

func (o *DataTypeWriteWebhookPayload) GetConnectionID() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionID
}

func (o *DataTypeWriteWebhookPayload) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DataTypeWriteWebhookPayload) GetRecord() *DataTypeWriteWebhookRecord {
	if o == nil {
		return nil
	}
	return o.Record
}

func (o *DataTypeWriteWebhookPayload) GetReferenceCompany() *CompanyReference {
	if o == nil {
		return nil
	}
	return o.ReferenceCompany
}

func (o *DataTypeWriteWebhookPayload) GetRequestedOnDate() *string {
	if o == nil {
		return nil
	}
	return o.RequestedOnDate
}

func (o *DataTypeWriteWebhookPayload) GetStatus() *WriteStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DataTypeWriteWebhookPayload) GetType() *WriteType {
	if o == nil {
		return nil
	}
	return o.Type
}
