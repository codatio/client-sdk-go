// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Integration - An integration that Codat supports
type Integration struct {
	// The name of the data provider.
	DataProvidedBy   *string           `json:"dataProvidedBy,omitempty"`
	DatatypeFeatures []DataTypeFeature `json:"datatypeFeatures,omitempty"`
	// Whether this integration is enabled for your customers to use.
	Enabled bool `json:"enabled"`
	// A Codat ID representing the integration.
	IntegrationID *string `json:"integrationId,omitempty"`
	// `True` if the integration is currently in beta release.
	IsBeta *bool `json:"isBeta,omitempty"`
	// `True` if the integration is to an application installed and run locally on an SMBs computer.
	IsOfflineConnector *bool `json:"isOfflineConnector,omitempty"`
	// A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys.
	Key string `json:"key"`
	// Static url for integration's logo.
	LogoURL string `json:"logoUrl"`
	// Name of integration.
	Name string `json:"name"`
	// A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.
	SourceID *string `json:"sourceId,omitempty"`
	// The type of platform of the connection.
	SourceType *SourceType `json:"sourceType,omitempty"`
}

func (o *Integration) GetDataProvidedBy() *string {
	if o == nil {
		return nil
	}
	return o.DataProvidedBy
}

func (o *Integration) GetDatatypeFeatures() []DataTypeFeature {
	if o == nil {
		return nil
	}
	return o.DatatypeFeatures
}

func (o *Integration) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *Integration) GetIntegrationID() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationID
}

func (o *Integration) GetIsBeta() *bool {
	if o == nil {
		return nil
	}
	return o.IsBeta
}

func (o *Integration) GetIsOfflineConnector() *bool {
	if o == nil {
		return nil
	}
	return o.IsOfflineConnector
}

func (o *Integration) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *Integration) GetLogoURL() string {
	if o == nil {
		return ""
	}
	return o.LogoURL
}

func (o *Integration) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Integration) GetSourceID() *string {
	if o == nil {
		return nil
	}
	return o.SourceID
}

func (o *Integration) GetSourceType() *SourceType {
	if o == nil {
		return nil
	}
	return o.SourceType
}
