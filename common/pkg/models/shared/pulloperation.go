// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PullOperationStatusEnum string

const (
	PullOperationStatusEnumInitial            PullOperationStatusEnum = "Initial"
	PullOperationStatusEnumQueued             PullOperationStatusEnum = "Queued"
	PullOperationStatusEnumFetching           PullOperationStatusEnum = "Fetching"
	PullOperationStatusEnumMapQueued          PullOperationStatusEnum = "MapQueued"
	PullOperationStatusEnumMapping            PullOperationStatusEnum = "Mapping"
	PullOperationStatusEnumComplete           PullOperationStatusEnum = "Complete"
	PullOperationStatusEnumFetchError         PullOperationStatusEnum = "FetchError"
	PullOperationStatusEnumMapError           PullOperationStatusEnum = "MapError"
	PullOperationStatusEnumInternalError      PullOperationStatusEnum = "InternalError"
	PullOperationStatusEnumProcessingQueued   PullOperationStatusEnum = "ProcessingQueued"
	PullOperationStatusEnumProcessing         PullOperationStatusEnum = "Processing"
	PullOperationStatusEnumProcessingError    PullOperationStatusEnum = "ProcessingError"
	PullOperationStatusEnumValidationQueued   PullOperationStatusEnum = "ValidationQueued"
	PullOperationStatusEnumValidating         PullOperationStatusEnum = "Validating"
	PullOperationStatusEnumValidationError    PullOperationStatusEnum = "ValidationError"
	PullOperationStatusEnumAuthError          PullOperationStatusEnum = "AuthError"
	PullOperationStatusEnumCancelled          PullOperationStatusEnum = "Cancelled"
	PullOperationStatusEnumRouting            PullOperationStatusEnum = "Routing"
	PullOperationStatusEnumRoutingError       PullOperationStatusEnum = "RoutingError"
	PullOperationStatusEnumNotSupported       PullOperationStatusEnum = "NotSupported"
	PullOperationStatusEnumRateLimitError     PullOperationStatusEnum = "RateLimitError"
	PullOperationStatusEnumPermissionsError   PullOperationStatusEnum = "PermissionsError"
	PullOperationStatusEnumPrerequisiteNotMet PullOperationStatusEnum = "PrerequisiteNotMet"
)

func (e PullOperationStatusEnum) ToPointer() *PullOperationStatusEnum {
	return &e
}

func (e *PullOperationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Initial":
		fallthrough
	case "Queued":
		fallthrough
	case "Fetching":
		fallthrough
	case "MapQueued":
		fallthrough
	case "Mapping":
		fallthrough
	case "Complete":
		fallthrough
	case "FetchError":
		fallthrough
	case "MapError":
		fallthrough
	case "InternalError":
		fallthrough
	case "ProcessingQueued":
		fallthrough
	case "Processing":
		fallthrough
	case "ProcessingError":
		fallthrough
	case "ValidationQueued":
		fallthrough
	case "Validating":
		fallthrough
	case "ValidationError":
		fallthrough
	case "AuthError":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Routing":
		fallthrough
	case "RoutingError":
		fallthrough
	case "NotSupported":
		fallthrough
	case "RateLimitError":
		fallthrough
	case "PermissionsError":
		fallthrough
	case "PrerequisiteNotMet":
		*e = PullOperationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PullOperationStatusEnum: %v", v)
	}
}

// PullOperation - Information about a queued, in progress or completed pull operation.
// *Formally called `dataset`*
type PullOperation struct {
	CompanyID    string `json:"companyId"`
	ConnectionID string `json:"connectionId"`
	DataType     string `json:"dataType"`
	ID           string `json:"id"`
	IsCompleted  bool   `json:"isCompleted"`
	IsErrored    bool   `json:"isErrored"`
	Progress     int64  `json:"progress"`
	// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
	//
	// ```
	// 2020-10-08T22:40:50Z
	// 2021-01-01T00:00:00
	// ```
	//
	//
	//
	// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
	//
	// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
	// - Unqualified local time: `2021-11-15T01:00:00`
	// - UTC time offsets: `2021-11-15T01:00:00-05:00`
	//
	// > Time zones
	// >
	// > Not all dates from Codat will contain information about time zones.
	// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
	Requested string                  `json:"requested"`
	Status    PullOperationStatusEnum `json:"status"`
}
