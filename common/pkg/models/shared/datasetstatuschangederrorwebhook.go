// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type DatasetStatusChangedErrorWebhookData struct {
	// Data type the sync completed for.
	DataType *string `json:"dataType,omitempty"`
	// Unique identifier for the dataset that completed its sync.
	DatasetID *string `json:"datasetId,omitempty"`
	// The current status of the dataset's sync.
	DatasetStatus *string `json:"datasetStatus,omitempty"`
}

func (o *DatasetStatusChangedErrorWebhookData) GetDataType() *string {
	if o == nil {
		return nil
	}
	return o.DataType
}

func (o *DatasetStatusChangedErrorWebhookData) GetDatasetID() *string {
	if o == nil {
		return nil
	}
	return o.DatasetID
}

func (o *DatasetStatusChangedErrorWebhookData) GetDatasetStatus() *string {
	if o == nil {
		return nil
	}
	return o.DatasetStatus
}

// DatasetStatusChangedErrorWebhook - Webhook request body to notify that a data synchronization has completed.
type DatasetStatusChangedErrorWebhook struct {
	// Unique identifier of the webhook event.
	AlertID *string `json:"AlertId,omitempty"`
	// Unique identifier for your SMB in Codat.
	CompanyID *string                               `json:"CompanyId,omitempty"`
	Data      *DatasetStatusChangedErrorWebhookData `json:"Data,omitempty"`
	// A human readable message about the webhook.
	Message *string `json:"Message,omitempty"`
	// Unique identifier for the rule.
	RuleID *string `json:"RuleId,omitempty"`
	// The type of rule.
	Type *string `json:"Type,omitempty"`
}

func (o *DatasetStatusChangedErrorWebhook) GetAlertID() *string {
	if o == nil {
		return nil
	}
	return o.AlertID
}

func (o *DatasetStatusChangedErrorWebhook) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *DatasetStatusChangedErrorWebhook) GetData() *DatasetStatusChangedErrorWebhookData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *DatasetStatusChangedErrorWebhook) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *DatasetStatusChangedErrorWebhook) GetRuleID() *string {
	if o == nil {
		return nil
	}
	return o.RuleID
}

func (o *DatasetStatusChangedErrorWebhook) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
