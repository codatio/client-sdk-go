// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/codatio/client-sdk-go/common/pkg/models/shared"
	"net/http"
)

type CreateDataConnectionRequestBody struct {
	PlatformKey *string `json:"platformKey,omitempty"`
}

func (o *CreateDataConnectionRequestBody) GetPlatformKey() *string {
	if o == nil {
		return nil
	}
	return o.PlatformKey
}

type CreateDataConnectionRequest struct {
	RequestBody *CreateDataConnectionRequestBody `request:"mediaType=application/json"`
	CompanyID   string                           `pathParam:"style=simple,explode=false,name=companyId"`
}

func (o *CreateDataConnectionRequest) GetRequestBody() *CreateDataConnectionRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *CreateDataConnectionRequest) GetCompanyID() string {
	if o == nil {
		return ""
	}
	return o.CompanyID
}

type CreateDataConnectionResponse struct {
	// OK
	Connection  *shared.Connection
	ContentType string
	// Your API request was not properly authorized.
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
}

func (o *CreateDataConnectionResponse) GetConnection() *shared.Connection {
	if o == nil {
		return nil
	}
	return o.Connection
}

func (o *CreateDataConnectionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateDataConnectionResponse) GetErrorMessage() *shared.ErrorMessage {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *CreateDataConnectionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateDataConnectionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
